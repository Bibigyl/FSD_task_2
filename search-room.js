!function(e){var t={};function i(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(n,s,function(t){return e[t]}.bind(null,s));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=43)}([function(e,t,i){var n;
/*!
 * jQuery JavaScript Library v3.4.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2019-05-01T21:04Z
 */!function(t,i){"use strict";"object"==typeof e.exports?e.exports=t.document?i(t,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return i(e)}:i(t)}("undefined"!=typeof window?window:this,(function(i,s){"use strict";var a=[],r=i.document,o=Object.getPrototypeOf,l=a.slice,h=a.concat,u=a.push,c=a.indexOf,d={},f=d.toString,p=d.hasOwnProperty,m=p.toString,g=m.call(Object),v={},_=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},y=function(e){return null!=e&&e===e.window},b={type:!0,src:!0,nonce:!0,noModule:!0};function w(e,t,i){var n,s,a=(i=i||r).createElement("script");if(a.text=e,t)for(n in b)(s=t[n]||t.getAttribute&&t.getAttribute(n))&&a.setAttribute(n,s);i.head.appendChild(a).parentNode.removeChild(a)}function k(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?d[f.call(e)]||"object":typeof e}var D=function(e,t){return new D.fn.init(e,t)},x=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function C(e){var t=!!e&&"length"in e&&e.length,i=k(e);return!_(e)&&!y(e)&&("array"===i||0===t||"number"==typeof t&&t>0&&t-1 in e)}D.fn=D.prototype={jquery:"3.4.1",constructor:D,length:0,toArray:function(){return l.call(this)},get:function(e){return null==e?l.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=D.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return D.each(this,e)},map:function(e){return this.pushStack(D.map(this,(function(t,i){return e.call(t,i,t)})))},slice:function(){return this.pushStack(l.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(i>=0&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:a.sort,splice:a.splice},D.extend=D.fn.extend=function(){var e,t,i,n,s,a,r=arguments[0]||{},o=1,l=arguments.length,h=!1;for("boolean"==typeof r&&(h=r,r=arguments[o]||{},o++),"object"==typeof r||_(r)||(r={}),o===l&&(r=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)n=e[t],"__proto__"!==t&&r!==n&&(h&&n&&(D.isPlainObject(n)||(s=Array.isArray(n)))?(i=r[t],a=s&&!Array.isArray(i)?[]:s||D.isPlainObject(i)?i:{},s=!1,r[t]=D.extend(h,a,n)):void 0!==n&&(r[t]=n));return r},D.extend({expando:"jQuery"+("3.4.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==f.call(e))&&(!(t=o(e))||"function"==typeof(i=p.call(t,"constructor")&&t.constructor)&&m.call(i)===g)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){w(e,{nonce:t&&t.nonce})},each:function(e,t){var i,n=0;if(C(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},trim:function(e){return null==e?"":(e+"").replace(x,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(C(Object(e))?D.merge(i,"string"==typeof e?[e]:e):u.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:c.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,s=e.length;n<i;n++)e[s++]=t[n];return e.length=s,e},grep:function(e,t,i){for(var n=[],s=0,a=e.length,r=!i;s<a;s++)!t(e[s],s)!==r&&n.push(e[s]);return n},map:function(e,t,i){var n,s,a=0,r=[];if(C(e))for(n=e.length;a<n;a++)null!=(s=t(e[a],a,i))&&r.push(s);else for(a in e)null!=(s=t(e[a],a,i))&&r.push(s);return h.apply([],r)},guid:1,support:v}),"function"==typeof Symbol&&(D.fn[Symbol.iterator]=a[Symbol.iterator]),D.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(e,t){d["[object "+t+"]"]=t.toLowerCase()}));var M=
/*!
 * Sizzle CSS Selector Engine v2.3.4
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2019-04-08
 */
function(e){var t,i,n,s,a,r,o,l,h,u,c,d,f,p,m,g,v,_,y,b="sizzle"+1*new Date,w=e.document,k=0,D=0,x=le(),C=le(),M=le(),S=le(),T=function(e,t){return e===t&&(c=!0),0},P={}.hasOwnProperty,O=[],Y=O.pop,I=O.push,A=O.push,N=O.slice,H=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},E="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",W="[\\x20\\t\\r\\n\\f]",L="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",z="\\["+W+"*("+L+")(?:"+W+"*([*^$|!~]?=)"+W+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+L+"))|)"+W+"*\\]",R=":("+L+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+z+")*)|.*)\\)|)",F=new RegExp(W+"+","g"),j=new RegExp("^"+W+"+|((?:^|[^\\\\])(?:\\\\.)*)"+W+"+$","g"),V=new RegExp("^"+W+"*,"+W+"*"),U=new RegExp("^"+W+"*([>+~]|"+W+")"+W+"*"),B=new RegExp(W+"|>"),q=new RegExp(R),G=new RegExp("^"+L+"$"),$={ID:new RegExp("^#("+L+")"),CLASS:new RegExp("^\\.("+L+")"),TAG:new RegExp("^("+L+"|[*])"),ATTR:new RegExp("^"+z),PSEUDO:new RegExp("^"+R),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+W+"*(even|odd|(([+-]|)(\\d*)n|)"+W+"*(?:([+-]|)"+W+"*(\\d+)|))"+W+"*\\)|)","i"),bool:new RegExp("^(?:"+E+")$","i"),needsContext:new RegExp("^"+W+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+W+"*((?:-\\d)?\\d*)"+W+"*\\)|)(?=[^-]|$)","i")},K=/HTML$/i,Z=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,J=/^[^{]+\{\s*\[native \w/,Q=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\([\\da-f]{1,6}"+W+"?|("+W+")|.)","ig"),ie=function(e,t,i){var n="0x"+t-65536;return n!=n||i?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},ne=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,se=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},ae=function(){d()},re=be((function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{A.apply(O=N.call(w.childNodes),w.childNodes),O[w.childNodes.length].nodeType}catch(e){A={apply:O.length?function(e,t){I.apply(e,N.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function oe(e,t,n,s){var a,o,h,u,c,p,v,_=t&&t.ownerDocument,k=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==k&&9!==k&&11!==k)return n;if(!s&&((t?t.ownerDocument||t:w)!==f&&d(t),t=t||f,m)){if(11!==k&&(c=Q.exec(e)))if(a=c[1]){if(9===k){if(!(h=t.getElementById(a)))return n;if(h.id===a)return n.push(h),n}else if(_&&(h=_.getElementById(a))&&y(t,h)&&h.id===a)return n.push(h),n}else{if(c[2])return A.apply(n,t.getElementsByTagName(e)),n;if((a=c[3])&&i.getElementsByClassName&&t.getElementsByClassName)return A.apply(n,t.getElementsByClassName(a)),n}if(i.qsa&&!S[e+" "]&&(!g||!g.test(e))&&(1!==k||"object"!==t.nodeName.toLowerCase())){if(v=e,_=t,1===k&&B.test(e)){for((u=t.getAttribute("id"))?u=u.replace(ne,se):t.setAttribute("id",u=b),o=(p=r(e)).length;o--;)p[o]="#"+u+" "+ye(p[o]);v=p.join(","),_=ee.test(e)&&ve(t.parentNode)||t}try{return A.apply(n,_.querySelectorAll(v)),n}catch(t){S(e,!0)}finally{u===b&&t.removeAttribute("id")}}}return l(e.replace(j,"$1"),t,n,s)}function le(){var e=[];return function t(i,s){return e.push(i+" ")>n.cacheLength&&delete t[e.shift()],t[i+" "]=s}}function he(e){return e[b]=!0,e}function ue(e){var t=f.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ce(e,t){for(var i=e.split("|"),s=i.length;s--;)n.attrHandle[i[s]]=t}function de(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function fe(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function pe(e){return function(t){var i=t.nodeName.toLowerCase();return("input"===i||"button"===i)&&t.type===e}}function me(e){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&re(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function ge(e){return he((function(t){return t=+t,he((function(i,n){for(var s,a=e([],i.length,t),r=a.length;r--;)i[s=a[r]]&&(i[s]=!(n[s]=i[s]))}))}))}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(t in i=oe.support={},a=oe.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!K.test(t||i&&i.nodeName||"HTML")},d=oe.setDocument=function(e){var t,s,r=e?e.ownerDocument||e:w;return r!==f&&9===r.nodeType&&r.documentElement?(p=(f=r).documentElement,m=!a(f),w!==f&&(s=f.defaultView)&&s.top!==s&&(s.addEventListener?s.addEventListener("unload",ae,!1):s.attachEvent&&s.attachEvent("onunload",ae)),i.attributes=ue((function(e){return e.className="i",!e.getAttribute("className")})),i.getElementsByTagName=ue((function(e){return e.appendChild(f.createComment("")),!e.getElementsByTagName("*").length})),i.getElementsByClassName=J.test(f.getElementsByClassName),i.getById=ue((function(e){return p.appendChild(e).id=b,!f.getElementsByName||!f.getElementsByName(b).length})),i.getById?(n.filter.ID=function(e){var t=e.replace(te,ie);return function(e){return e.getAttribute("id")===t}},n.find.ID=function(e,t){if(void 0!==t.getElementById&&m){var i=t.getElementById(e);return i?[i]:[]}}):(n.filter.ID=function(e){var t=e.replace(te,ie);return function(e){var i=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return i&&i.value===t}},n.find.ID=function(e,t){if(void 0!==t.getElementById&&m){var i,n,s,a=t.getElementById(e);if(a){if((i=a.getAttributeNode("id"))&&i.value===e)return[a];for(s=t.getElementsByName(e),n=0;a=s[n++];)if((i=a.getAttributeNode("id"))&&i.value===e)return[a]}return[]}}),n.find.TAG=i.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):i.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],s=0,a=t.getElementsByTagName(e);if("*"===e){for(;i=a[s++];)1===i.nodeType&&n.push(i);return n}return a},n.find.CLASS=i.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&m)return t.getElementsByClassName(e)},v=[],g=[],(i.qsa=J.test(f.querySelectorAll))&&(ue((function(e){p.appendChild(e).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+W+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+W+"*(?:value|"+E+")"),e.querySelectorAll("[id~="+b+"-]").length||g.push("~="),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+b+"+*").length||g.push(".#.+[+~]")})),ue((function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=f.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+W+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),p.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")}))),(i.matchesSelector=J.test(_=p.matches||p.webkitMatchesSelector||p.mozMatchesSelector||p.oMatchesSelector||p.msMatchesSelector))&&ue((function(e){i.disconnectedMatch=_.call(e,"*"),_.call(e,"[s!='']:x"),v.push("!=",R)})),g=g.length&&new RegExp(g.join("|")),v=v.length&&new RegExp(v.join("|")),t=J.test(p.compareDocumentPosition),y=t||J.test(p.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},T=t?function(e,t){if(e===t)return c=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!i.sortDetached&&t.compareDocumentPosition(e)===n?e===f||e.ownerDocument===w&&y(w,e)?-1:t===f||t.ownerDocument===w&&y(w,t)?1:u?H(u,e)-H(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return c=!0,0;var i,n=0,s=e.parentNode,a=t.parentNode,r=[e],o=[t];if(!s||!a)return e===f?-1:t===f?1:s?-1:a?1:u?H(u,e)-H(u,t):0;if(s===a)return de(e,t);for(i=e;i=i.parentNode;)r.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;r[n]===o[n];)n++;return n?de(r[n],o[n]):r[n]===w?-1:o[n]===w?1:0},f):f},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if((e.ownerDocument||e)!==f&&d(e),i.matchesSelector&&m&&!S[t+" "]&&(!v||!v.test(t))&&(!g||!g.test(t)))try{var n=_.call(e,t);if(n||i.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){S(t,!0)}return oe(t,f,null,[e]).length>0},oe.contains=function(e,t){return(e.ownerDocument||e)!==f&&d(e),y(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!==f&&d(e);var s=n.attrHandle[t.toLowerCase()],a=s&&P.call(n.attrHandle,t.toLowerCase())?s(e,t,!m):void 0;return void 0!==a?a:i.attributes||!m?e.getAttribute(t):(a=e.getAttributeNode(t))&&a.specified?a.value:null},oe.escape=function(e){return(e+"").replace(ne,se)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,n=[],s=0,a=0;if(c=!i.detectDuplicates,u=!i.sortStable&&e.slice(0),e.sort(T),c){for(;t=e[a++];)t===e[a]&&(s=n.push(a));for(;s--;)e.splice(n[s],1)}return u=null,e},s=oe.getText=function(e){var t,i="",n=0,a=e.nodeType;if(a){if(1===a||9===a||11===a){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=s(e)}else if(3===a||4===a)return e.nodeValue}else for(;t=e[n++];)i+=s(t);return i},(n=oe.selectors={cacheLength:50,createPseudo:he,match:$,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ie),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ie),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return $.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&q.test(i)&&(t=r(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ie).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=x[e+" "];return t||(t=new RegExp("(^|"+W+")"+e+"("+W+"|$)"))&&x(e,(function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")}))},ATTR:function(e,t,i){return function(n){var s=oe.attr(n,e);return null==s?"!="===t:!t||(s+="","="===t?s===i:"!="===t?s!==i:"^="===t?i&&0===s.indexOf(i):"*="===t?i&&s.indexOf(i)>-1:"$="===t?i&&s.slice(-i.length)===i:"~="===t?(" "+s.replace(F," ")+" ").indexOf(i)>-1:"|="===t&&(s===i||s.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,i,n,s){var a="nth"!==e.slice(0,3),r="last"!==e.slice(-4),o="of-type"===t;return 1===n&&0===s?function(e){return!!e.parentNode}:function(t,i,l){var h,u,c,d,f,p,m=a!==r?"nextSibling":"previousSibling",g=t.parentNode,v=o&&t.nodeName.toLowerCase(),_=!l&&!o,y=!1;if(g){if(a){for(;m;){for(d=t;d=d[m];)if(o?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;p=m="only"===e&&!p&&"nextSibling"}return!0}if(p=[r?g.firstChild:g.lastChild],r&&_){for(y=(f=(h=(u=(c=(d=g)[b]||(d[b]={}))[d.uniqueID]||(c[d.uniqueID]={}))[e]||[])[0]===k&&h[1])&&h[2],d=f&&g.childNodes[f];d=++f&&d&&d[m]||(y=f=0)||p.pop();)if(1===d.nodeType&&++y&&d===t){u[e]=[k,f,y];break}}else if(_&&(y=f=(h=(u=(c=(d=t)[b]||(d[b]={}))[d.uniqueID]||(c[d.uniqueID]={}))[e]||[])[0]===k&&h[1]),!1===y)for(;(d=++f&&d&&d[m]||(y=f=0)||p.pop())&&((o?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++y||(_&&((u=(c=d[b]||(d[b]={}))[d.uniqueID]||(c[d.uniqueID]={}))[e]=[k,y]),d!==t)););return(y-=s)===n||y%n==0&&y/n>=0}}},PSEUDO:function(e,t){var i,s=n.pseudos[e]||n.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return s[b]?s(t):s.length>1?(i=[e,e,"",t],n.setFilters.hasOwnProperty(e.toLowerCase())?he((function(e,i){for(var n,a=s(e,t),r=a.length;r--;)e[n=H(e,a[r])]=!(i[n]=a[r])})):function(e){return s(e,0,i)}):s}},pseudos:{not:he((function(e){var t=[],i=[],n=o(e.replace(j,"$1"));return n[b]?he((function(e,t,i,s){for(var a,r=n(e,null,s,[]),o=e.length;o--;)(a=r[o])&&(e[o]=!(t[o]=a))})):function(e,s,a){return t[0]=e,n(t,null,a,i),t[0]=null,!i.pop()}})),has:he((function(e){return function(t){return oe(e,t).length>0}})),contains:he((function(e){return e=e.replace(te,ie),function(t){return(t.textContent||s(t)).indexOf(e)>-1}})),lang:he((function(e){return G.test(e||"")||oe.error("unsupported lang: "+e),e=e.replace(te,ie).toLowerCase(),function(t){var i;do{if(i=m?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(i=i.toLowerCase())===e||0===i.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}})),target:function(t){var i=e.location&&e.location.hash;return i&&i.slice(1)===t.id},root:function(e){return e===p},focus:function(e){return e===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!n.pseudos.empty(e)},header:function(e){return X.test(e.nodeName)},input:function(e){return Z.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ge((function(){return[0]})),last:ge((function(e,t){return[t-1]})),eq:ge((function(e,t,i){return[i<0?i+t:i]})),even:ge((function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e})),odd:ge((function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e})),lt:ge((function(e,t,i){for(var n=i<0?i+t:i>t?t:i;--n>=0;)e.push(n);return e})),gt:ge((function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e}))}}).pseudos.nth=n.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})n.pseudos[t]=fe(t);for(t in{submit:!0,reset:!0})n.pseudos[t]=pe(t);function _e(){}function ye(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function be(e,t,i){var n=t.dir,s=t.next,a=s||n,r=i&&"parentNode"===a,o=D++;return t.first?function(t,i,s){for(;t=t[n];)if(1===t.nodeType||r)return e(t,i,s);return!1}:function(t,i,l){var h,u,c,d=[k,o];if(l){for(;t=t[n];)if((1===t.nodeType||r)&&e(t,i,l))return!0}else for(;t=t[n];)if(1===t.nodeType||r)if(u=(c=t[b]||(t[b]={}))[t.uniqueID]||(c[t.uniqueID]={}),s&&s===t.nodeName.toLowerCase())t=t[n]||t;else{if((h=u[a])&&h[0]===k&&h[1]===o)return d[2]=h[2];if(u[a]=d,d[2]=e(t,i,l))return!0}return!1}}function we(e){return e.length>1?function(t,i,n){for(var s=e.length;s--;)if(!e[s](t,i,n))return!1;return!0}:e[0]}function ke(e,t,i,n,s){for(var a,r=[],o=0,l=e.length,h=null!=t;o<l;o++)(a=e[o])&&(i&&!i(a,n,s)||(r.push(a),h&&t.push(o)));return r}function De(e,t,i,n,s,a){return n&&!n[b]&&(n=De(n)),s&&!s[b]&&(s=De(s,a)),he((function(a,r,o,l){var h,u,c,d=[],f=[],p=r.length,m=a||function(e,t,i){for(var n=0,s=t.length;n<s;n++)oe(e,t[n],i);return i}(t||"*",o.nodeType?[o]:o,[]),g=!e||!a&&t?m:ke(m,d,e,o,l),v=i?s||(a?e:p||n)?[]:r:g;if(i&&i(g,v,o,l),n)for(h=ke(v,f),n(h,[],o,l),u=h.length;u--;)(c=h[u])&&(v[f[u]]=!(g[f[u]]=c));if(a){if(s||e){if(s){for(h=[],u=v.length;u--;)(c=v[u])&&h.push(g[u]=c);s(null,v=[],h,l)}for(u=v.length;u--;)(c=v[u])&&(h=s?H(a,c):d[u])>-1&&(a[h]=!(r[h]=c))}}else v=ke(v===r?v.splice(p,v.length):v),s?s(null,r,v,l):A.apply(r,v)}))}function xe(e){for(var t,i,s,a=e.length,r=n.relative[e[0].type],o=r||n.relative[" "],l=r?1:0,u=be((function(e){return e===t}),o,!0),c=be((function(e){return H(t,e)>-1}),o,!0),d=[function(e,i,n){var s=!r&&(n||i!==h)||((t=i).nodeType?u(e,i,n):c(e,i,n));return t=null,s}];l<a;l++)if(i=n.relative[e[l].type])d=[be(we(d),i)];else{if((i=n.filter[e[l].type].apply(null,e[l].matches))[b]){for(s=++l;s<a&&!n.relative[e[s].type];s++);return De(l>1&&we(d),l>1&&ye(e.slice(0,l-1).concat({value:" "===e[l-2].type?"*":""})).replace(j,"$1"),i,l<s&&xe(e.slice(l,s)),s<a&&xe(e=e.slice(s)),s<a&&ye(e))}d.push(i)}return we(d)}return _e.prototype=n.filters=n.pseudos,n.setFilters=new _e,r=oe.tokenize=function(e,t){var i,s,a,r,o,l,h,u=C[e+" "];if(u)return t?0:u.slice(0);for(o=e,l=[],h=n.preFilter;o;){for(r in i&&!(s=V.exec(o))||(s&&(o=o.slice(s[0].length)||o),l.push(a=[])),i=!1,(s=U.exec(o))&&(i=s.shift(),a.push({value:i,type:s[0].replace(j," ")}),o=o.slice(i.length)),n.filter)!(s=$[r].exec(o))||h[r]&&!(s=h[r](s))||(i=s.shift(),a.push({value:i,type:r,matches:s}),o=o.slice(i.length));if(!i)break}return t?o.length:o?oe.error(e):C(e,l).slice(0)},o=oe.compile=function(e,t){var i,s=[],a=[],o=M[e+" "];if(!o){for(t||(t=r(e)),i=t.length;i--;)(o=xe(t[i]))[b]?s.push(o):a.push(o);(o=M(e,function(e,t){var i=t.length>0,s=e.length>0,a=function(a,r,o,l,u){var c,p,g,v=0,_="0",y=a&&[],b=[],w=h,D=a||s&&n.find.TAG("*",u),x=k+=null==w?1:Math.random()||.1,C=D.length;for(u&&(h=r===f||r||u);_!==C&&null!=(c=D[_]);_++){if(s&&c){for(p=0,r||c.ownerDocument===f||(d(c),o=!m);g=e[p++];)if(g(c,r||f,o)){l.push(c);break}u&&(k=x)}i&&((c=!g&&c)&&v--,a&&y.push(c))}if(v+=_,i&&_!==v){for(p=0;g=t[p++];)g(y,b,r,o);if(a){if(v>0)for(;_--;)y[_]||b[_]||(b[_]=Y.call(l));b=ke(b)}A.apply(l,b),u&&!a&&b.length>0&&v+t.length>1&&oe.uniqueSort(l)}return u&&(k=x,h=w),y};return i?he(a):a}(a,s))).selector=e}return o},l=oe.select=function(e,t,i,s){var a,l,h,u,c,d="function"==typeof e&&e,f=!s&&r(e=d.selector||e);if(i=i||[],1===f.length){if((l=f[0]=f[0].slice(0)).length>2&&"ID"===(h=l[0]).type&&9===t.nodeType&&m&&n.relative[l[1].type]){if(!(t=(n.find.ID(h.matches[0].replace(te,ie),t)||[])[0]))return i;d&&(t=t.parentNode),e=e.slice(l.shift().value.length)}for(a=$.needsContext.test(e)?0:l.length;a--&&(h=l[a],!n.relative[u=h.type]);)if((c=n.find[u])&&(s=c(h.matches[0].replace(te,ie),ee.test(l[0].type)&&ve(t.parentNode)||t))){if(l.splice(a,1),!(e=s.length&&ye(l)))return A.apply(i,s),i;break}}return(d||o(e,f))(s,t,!m,i,!t||ee.test(e)&&ve(t.parentNode)||t),i},i.sortStable=b.split("").sort(T).join("")===b,i.detectDuplicates=!!c,d(),i.sortDetached=ue((function(e){return 1&e.compareDocumentPosition(f.createElement("fieldset"))})),ue((function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")}))||ce("type|href|height|width",(function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)})),i.attributes&&ue((function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")}))||ce("value",(function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue})),ue((function(e){return null==e.getAttribute("disabled")}))||ce(E,(function(e,t,i){var n;if(!i)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null})),oe}(i);D.find=M,D.expr=M.selectors,D.expr[":"]=D.expr.pseudos,D.uniqueSort=D.unique=M.uniqueSort,D.text=M.getText,D.isXMLDoc=M.isXML,D.contains=M.contains,D.escapeSelector=M.escape;var S=function(e,t,i){for(var n=[],s=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(s&&D(e).is(i))break;n.push(e)}return n},T=function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i},P=D.expr.match.needsContext;function O(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var Y=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function I(e,t,i){return _(t)?D.grep(e,(function(e,n){return!!t.call(e,n,e)!==i})):t.nodeType?D.grep(e,(function(e){return e===t!==i})):"string"!=typeof t?D.grep(e,(function(e){return c.call(t,e)>-1!==i})):D.filter(t,e,i)}D.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?D.find.matchesSelector(n,e)?[n]:[]:D.find.matches(e,D.grep(t,(function(e){return 1===e.nodeType})))},D.fn.extend({find:function(e){var t,i,n=this.length,s=this;if("string"!=typeof e)return this.pushStack(D(e).filter((function(){for(t=0;t<n;t++)if(D.contains(s[t],this))return!0})));for(i=this.pushStack([]),t=0;t<n;t++)D.find(e,s[t],i);return n>1?D.uniqueSort(i):i},filter:function(e){return this.pushStack(I(this,e||[],!1))},not:function(e){return this.pushStack(I(this,e||[],!0))},is:function(e){return!!I(this,"string"==typeof e&&P.test(e)?D(e):e||[],!1).length}});var A,N=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(D.fn.init=function(e,t,i){var n,s;if(!e)return this;if(i=i||A,"string"==typeof e){if(!(n="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:N.exec(e))||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof D?t[0]:t,D.merge(this,D.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:r,!0)),Y.test(n[1])&&D.isPlainObject(t))for(n in t)_(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(s=r.getElementById(n[2]))&&(this[0]=s,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):_(e)?void 0!==i.ready?i.ready(e):e(D):D.makeArray(e,this)}).prototype=D.fn,A=D(r);var H=/^(?:parents|prev(?:Until|All))/,E={children:!0,contents:!0,next:!0,prev:!0};function W(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}D.fn.extend({has:function(e){var t=D(e,this),i=t.length;return this.filter((function(){for(var e=0;e<i;e++)if(D.contains(this,t[e]))return!0}))},closest:function(e,t){var i,n=0,s=this.length,a=[],r="string"!=typeof e&&D(e);if(!P.test(e))for(;n<s;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(r?r.index(i)>-1:1===i.nodeType&&D.find.matchesSelector(i,e))){a.push(i);break}return this.pushStack(a.length>1?D.uniqueSort(a):a)},index:function(e){return e?"string"==typeof e?c.call(D(e),this[0]):c.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(D.uniqueSort(D.merge(this.get(),D(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),D.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return S(e,"parentNode")},parentsUntil:function(e,t,i){return S(e,"parentNode",i)},next:function(e){return W(e,"nextSibling")},prev:function(e){return W(e,"previousSibling")},nextAll:function(e){return S(e,"nextSibling")},prevAll:function(e){return S(e,"previousSibling")},nextUntil:function(e,t,i){return S(e,"nextSibling",i)},prevUntil:function(e,t,i){return S(e,"previousSibling",i)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return void 0!==e.contentDocument?e.contentDocument:(O(e,"template")&&(e=e.content||e),D.merge([],e.childNodes))}},(function(e,t){D.fn[e]=function(i,n){var s=D.map(this,t,i);return"Until"!==e.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=D.filter(n,s)),this.length>1&&(E[e]||D.uniqueSort(s),H.test(e)&&s.reverse()),this.pushStack(s)}}));var L=/[^\x20\t\r\n\f]+/g;function z(e){return e}function R(e){throw e}function F(e,t,i,n){var s;try{e&&_(s=e.promise)?s.call(e).done(t).fail(i):e&&_(s=e.then)?s.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}D.Callbacks=function(e){e="string"==typeof e?function(e){var t={};return D.each(e.match(L)||[],(function(e,i){t[i]=!0})),t}(e):D.extend({},e);var t,i,n,s,a=[],r=[],o=-1,l=function(){for(s=s||e.once,n=t=!0;r.length;o=-1)for(i=r.shift();++o<a.length;)!1===a[o].apply(i[0],i[1])&&e.stopOnFalse&&(o=a.length,i=!1);e.memory||(i=!1),t=!1,s&&(a=i?[]:"")},h={add:function(){return a&&(i&&!t&&(o=a.length-1,r.push(i)),function t(i){D.each(i,(function(i,n){_(n)?e.unique&&h.has(n)||a.push(n):n&&n.length&&"string"!==k(n)&&t(n)}))}(arguments),i&&!t&&l()),this},remove:function(){return D.each(arguments,(function(e,t){for(var i;(i=D.inArray(t,a,i))>-1;)a.splice(i,1),i<=o&&o--})),this},has:function(e){return e?D.inArray(e,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return s=r=[],a=i="",this},disabled:function(){return!a},lock:function(){return s=r=[],i||t||(a=i=""),this},locked:function(){return!!s},fireWith:function(e,i){return s||(i=[e,(i=i||[]).slice?i.slice():i],r.push(i),t||l()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!n}};return h},D.extend({Deferred:function(e){var t=[["notify","progress",D.Callbacks("memory"),D.Callbacks("memory"),2],["resolve","done",D.Callbacks("once memory"),D.Callbacks("once memory"),0,"resolved"],["reject","fail",D.Callbacks("once memory"),D.Callbacks("once memory"),1,"rejected"]],n="pending",s={state:function(){return n},always:function(){return a.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var e=arguments;return D.Deferred((function(i){D.each(t,(function(t,n){var s=_(e[n[4]])&&e[n[4]];a[n[1]]((function(){var e=s&&s.apply(this,arguments);e&&_(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[n[0]+"With"](this,s?[e]:arguments)}))})),e=null})).promise()},then:function(e,n,s){var a=0;function r(e,t,n,s){return function(){var o=this,l=arguments,h=function(){var i,h;if(!(e<a)){if((i=n.apply(o,l))===t.promise())throw new TypeError("Thenable self-resolution");h=i&&("object"==typeof i||"function"==typeof i)&&i.then,_(h)?s?h.call(i,r(a,t,z,s),r(a,t,R,s)):(a++,h.call(i,r(a,t,z,s),r(a,t,R,s),r(a,t,z,t.notifyWith))):(n!==z&&(o=void 0,l=[i]),(s||t.resolveWith)(o,l))}},u=s?h:function(){try{h()}catch(i){D.Deferred.exceptionHook&&D.Deferred.exceptionHook(i,u.stackTrace),e+1>=a&&(n!==R&&(o=void 0,l=[i]),t.rejectWith(o,l))}};e?u():(D.Deferred.getStackHook&&(u.stackTrace=D.Deferred.getStackHook()),i.setTimeout(u))}}return D.Deferred((function(i){t[0][3].add(r(0,i,_(s)?s:z,i.notifyWith)),t[1][3].add(r(0,i,_(e)?e:z)),t[2][3].add(r(0,i,_(n)?n:R))})).promise()},promise:function(e){return null!=e?D.extend(e,s):s}},a={};return D.each(t,(function(e,i){var r=i[2],o=i[5];s[i[1]]=r.add,o&&r.add((function(){n=o}),t[3-e][2].disable,t[3-e][3].disable,t[0][2].lock,t[0][3].lock),r.add(i[3].fire),a[i[0]]=function(){return a[i[0]+"With"](this===a?void 0:this,arguments),this},a[i[0]+"With"]=r.fireWith})),s.promise(a),e&&e.call(a,a),a},when:function(e){var t=arguments.length,i=t,n=Array(i),s=l.call(arguments),a=D.Deferred(),r=function(e){return function(i){n[e]=this,s[e]=arguments.length>1?l.call(arguments):i,--t||a.resolveWith(n,s)}};if(t<=1&&(F(e,a.done(r(i)).resolve,a.reject,!t),"pending"===a.state()||_(s[i]&&s[i].then)))return a.then();for(;i--;)F(s[i],r(i),a.reject);return a.promise()}});var j=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;D.Deferred.exceptionHook=function(e,t){i.console&&i.console.warn&&e&&j.test(e.name)&&i.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},D.readyException=function(e){i.setTimeout((function(){throw e}))};var V=D.Deferred();function U(){r.removeEventListener("DOMContentLoaded",U),i.removeEventListener("load",U),D.ready()}D.fn.ready=function(e){return V.then(e).catch((function(e){D.readyException(e)})),this},D.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--D.readyWait:D.isReady)||(D.isReady=!0,!0!==e&&--D.readyWait>0||V.resolveWith(r,[D]))}}),D.ready.then=V.then,"complete"===r.readyState||"loading"!==r.readyState&&!r.documentElement.doScroll?i.setTimeout(D.ready):(r.addEventListener("DOMContentLoaded",U),i.addEventListener("load",U));var B=function(e,t,i,n,s,a,r){var o=0,l=e.length,h=null==i;if("object"===k(i))for(o in s=!0,i)B(e,t,o,i[o],!0,a,r);else if(void 0!==n&&(s=!0,_(n)||(r=!0),h&&(r?(t.call(e,n),t=null):(h=t,t=function(e,t,i){return h.call(D(e),i)})),t))for(;o<l;o++)t(e[o],i,r?n:n.call(e[o],o,t(e[o],i)));return s?e:h?t.call(e):l?t(e[0],i):a},q=/^-ms-/,G=/-([a-z])/g;function $(e,t){return t.toUpperCase()}function K(e){return e.replace(q,"ms-").replace(G,$)}var Z=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function X(){this.expando=D.expando+X.uid++}X.uid=1,X.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Z(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,s=this.cache(e);if("string"==typeof t)s[K(t)]=i;else for(n in t)s[K(n)]=t[n];return s},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][K(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(K):(t=K(t))in n?[t]:t.match(L)||[]).length;for(;i--;)delete n[t[i]]}(void 0===t||D.isEmptyObject(n))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!D.isEmptyObject(t)}};var J=new X,Q=new X,ee=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,te=/[A-Z]/g;function ie(e,t,i){var n;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(te,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i=function(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:ee.test(e)?JSON.parse(e):e)}(i)}catch(e){}Q.set(e,t,i)}else i=void 0;return i}D.extend({hasData:function(e){return Q.hasData(e)||J.hasData(e)},data:function(e,t,i){return Q.access(e,t,i)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,i){return J.access(e,t,i)},_removeData:function(e,t){J.remove(e,t)}}),D.fn.extend({data:function(e,t){var i,n,s,a=this[0],r=a&&a.attributes;if(void 0===e){if(this.length&&(s=Q.get(a),1===a.nodeType&&!J.get(a,"hasDataAttrs"))){for(i=r.length;i--;)r[i]&&0===(n=r[i].name).indexOf("data-")&&(n=K(n.slice(5)),ie(a,n,s[n]));J.set(a,"hasDataAttrs",!0)}return s}return"object"==typeof e?this.each((function(){Q.set(this,e)})):B(this,(function(t){var i;if(a&&void 0===t)return void 0!==(i=Q.get(a,e))?i:void 0!==(i=ie(a,e))?i:void 0;this.each((function(){Q.set(this,e,t)}))}),null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each((function(){Q.remove(this,e)}))}}),D.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=J.get(e,t),i&&(!n||Array.isArray(i)?n=J.access(e,t,D.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=D.queue(e,t),n=i.length,s=i.shift(),a=D._queueHooks(e,t);"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===t&&i.unshift("inprogress"),delete a.stop,s.call(e,(function(){D.dequeue(e,t)}),a)),!n&&a&&a.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return J.get(e,i)||J.access(e,i,{empty:D.Callbacks("once memory").add((function(){J.remove(e,[t+"queue",i])}))})}}),D.fn.extend({queue:function(e,t){var i=2;return"string"!=typeof e&&(t=e,e="fx",i--),arguments.length<i?D.queue(this[0],e):void 0===t?this:this.each((function(){var i=D.queue(this,e,t);D._queueHooks(this,e),"fx"===e&&"inprogress"!==i[0]&&D.dequeue(this,e)}))},dequeue:function(e){return this.each((function(){D.dequeue(this,e)}))},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var i,n=1,s=D.Deferred(),a=this,r=this.length,o=function(){--n||s.resolveWith(a,[a])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";r--;)(i=J.get(a[r],e+"queueHooks"))&&i.empty&&(n++,i.empty.add(o));return o(),s.promise(t)}});var ne=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,se=new RegExp("^(?:([+-])=|)("+ne+")([a-z%]*)$","i"),ae=["Top","Right","Bottom","Left"],re=r.documentElement,oe=function(e){return D.contains(e.ownerDocument,e)},le={composed:!0};re.getRootNode&&(oe=function(e){return D.contains(e.ownerDocument,e)||e.getRootNode(le)===e.ownerDocument});var he=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===D.css(e,"display")},ue=function(e,t,i,n){var s,a,r={};for(a in t)r[a]=e.style[a],e.style[a]=t[a];for(a in s=i.apply(e,n||[]),t)e.style[a]=r[a];return s};function ce(e,t,i,n){var s,a,r=20,o=n?function(){return n.cur()}:function(){return D.css(e,t,"")},l=o(),h=i&&i[3]||(D.cssNumber[t]?"":"px"),u=e.nodeType&&(D.cssNumber[t]||"px"!==h&&+l)&&se.exec(D.css(e,t));if(u&&u[3]!==h){for(l/=2,h=h||u[3],u=+l||1;r--;)D.style(e,t,u+h),(1-a)*(1-(a=o()/l||.5))<=0&&(r=0),u/=a;u*=2,D.style(e,t,u+h),i=i||[]}return i&&(u=+u||+l||0,s=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=h,n.start=u,n.end=s)),s}var de={};function fe(e){var t,i=e.ownerDocument,n=e.nodeName,s=de[n];return s||(t=i.body.appendChild(i.createElement(n)),s=D.css(t,"display"),t.parentNode.removeChild(t),"none"===s&&(s="block"),de[n]=s,s)}function pe(e,t){for(var i,n,s=[],a=0,r=e.length;a<r;a++)(n=e[a]).style&&(i=n.style.display,t?("none"===i&&(s[a]=J.get(n,"display")||null,s[a]||(n.style.display="")),""===n.style.display&&he(n)&&(s[a]=fe(n))):"none"!==i&&(s[a]="none",J.set(n,"display",i)));for(a=0;a<r;a++)null!=s[a]&&(e[a].style.display=s[a]);return e}D.fn.extend({show:function(){return pe(this,!0)},hide:function(){return pe(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each((function(){he(this)?D(this).show():D(this).hide()}))}});var me=/^(?:checkbox|radio)$/i,ge=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,ve=/^$|^module$|\/(?:java|ecma)script/i,_e={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ye(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&O(e,t)?D.merge([e],i):i}function be(e,t){for(var i=0,n=e.length;i<n;i++)J.set(e[i],"globalEval",!t||J.get(t[i],"globalEval"))}_e.optgroup=_e.option,_e.tbody=_e.tfoot=_e.colgroup=_e.caption=_e.thead,_e.th=_e.td;var we,ke,De=/<|&#?\w+;/;function xe(e,t,i,n,s){for(var a,r,o,l,h,u,c=t.createDocumentFragment(),d=[],f=0,p=e.length;f<p;f++)if((a=e[f])||0===a)if("object"===k(a))D.merge(d,a.nodeType?[a]:a);else if(De.test(a)){for(r=r||c.appendChild(t.createElement("div")),o=(ge.exec(a)||["",""])[1].toLowerCase(),l=_e[o]||_e._default,r.innerHTML=l[1]+D.htmlPrefilter(a)+l[2],u=l[0];u--;)r=r.lastChild;D.merge(d,r.childNodes),(r=c.firstChild).textContent=""}else d.push(t.createTextNode(a));for(c.textContent="",f=0;a=d[f++];)if(n&&D.inArray(a,n)>-1)s&&s.push(a);else if(h=oe(a),r=ye(c.appendChild(a),"script"),h&&be(r),i)for(u=0;a=r[u++];)ve.test(a.type||"")&&i.push(a);return c}we=r.createDocumentFragment().appendChild(r.createElement("div")),(ke=r.createElement("input")).setAttribute("type","radio"),ke.setAttribute("checked","checked"),ke.setAttribute("name","t"),we.appendChild(ke),v.checkClone=we.cloneNode(!0).cloneNode(!0).lastChild.checked,we.innerHTML="<textarea>x</textarea>",v.noCloneChecked=!!we.cloneNode(!0).lastChild.defaultValue;var Ce=/^key/,Me=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Se=/^([^.]*)(?:\.(.+)|)/;function Te(){return!0}function Pe(){return!1}function Oe(e,t){return e===function(){try{return r.activeElement}catch(e){}}()==("focus"===t)}function Ye(e,t,i,n,s,a){var r,o;if("object"==typeof t){for(o in"string"!=typeof i&&(n=n||i,i=void 0),t)Ye(e,o,i,n,t[o],a);return e}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),!1===s)s=Pe;else if(!s)return e;return 1===a&&(r=s,(s=function(e){return D().off(e),r.apply(this,arguments)}).guid=r.guid||(r.guid=D.guid++)),e.each((function(){D.event.add(this,t,s,n,i)}))}function Ie(e,t,i){i?(J.set(e,t,!1),D.event.add(e,t,{namespace:!1,handler:function(e){var n,s,a=J.get(this,t);if(1&e.isTrigger&&this[t]){if(a.length)(D.event.special[t]||{}).delegateType&&e.stopPropagation();else if(a=l.call(arguments),J.set(this,t,a),n=i(this,t),this[t](),a!==(s=J.get(this,t))||n?J.set(this,t,!1):s={},a!==s)return e.stopImmediatePropagation(),e.preventDefault(),s.value}else a.length&&(J.set(this,t,{value:D.event.trigger(D.extend(a[0],D.Event.prototype),a.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===J.get(e,t)&&D.event.add(e,t,Te)}D.event={global:{},add:function(e,t,i,n,s){var a,r,o,l,h,u,c,d,f,p,m,g=J.get(e);if(g)for(i.handler&&(i=(a=i).handler,s=a.selector),s&&D.find.matchesSelector(re,s),i.guid||(i.guid=D.guid++),(l=g.events)||(l=g.events={}),(r=g.handle)||(r=g.handle=function(t){return void 0!==D&&D.event.triggered!==t.type?D.event.dispatch.apply(e,arguments):void 0}),h=(t=(t||"").match(L)||[""]).length;h--;)f=m=(o=Se.exec(t[h])||[])[1],p=(o[2]||"").split(".").sort(),f&&(c=D.event.special[f]||{},f=(s?c.delegateType:c.bindType)||f,c=D.event.special[f]||{},u=D.extend({type:f,origType:m,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&D.expr.match.needsContext.test(s),namespace:p.join(".")},a),(d=l[f])||((d=l[f]=[]).delegateCount=0,c.setup&&!1!==c.setup.call(e,n,p,r)||e.addEventListener&&e.addEventListener(f,r)),c.add&&(c.add.call(e,u),u.handler.guid||(u.handler.guid=i.guid)),s?d.splice(d.delegateCount++,0,u):d.push(u),D.event.global[f]=!0)},remove:function(e,t,i,n,s){var a,r,o,l,h,u,c,d,f,p,m,g=J.hasData(e)&&J.get(e);if(g&&(l=g.events)){for(h=(t=(t||"").match(L)||[""]).length;h--;)if(f=m=(o=Se.exec(t[h])||[])[1],p=(o[2]||"").split(".").sort(),f){for(c=D.event.special[f]||{},d=l[f=(n?c.delegateType:c.bindType)||f]||[],o=o[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=a=d.length;a--;)u=d[a],!s&&m!==u.origType||i&&i.guid!==u.guid||o&&!o.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(d.splice(a,1),u.selector&&d.delegateCount--,c.remove&&c.remove.call(e,u));r&&!d.length&&(c.teardown&&!1!==c.teardown.call(e,p,g.handle)||D.removeEvent(e,f,g.handle),delete l[f])}else for(f in l)D.event.remove(e,f+t[h],i,n,!0);D.isEmptyObject(l)&&J.remove(e,"handle events")}},dispatch:function(e){var t,i,n,s,a,r,o=D.event.fix(e),l=new Array(arguments.length),h=(J.get(this,"events")||{})[o.type]||[],u=D.event.special[o.type]||{};for(l[0]=o,t=1;t<arguments.length;t++)l[t]=arguments[t];if(o.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,o)){for(r=D.event.handlers.call(this,o,h),t=0;(s=r[t++])&&!o.isPropagationStopped();)for(o.currentTarget=s.elem,i=0;(a=s.handlers[i++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!1!==a.namespace&&!o.rnamespace.test(a.namespace)||(o.handleObj=a,o.data=a.data,void 0!==(n=((D.event.special[a.origType]||{}).handle||a.handler).apply(s.elem,l))&&!1===(o.result=n)&&(o.preventDefault(),o.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,o),o.result}},handlers:function(e,t){var i,n,s,a,r,o=[],l=t.delegateCount,h=e.target;if(l&&h.nodeType&&!("click"===e.type&&e.button>=1))for(;h!==this;h=h.parentNode||this)if(1===h.nodeType&&("click"!==e.type||!0!==h.disabled)){for(a=[],r={},i=0;i<l;i++)void 0===r[s=(n=t[i]).selector+" "]&&(r[s]=n.needsContext?D(s,this).index(h)>-1:D.find(s,this,null,[h]).length),r[s]&&a.push(n);a.length&&o.push({elem:h,handlers:a})}return h=this,l<t.length&&o.push({elem:h,handlers:t.slice(l)}),o},addProp:function(e,t){Object.defineProperty(D.Event.prototype,e,{enumerable:!0,configurable:!0,get:_(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[D.expando]?e:new D.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return me.test(t.type)&&t.click&&O(t,"input")&&Ie(t,"click",Te),!1},trigger:function(e){var t=this||e;return me.test(t.type)&&t.click&&O(t,"input")&&Ie(t,"click"),!0},_default:function(e){var t=e.target;return me.test(t.type)&&t.click&&O(t,"input")&&J.get(t,"click")||O(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},D.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},D.Event=function(e,t){if(!(this instanceof D.Event))return new D.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Te:Pe,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&D.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[D.expando]=!0},D.Event.prototype={constructor:D.Event,isDefaultPrevented:Pe,isPropagationStopped:Pe,isImmediatePropagationStopped:Pe,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Te,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Te,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Te,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},D.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Ce.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Me.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},D.event.addProp),D.each({focus:"focusin",blur:"focusout"},(function(e,t){D.event.special[e]={setup:function(){return Ie(this,e,Oe),!1},trigger:function(){return Ie(this,e),!0},delegateType:t}})),D.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(e,t){D.event.special[e]={delegateType:t,bindType:t,handle:function(e){var i,n=this,s=e.relatedTarget,a=e.handleObj;return s&&(s===n||D.contains(n,s))||(e.type=a.origType,i=a.handler.apply(this,arguments),e.type=t),i}}})),D.fn.extend({on:function(e,t,i,n){return Ye(this,e,t,i,n)},one:function(e,t,i,n){return Ye(this,e,t,i,n,1)},off:function(e,t,i){var n,s;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,D(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof e){for(s in e)this.off(s,t,e[s]);return this}return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Pe),this.each((function(){D.event.remove(this,e,i,t)}))}});var Ae=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Ne=/<script|<style|<link/i,He=/checked\s*(?:[^=]|=\s*.checked.)/i,Ee=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function We(e,t){return O(e,"table")&&O(11!==t.nodeType?t:t.firstChild,"tr")&&D(e).children("tbody")[0]||e}function Le(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function ze(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Re(e,t){var i,n,s,a,r,o,l,h;if(1===t.nodeType){if(J.hasData(e)&&(a=J.access(e),r=J.set(t,a),h=a.events))for(s in delete r.handle,r.events={},h)for(i=0,n=h[s].length;i<n;i++)D.event.add(t,s,h[s][i]);Q.hasData(e)&&(o=Q.access(e),l=D.extend({},o),Q.set(t,l))}}function Fe(e,t){var i=t.nodeName.toLowerCase();"input"===i&&me.test(e.type)?t.checked=e.checked:"input"!==i&&"textarea"!==i||(t.defaultValue=e.defaultValue)}function je(e,t,i,n){t=h.apply([],t);var s,a,r,o,l,u,c=0,d=e.length,f=d-1,p=t[0],m=_(p);if(m||d>1&&"string"==typeof p&&!v.checkClone&&He.test(p))return e.each((function(s){var a=e.eq(s);m&&(t[0]=p.call(this,s,a.html())),je(a,t,i,n)}));if(d&&(a=(s=xe(t,e[0].ownerDocument,!1,e,n)).firstChild,1===s.childNodes.length&&(s=a),a||n)){for(o=(r=D.map(ye(s,"script"),Le)).length;c<d;c++)l=s,c!==f&&(l=D.clone(l,!0,!0),o&&D.merge(r,ye(l,"script"))),i.call(e[c],l,c);if(o)for(u=r[r.length-1].ownerDocument,D.map(r,ze),c=0;c<o;c++)l=r[c],ve.test(l.type||"")&&!J.access(l,"globalEval")&&D.contains(u,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?D._evalUrl&&!l.noModule&&D._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")}):w(l.textContent.replace(Ee,""),l,u))}return e}function Ve(e,t,i){for(var n,s=t?D.filter(t,e):e,a=0;null!=(n=s[a]);a++)i||1!==n.nodeType||D.cleanData(ye(n)),n.parentNode&&(i&&oe(n)&&be(ye(n,"script")),n.parentNode.removeChild(n));return e}D.extend({htmlPrefilter:function(e){return e.replace(Ae,"<$1></$2>")},clone:function(e,t,i){var n,s,a,r,o=e.cloneNode(!0),l=oe(e);if(!(v.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||D.isXMLDoc(e)))for(r=ye(o),n=0,s=(a=ye(e)).length;n<s;n++)Fe(a[n],r[n]);if(t)if(i)for(a=a||ye(e),r=r||ye(o),n=0,s=a.length;n<s;n++)Re(a[n],r[n]);else Re(e,o);return(r=ye(o,"script")).length>0&&be(r,!l&&ye(e,"script")),o},cleanData:function(e){for(var t,i,n,s=D.event.special,a=0;void 0!==(i=e[a]);a++)if(Z(i)){if(t=i[J.expando]){if(t.events)for(n in t.events)s[n]?D.event.remove(i,n):D.removeEvent(i,n,t.handle);i[J.expando]=void 0}i[Q.expando]&&(i[Q.expando]=void 0)}}}),D.fn.extend({detach:function(e){return Ve(this,e,!0)},remove:function(e){return Ve(this,e)},text:function(e){return B(this,(function(e){return void 0===e?D.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)}))}),null,e,arguments.length)},append:function(){return je(this,arguments,(function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||We(this,e).appendChild(e)}))},prepend:function(){return je(this,arguments,(function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=We(this,e);t.insertBefore(e,t.firstChild)}}))},before:function(){return je(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this)}))},after:function(){return je(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)}))},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(D.cleanData(ye(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map((function(){return D.clone(this,e,t)}))},html:function(e){return B(this,(function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ne.test(e)&&!_e[(ge.exec(e)||["",""])[1].toLowerCase()]){e=D.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(D.cleanData(ye(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)}),null,e,arguments.length)},replaceWith:function(){var e=[];return je(this,arguments,(function(t){var i=this.parentNode;D.inArray(this,e)<0&&(D.cleanData(ye(this)),i&&i.replaceChild(t,this))}),e)}}),D.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(e,t){D.fn[e]=function(e){for(var i,n=[],s=D(e),a=s.length-1,r=0;r<=a;r++)i=r===a?this:this.clone(!0),D(s[r])[t](i),u.apply(n,i.get());return this.pushStack(n)}}));var Ue=new RegExp("^("+ne+")(?!px)[a-z%]+$","i"),Be=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=i),t.getComputedStyle(e)},qe=new RegExp(ae.join("|"),"i");function Ge(e,t,i){var n,s,a,r,o=e.style;return(i=i||Be(e))&&(""!==(r=i.getPropertyValue(t)||i[t])||oe(e)||(r=D.style(e,t)),!v.pixelBoxStyles()&&Ue.test(r)&&qe.test(t)&&(n=o.width,s=o.minWidth,a=o.maxWidth,o.minWidth=o.maxWidth=o.width=r,r=i.width,o.width=n,o.minWidth=s,o.maxWidth=a)),void 0!==r?r+"":r}function $e(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(u){h.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",u.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",re.appendChild(h).appendChild(u);var e=i.getComputedStyle(u);n="1%"!==e.top,l=12===t(e.marginLeft),u.style.right="60%",o=36===t(e.right),s=36===t(e.width),u.style.position="absolute",a=12===t(u.offsetWidth/3),re.removeChild(h),u=null}}function t(e){return Math.round(parseFloat(e))}var n,s,a,o,l,h=r.createElement("div"),u=r.createElement("div");u.style&&(u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",v.clearCloneStyle="content-box"===u.style.backgroundClip,D.extend(v,{boxSizingReliable:function(){return e(),s},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),l},scrollboxSize:function(){return e(),a}}))}();var Ke=["Webkit","Moz","ms"],Ze=r.createElement("div").style,Xe={};function Je(e){var t=D.cssProps[e]||Xe[e];return t||(e in Ze?e:Xe[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=Ke.length;i--;)if((e=Ke[i]+t)in Ze)return e}(e)||e)}var Qe=/^(none|table(?!-c[ea]).+)/,et=/^--/,tt={position:"absolute",visibility:"hidden",display:"block"},it={letterSpacing:"0",fontWeight:"400"};function nt(e,t,i){var n=se.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function st(e,t,i,n,s,a){var r="width"===t?1:0,o=0,l=0;if(i===(n?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=D.css(e,i+ae[r],!0,s)),n?("content"===i&&(l-=D.css(e,"padding"+ae[r],!0,s)),"margin"!==i&&(l-=D.css(e,"border"+ae[r]+"Width",!0,s))):(l+=D.css(e,"padding"+ae[r],!0,s),"padding"!==i?l+=D.css(e,"border"+ae[r]+"Width",!0,s):o+=D.css(e,"border"+ae[r]+"Width",!0,s));return!n&&a>=0&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-a-l-o-.5))||0),l}function at(e,t,i){var n=Be(e),s=(!v.boxSizingReliable()||i)&&"border-box"===D.css(e,"boxSizing",!1,n),a=s,r=Ge(e,t,n),o="offset"+t[0].toUpperCase()+t.slice(1);if(Ue.test(r)){if(!i)return r;r="auto"}return(!v.boxSizingReliable()&&s||"auto"===r||!parseFloat(r)&&"inline"===D.css(e,"display",!1,n))&&e.getClientRects().length&&(s="border-box"===D.css(e,"boxSizing",!1,n),(a=o in e)&&(r=e[o])),(r=parseFloat(r)||0)+st(e,t,i||(s?"border":"content"),a,n,r)+"px"}function rt(e,t,i,n,s){return new rt.prototype.init(e,t,i,n,s)}D.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Ge(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var s,a,r,o=K(t),l=et.test(t),h=e.style;if(l||(t=Je(o)),r=D.cssHooks[t]||D.cssHooks[o],void 0===i)return r&&"get"in r&&void 0!==(s=r.get(e,!1,n))?s:h[t];"string"===(a=typeof i)&&(s=se.exec(i))&&s[1]&&(i=ce(e,t,s),a="number"),null!=i&&i==i&&("number"!==a||l||(i+=s&&s[3]||(D.cssNumber[o]?"":"px")),v.clearCloneStyle||""!==i||0!==t.indexOf("background")||(h[t]="inherit"),r&&"set"in r&&void 0===(i=r.set(e,i,n))||(l?h.setProperty(t,i):h[t]=i))}},css:function(e,t,i,n){var s,a,r,o=K(t);return et.test(t)||(t=Je(o)),(r=D.cssHooks[t]||D.cssHooks[o])&&"get"in r&&(s=r.get(e,!0,i)),void 0===s&&(s=Ge(e,t,n)),"normal"===s&&t in it&&(s=it[t]),""===i||i?(a=parseFloat(s),!0===i||isFinite(a)?a||0:s):s}}),D.each(["height","width"],(function(e,t){D.cssHooks[t]={get:function(e,i,n){if(i)return!Qe.test(D.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?at(e,t,n):ue(e,tt,(function(){return at(e,t,n)}))},set:function(e,i,n){var s,a=Be(e),r=!v.scrollboxSize()&&"absolute"===a.position,o=(r||n)&&"border-box"===D.css(e,"boxSizing",!1,a),l=n?st(e,t,n,o,a):0;return o&&r&&(l-=Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-parseFloat(a[t])-st(e,t,"border",!1,a)-.5)),l&&(s=se.exec(i))&&"px"!==(s[3]||"px")&&(e.style[t]=i,i=D.css(e,t)),nt(0,i,l)}}})),D.cssHooks.marginLeft=$e(v.reliableMarginLeft,(function(e,t){if(t)return(parseFloat(Ge(e,"marginLeft"))||e.getBoundingClientRect().left-ue(e,{marginLeft:0},(function(){return e.getBoundingClientRect().left})))+"px"})),D.each({margin:"",padding:"",border:"Width"},(function(e,t){D.cssHooks[e+t]={expand:function(i){for(var n=0,s={},a="string"==typeof i?i.split(" "):[i];n<4;n++)s[e+ae[n]+t]=a[n]||a[n-2]||a[0];return s}},"margin"!==e&&(D.cssHooks[e+t].set=nt)})),D.fn.extend({css:function(e,t){return B(this,(function(e,t,i){var n,s,a={},r=0;if(Array.isArray(t)){for(n=Be(e),s=t.length;r<s;r++)a[t[r]]=D.css(e,t[r],!1,n);return a}return void 0!==i?D.style(e,t,i):D.css(e,t)}),e,t,arguments.length>1)}}),D.Tween=rt,rt.prototype={constructor:rt,init:function(e,t,i,n,s,a){this.elem=e,this.prop=i,this.easing=s||D.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=a||(D.cssNumber[i]?"":"px")},cur:function(){var e=rt.propHooks[this.prop];return e&&e.get?e.get(this):rt.propHooks._default.get(this)},run:function(e){var t,i=rt.propHooks[this.prop];return this.options.duration?this.pos=t=D.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):rt.propHooks._default.set(this),this}},rt.prototype.init.prototype=rt.prototype,rt.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=D.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){D.fx.step[e.prop]?D.fx.step[e.prop](e):1!==e.elem.nodeType||!D.cssHooks[e.prop]&&null==e.elem.style[Je(e.prop)]?e.elem[e.prop]=e.now:D.style(e.elem,e.prop,e.now+e.unit)}}},rt.propHooks.scrollTop=rt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},D.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},D.fx=rt.prototype.init,D.fx.step={};var ot,lt,ht=/^(?:toggle|show|hide)$/,ut=/queueHooks$/;function ct(){lt&&(!1===r.hidden&&i.requestAnimationFrame?i.requestAnimationFrame(ct):i.setTimeout(ct,D.fx.interval),D.fx.tick())}function dt(){return i.setTimeout((function(){ot=void 0})),ot=Date.now()}function ft(e,t){var i,n=0,s={height:e};for(t=t?1:0;n<4;n+=2-t)s["margin"+(i=ae[n])]=s["padding"+i]=e;return t&&(s.opacity=s.width=e),s}function pt(e,t,i){for(var n,s=(mt.tweeners[t]||[]).concat(mt.tweeners["*"]),a=0,r=s.length;a<r;a++)if(n=s[a].call(i,t,e))return n}function mt(e,t,i){var n,s,a=0,r=mt.prefilters.length,o=D.Deferred().always((function(){delete l.elem})),l=function(){if(s)return!1;for(var t=ot||dt(),i=Math.max(0,h.startTime+h.duration-t),n=1-(i/h.duration||0),a=0,r=h.tweens.length;a<r;a++)h.tweens[a].run(n);return o.notifyWith(e,[h,n,i]),n<1&&r?i:(r||o.notifyWith(e,[h,1,0]),o.resolveWith(e,[h]),!1)},h=o.promise({elem:e,props:D.extend({},t),opts:D.extend(!0,{specialEasing:{},easing:D.easing._default},i),originalProperties:t,originalOptions:i,startTime:ot||dt(),duration:i.duration,tweens:[],createTween:function(t,i){var n=D.Tween(e,h.opts,t,i,h.opts.specialEasing[t]||h.opts.easing);return h.tweens.push(n),n},stop:function(t){var i=0,n=t?h.tweens.length:0;if(s)return this;for(s=!0;i<n;i++)h.tweens[i].run(1);return t?(o.notifyWith(e,[h,1,0]),o.resolveWith(e,[h,t])):o.rejectWith(e,[h,t]),this}}),u=h.props;for(!function(e,t){var i,n,s,a,r;for(i in e)if(s=t[n=K(i)],a=e[i],Array.isArray(a)&&(s=a[1],a=e[i]=a[0]),i!==n&&(e[n]=a,delete e[i]),(r=D.cssHooks[n])&&"expand"in r)for(i in a=r.expand(a),delete e[n],a)i in e||(e[i]=a[i],t[i]=s);else t[n]=s}(u,h.opts.specialEasing);a<r;a++)if(n=mt.prefilters[a].call(h,e,u,h.opts))return _(n.stop)&&(D._queueHooks(h.elem,h.opts.queue).stop=n.stop.bind(n)),n;return D.map(u,pt,h),_(h.opts.start)&&h.opts.start.call(e,h),h.progress(h.opts.progress).done(h.opts.done,h.opts.complete).fail(h.opts.fail).always(h.opts.always),D.fx.timer(D.extend(l,{elem:e,anim:h,queue:h.opts.queue})),h}D.Animation=D.extend(mt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return ce(i.elem,e,se.exec(t),i),i}]},tweener:function(e,t){_(e)?(t=e,e=["*"]):e=e.match(L);for(var i,n=0,s=e.length;n<s;n++)i=e[n],mt.tweeners[i]=mt.tweeners[i]||[],mt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,s,a,r,o,l,h,u,c="width"in t||"height"in t,d=this,f={},p=e.style,m=e.nodeType&&he(e),g=J.get(e,"fxshow");for(n in i.queue||(null==(r=D._queueHooks(e,"fx")).unqueued&&(r.unqueued=0,o=r.empty.fire,r.empty.fire=function(){r.unqueued||o()}),r.unqueued++,d.always((function(){d.always((function(){r.unqueued--,D.queue(e,"fx").length||r.empty.fire()}))}))),t)if(s=t[n],ht.test(s)){if(delete t[n],a=a||"toggle"===s,s===(m?"hide":"show")){if("show"!==s||!g||void 0===g[n])continue;m=!0}f[n]=g&&g[n]||D.style(e,n)}if((l=!D.isEmptyObject(t))||!D.isEmptyObject(f))for(n in c&&1===e.nodeType&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],null==(h=g&&g.display)&&(h=J.get(e,"display")),"none"===(u=D.css(e,"display"))&&(h?u=h:(pe([e],!0),h=e.style.display||h,u=D.css(e,"display"),pe([e]))),("inline"===u||"inline-block"===u&&null!=h)&&"none"===D.css(e,"float")&&(l||(d.done((function(){p.display=h})),null==h&&(u=p.display,h="none"===u?"":u)),p.display="inline-block")),i.overflow&&(p.overflow="hidden",d.always((function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]}))),l=!1,f)l||(g?"hidden"in g&&(m=g.hidden):g=J.access(e,"fxshow",{display:h}),a&&(g.hidden=!m),m&&pe([e],!0),d.done((function(){for(n in m||pe([e]),J.remove(e,"fxshow"),f)D.style(e,n,f[n])}))),l=pt(m?g[n]:0,n,d),n in g||(g[n]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?mt.prefilters.unshift(e):mt.prefilters.push(e)}}),D.speed=function(e,t,i){var n=e&&"object"==typeof e?D.extend({},e):{complete:i||!i&&t||_(e)&&e,duration:e,easing:i&&t||t&&!_(t)&&t};return D.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in D.fx.speeds?n.duration=D.fx.speeds[n.duration]:n.duration=D.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){_(n.old)&&n.old.call(this),n.queue&&D.dequeue(this,n.queue)},n},D.fn.extend({fadeTo:function(e,t,i,n){return this.filter(he).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(e,t,i,n){var s=D.isEmptyObject(e),a=D.speed(t,i,n),r=function(){var t=mt(this,D.extend({},e),a);(s||J.get(this,"finish"))&&t.stop(!0)};return r.finish=r,s||!1===a.queue?this.each(r):this.queue(a.queue,r)},stop:function(e,t,i){var n=function(e){var t=e.stop;delete e.stop,t(i)};return"string"!=typeof e&&(i=t,t=e,e=void 0),t&&!1!==e&&this.queue(e||"fx",[]),this.each((function(){var t=!0,s=null!=e&&e+"queueHooks",a=D.timers,r=J.get(this);if(s)r[s]&&r[s].stop&&n(r[s]);else for(s in r)r[s]&&r[s].stop&&ut.test(s)&&n(r[s]);for(s=a.length;s--;)a[s].elem!==this||null!=e&&a[s].queue!==e||(a[s].anim.stop(i),t=!1,a.splice(s,1));!t&&i||D.dequeue(this,e)}))},finish:function(e){return!1!==e&&(e=e||"fx"),this.each((function(){var t,i=J.get(this),n=i[e+"queue"],s=i[e+"queueHooks"],a=D.timers,r=n?n.length:0;for(i.finish=!0,D.queue(this,e,[]),s&&s.stop&&s.stop.call(this,!0),t=a.length;t--;)a[t].elem===this&&a[t].queue===e&&(a[t].anim.stop(!0),a.splice(t,1));for(t=0;t<r;t++)n[t]&&n[t].finish&&n[t].finish.call(this);delete i.finish}))}}),D.each(["toggle","show","hide"],(function(e,t){var i=D.fn[t];D.fn[t]=function(e,n,s){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(ft(t,!0),e,n,s)}})),D.each({slideDown:ft("show"),slideUp:ft("hide"),slideToggle:ft("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(e,t){D.fn[e]=function(e,i,n){return this.animate(t,e,i,n)}})),D.timers=[],D.fx.tick=function(){var e,t=0,i=D.timers;for(ot=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||D.fx.stop(),ot=void 0},D.fx.timer=function(e){D.timers.push(e),D.fx.start()},D.fx.interval=13,D.fx.start=function(){lt||(lt=!0,ct())},D.fx.stop=function(){lt=null},D.fx.speeds={slow:600,fast:200,_default:400},D.fn.delay=function(e,t){return e=D.fx&&D.fx.speeds[e]||e,t=t||"fx",this.queue(t,(function(t,n){var s=i.setTimeout(t,e);n.stop=function(){i.clearTimeout(s)}}))},function(){var e=r.createElement("input"),t=r.createElement("select").appendChild(r.createElement("option"));e.type="checkbox",v.checkOn=""!==e.value,v.optSelected=t.selected,(e=r.createElement("input")).value="t",e.type="radio",v.radioValue="t"===e.value}();var gt,vt=D.expr.attrHandle;D.fn.extend({attr:function(e,t){return B(this,D.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each((function(){D.removeAttr(this,e)}))}}),D.extend({attr:function(e,t,i){var n,s,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return void 0===e.getAttribute?D.prop(e,t,i):(1===a&&D.isXMLDoc(e)||(s=D.attrHooks[t.toLowerCase()]||(D.expr.match.bool.test(t)?gt:void 0)),void 0!==i?null===i?void D.removeAttr(e,t):s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:(e.setAttribute(t,i+""),i):s&&"get"in s&&null!==(n=s.get(e,t))?n:null==(n=D.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!v.radioValue&&"radio"===t&&O(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,s=t&&t.match(L);if(s&&1===e.nodeType)for(;i=s[n++];)e.removeAttribute(i)}}),gt={set:function(e,t,i){return!1===t?D.removeAttr(e,i):e.setAttribute(i,i),i}},D.each(D.expr.match.bool.source.match(/\w+/g),(function(e,t){var i=vt[t]||D.find.attr;vt[t]=function(e,t,n){var s,a,r=t.toLowerCase();return n||(a=vt[r],vt[r]=s,s=null!=i(e,t,n)?r:null,vt[r]=a),s}}));var _t=/^(?:input|select|textarea|button)$/i,yt=/^(?:a|area)$/i;function bt(e){return(e.match(L)||[]).join(" ")}function wt(e){return e.getAttribute&&e.getAttribute("class")||""}function kt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(L)||[]}D.fn.extend({prop:function(e,t){return B(this,D.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each((function(){delete this[D.propFix[e]||e]}))}}),D.extend({prop:function(e,t,i){var n,s,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return 1===a&&D.isXMLDoc(e)||(t=D.propFix[t]||t,s=D.propHooks[t]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:e[t]=i:s&&"get"in s&&null!==(n=s.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=D.find.attr(e,"tabindex");return t?parseInt(t,10):_t.test(e.nodeName)||yt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),v.optSelected||(D.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),D.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){D.propFix[this.toLowerCase()]=this})),D.fn.extend({addClass:function(e){var t,i,n,s,a,r,o,l=0;if(_(e))return this.each((function(t){D(this).addClass(e.call(this,t,wt(this)))}));if((t=kt(e)).length)for(;i=this[l++];)if(s=wt(i),n=1===i.nodeType&&" "+bt(s)+" "){for(r=0;a=t[r++];)n.indexOf(" "+a+" ")<0&&(n+=a+" ");s!==(o=bt(n))&&i.setAttribute("class",o)}return this},removeClass:function(e){var t,i,n,s,a,r,o,l=0;if(_(e))return this.each((function(t){D(this).removeClass(e.call(this,t,wt(this)))}));if(!arguments.length)return this.attr("class","");if((t=kt(e)).length)for(;i=this[l++];)if(s=wt(i),n=1===i.nodeType&&" "+bt(s)+" "){for(r=0;a=t[r++];)for(;n.indexOf(" "+a+" ")>-1;)n=n.replace(" "+a+" "," ");s!==(o=bt(n))&&i.setAttribute("class",o)}return this},toggleClass:function(e,t){var i=typeof e,n="string"===i||Array.isArray(e);return"boolean"==typeof t&&n?t?this.addClass(e):this.removeClass(e):_(e)?this.each((function(i){D(this).toggleClass(e.call(this,i,wt(this),t),t)})):this.each((function(){var t,s,a,r;if(n)for(s=0,a=D(this),r=kt(e);t=r[s++];)a.hasClass(t)?a.removeClass(t):a.addClass(t);else void 0!==e&&"boolean"!==i||((t=wt(this))&&J.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===e?"":J.get(this,"__className__")||""))}))},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&(" "+bt(wt(i))+" ").indexOf(t)>-1)return!0;return!1}});var Dt=/\r/g;D.fn.extend({val:function(e){var t,i,n,s=this[0];return arguments.length?(n=_(e),this.each((function(i){var s;1===this.nodeType&&(null==(s=n?e.call(this,i,D(this).val()):e)?s="":"number"==typeof s?s+="":Array.isArray(s)&&(s=D.map(s,(function(e){return null==e?"":e+""}))),(t=D.valHooks[this.type]||D.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&void 0!==t.set(this,s,"value")||(this.value=s))}))):s?(t=D.valHooks[s.type]||D.valHooks[s.nodeName.toLowerCase()])&&"get"in t&&void 0!==(i=t.get(s,"value"))?i:"string"==typeof(i=s.value)?i.replace(Dt,""):null==i?"":i:void 0}}),D.extend({valHooks:{option:{get:function(e){var t=D.find.attr(e,"value");return null!=t?t:bt(D.text(e))}},select:{get:function(e){var t,i,n,s=e.options,a=e.selectedIndex,r="select-one"===e.type,o=r?null:[],l=r?a+1:s.length;for(n=a<0?l:r?a:0;n<l;n++)if(((i=s[n]).selected||n===a)&&!i.disabled&&(!i.parentNode.disabled||!O(i.parentNode,"optgroup"))){if(t=D(i).val(),r)return t;o.push(t)}return o},set:function(e,t){for(var i,n,s=e.options,a=D.makeArray(t),r=s.length;r--;)((n=s[r]).selected=D.inArray(D.valHooks.option.get(n),a)>-1)&&(i=!0);return i||(e.selectedIndex=-1),a}}}}),D.each(["radio","checkbox"],(function(){D.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=D.inArray(D(e).val(),t)>-1}},v.checkOn||(D.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})})),v.focusin="onfocusin"in i;var xt=/^(?:focusinfocus|focusoutblur)$/,Ct=function(e){e.stopPropagation()};D.extend(D.event,{trigger:function(e,t,n,s){var a,o,l,h,u,c,d,f,m=[n||r],g=p.call(e,"type")?e.type:e,v=p.call(e,"namespace")?e.namespace.split("."):[];if(o=f=l=n=n||r,3!==n.nodeType&&8!==n.nodeType&&!xt.test(g+D.event.triggered)&&(g.indexOf(".")>-1&&(v=g.split("."),g=v.shift(),v.sort()),u=g.indexOf(":")<0&&"on"+g,(e=e[D.expando]?e:new D.Event(g,"object"==typeof e&&e)).isTrigger=s?2:3,e.namespace=v.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+v.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:D.makeArray(t,[e]),d=D.event.special[g]||{},s||!d.trigger||!1!==d.trigger.apply(n,t))){if(!s&&!d.noBubble&&!y(n)){for(h=d.delegateType||g,xt.test(h+g)||(o=o.parentNode);o;o=o.parentNode)m.push(o),l=o;l===(n.ownerDocument||r)&&m.push(l.defaultView||l.parentWindow||i)}for(a=0;(o=m[a++])&&!e.isPropagationStopped();)f=o,e.type=a>1?h:d.bindType||g,(c=(J.get(o,"events")||{})[e.type]&&J.get(o,"handle"))&&c.apply(o,t),(c=u&&o[u])&&c.apply&&Z(o)&&(e.result=c.apply(o,t),!1===e.result&&e.preventDefault());return e.type=g,s||e.isDefaultPrevented()||d._default&&!1!==d._default.apply(m.pop(),t)||!Z(n)||u&&_(n[g])&&!y(n)&&((l=n[u])&&(n[u]=null),D.event.triggered=g,e.isPropagationStopped()&&f.addEventListener(g,Ct),n[g](),e.isPropagationStopped()&&f.removeEventListener(g,Ct),D.event.triggered=void 0,l&&(n[u]=l)),e.result}},simulate:function(e,t,i){var n=D.extend(new D.Event,i,{type:e,isSimulated:!0});D.event.trigger(n,null,t)}}),D.fn.extend({trigger:function(e,t){return this.each((function(){D.event.trigger(e,t,this)}))},triggerHandler:function(e,t){var i=this[0];if(i)return D.event.trigger(e,t,i,!0)}}),v.focusin||D.each({focus:"focusin",blur:"focusout"},(function(e,t){var i=function(e){D.event.simulate(t,e.target,D.event.fix(e))};D.event.special[t]={setup:function(){var n=this.ownerDocument||this,s=J.access(n,t);s||n.addEventListener(e,i,!0),J.access(n,t,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this,s=J.access(n,t)-1;s?J.access(n,t,s):(n.removeEventListener(e,i,!0),J.remove(n,t))}}}));var Mt=i.location,St=Date.now(),Tt=/\?/;D.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new i.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||D.error("Invalid XML: "+e),t};var Pt=/\[\]$/,Ot=/\r?\n/g,Yt=/^(?:submit|button|image|reset|file)$/i,It=/^(?:input|select|textarea|keygen)/i;function At(e,t,i,n){var s;if(Array.isArray(t))D.each(t,(function(t,s){i||Pt.test(e)?n(e,s):At(e+"["+("object"==typeof s&&null!=s?t:"")+"]",s,i,n)}));else if(i||"object"!==k(t))n(e,t);else for(s in t)At(e+"["+s+"]",t[s],i,n)}D.param=function(e,t){var i,n=[],s=function(e,t){var i=_(t)?t():t;n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!D.isPlainObject(e))D.each(e,(function(){s(this.name,this.value)}));else for(i in e)At(i,e[i],t,s);return n.join("&")},D.fn.extend({serialize:function(){return D.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var e=D.prop(this,"elements");return e?D.makeArray(e):this})).filter((function(){var e=this.type;return this.name&&!D(this).is(":disabled")&&It.test(this.nodeName)&&!Yt.test(e)&&(this.checked||!me.test(e))})).map((function(e,t){var i=D(this).val();return null==i?null:Array.isArray(i)?D.map(i,(function(e){return{name:t.name,value:e.replace(Ot,"\r\n")}})):{name:t.name,value:i.replace(Ot,"\r\n")}})).get()}});var Nt=/%20/g,Ht=/#.*$/,Et=/([?&])_=[^&]*/,Wt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Lt=/^(?:GET|HEAD)$/,zt=/^\/\//,Rt={},Ft={},jt="*/".concat("*"),Vt=r.createElement("a");function Ut(e){return function(t,i){"string"!=typeof t&&(i=t,t="*");var n,s=0,a=t.toLowerCase().match(L)||[];if(_(i))for(;n=a[s++];)"+"===n[0]?(n=n.slice(1)||"*",(e[n]=e[n]||[]).unshift(i)):(e[n]=e[n]||[]).push(i)}}function Bt(e,t,i,n){var s={},a=e===Ft;function r(o){var l;return s[o]=!0,D.each(e[o]||[],(function(e,o){var h=o(t,i,n);return"string"!=typeof h||a||s[h]?a?!(l=h):void 0:(t.dataTypes.unshift(h),r(h),!1)})),l}return r(t.dataTypes[0])||!s["*"]&&r("*")}function qt(e,t){var i,n,s=D.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((s[i]?e:n||(n={}))[i]=t[i]);return n&&D.extend(!0,e,n),e}Vt.href=Mt.href,D.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Mt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Mt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":jt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":D.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?qt(qt(e,D.ajaxSettings),t):qt(D.ajaxSettings,e)},ajaxPrefilter:Ut(Rt),ajaxTransport:Ut(Ft),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var n,s,a,o,l,h,u,c,d,f,p=D.ajaxSetup({},t),m=p.context||p,g=p.context&&(m.nodeType||m.jquery)?D(m):D.event,v=D.Deferred(),_=D.Callbacks("once memory"),y=p.statusCode||{},b={},w={},k="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(u){if(!o)for(o={};t=Wt.exec(a);)o[t[1].toLowerCase()+" "]=(o[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=o[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return u?a:null},setRequestHeader:function(e,t){return null==u&&(e=w[e.toLowerCase()]=w[e.toLowerCase()]||e,b[e]=t),this},overrideMimeType:function(e){return null==u&&(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(u)x.always(e[x.status]);else for(t in e)y[t]=[y[t],e[t]];return this},abort:function(e){var t=e||k;return n&&n.abort(t),C(0,t),this}};if(v.promise(x),p.url=((e||p.url||Mt.href)+"").replace(zt,Mt.protocol+"//"),p.type=t.method||t.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(L)||[""],null==p.crossDomain){h=r.createElement("a");try{h.href=p.url,h.href=h.href,p.crossDomain=Vt.protocol+"//"+Vt.host!=h.protocol+"//"+h.host}catch(e){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=D.param(p.data,p.traditional)),Bt(Rt,p,t,x),u)return x;for(d in(c=D.event&&p.global)&&0==D.active++&&D.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Lt.test(p.type),s=p.url.replace(Ht,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Nt,"+")):(f=p.url.slice(s.length),p.data&&(p.processData||"string"==typeof p.data)&&(s+=(Tt.test(s)?"&":"?")+p.data,delete p.data),!1===p.cache&&(s=s.replace(Et,"$1"),f=(Tt.test(s)?"&":"?")+"_="+St+++f),p.url=s+f),p.ifModified&&(D.lastModified[s]&&x.setRequestHeader("If-Modified-Since",D.lastModified[s]),D.etag[s]&&x.setRequestHeader("If-None-Match",D.etag[s])),(p.data&&p.hasContent&&!1!==p.contentType||t.contentType)&&x.setRequestHeader("Content-Type",p.contentType),x.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+jt+"; q=0.01":""):p.accepts["*"]),p.headers)x.setRequestHeader(d,p.headers[d]);if(p.beforeSend&&(!1===p.beforeSend.call(m,x,p)||u))return x.abort();if(k="abort",_.add(p.complete),x.done(p.success),x.fail(p.error),n=Bt(Ft,p,t,x)){if(x.readyState=1,c&&g.trigger("ajaxSend",[x,p]),u)return x;p.async&&p.timeout>0&&(l=i.setTimeout((function(){x.abort("timeout")}),p.timeout));try{u=!1,n.send(b,C)}catch(e){if(u)throw e;C(-1,e)}}else C(-1,"No Transport");function C(e,t,r,o){var h,d,f,b,w,k=t;u||(u=!0,l&&i.clearTimeout(l),n=void 0,a=o||"",x.readyState=e>0?4:0,h=e>=200&&e<300||304===e,r&&(b=function(e,t,i){for(var n,s,a,r,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(s in o)if(o[s]&&o[s].test(n)){l.unshift(s);break}if(l[0]in i)a=l[0];else{for(s in i){if(!l[0]||e.converters[s+" "+l[0]]){a=s;break}r||(r=s)}a=a||r}if(a)return a!==l[0]&&l.unshift(a),i[a]}(p,x,r)),b=function(e,t,i,n){var s,a,r,o,l,h={},u=e.dataTypes.slice();if(u[1])for(r in e.converters)h[r.toLowerCase()]=e.converters[r];for(a=u.shift();a;)if(e.responseFields[a]&&(i[e.responseFields[a]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=a,a=u.shift())if("*"===a)a=l;else if("*"!==l&&l!==a){if(!(r=h[l+" "+a]||h["* "+a]))for(s in h)if((o=s.split(" "))[1]===a&&(r=h[l+" "+o[0]]||h["* "+o[0]])){!0===r?r=h[s]:!0!==h[s]&&(a=o[0],u.unshift(o[1]));break}if(!0!==r)if(r&&e.throws)t=r(t);else try{t=r(t)}catch(e){return{state:"parsererror",error:r?e:"No conversion from "+l+" to "+a}}}return{state:"success",data:t}}(p,b,x,h),h?(p.ifModified&&((w=x.getResponseHeader("Last-Modified"))&&(D.lastModified[s]=w),(w=x.getResponseHeader("etag"))&&(D.etag[s]=w)),204===e||"HEAD"===p.type?k="nocontent":304===e?k="notmodified":(k=b.state,d=b.data,h=!(f=b.error))):(f=k,!e&&k||(k="error",e<0&&(e=0))),x.status=e,x.statusText=(t||k)+"",h?v.resolveWith(m,[d,k,x]):v.rejectWith(m,[x,k,f]),x.statusCode(y),y=void 0,c&&g.trigger(h?"ajaxSuccess":"ajaxError",[x,p,h?d:f]),_.fireWith(m,[x,k]),c&&(g.trigger("ajaxComplete",[x,p]),--D.active||D.event.trigger("ajaxStop")))}return x},getJSON:function(e,t,i){return D.get(e,t,i,"json")},getScript:function(e,t){return D.get(e,void 0,t,"script")}}),D.each(["get","post"],(function(e,t){D[t]=function(e,i,n,s){return _(i)&&(s=s||n,n=i,i=void 0),D.ajax(D.extend({url:e,type:t,dataType:s,data:i,success:n},D.isPlainObject(e)&&e))}})),D._evalUrl=function(e,t){return D.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){D.globalEval(e,t)}})},D.fn.extend({wrapAll:function(e){var t;return this[0]&&(_(e)&&(e=e.call(this[0])),t=D(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map((function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e})).append(this)),this},wrapInner:function(e){return _(e)?this.each((function(t){D(this).wrapInner(e.call(this,t))})):this.each((function(){var t=D(this),i=t.contents();i.length?i.wrapAll(e):t.append(e)}))},wrap:function(e){var t=_(e);return this.each((function(i){D(this).wrapAll(t?e.call(this,i):e)}))},unwrap:function(e){return this.parent(e).not("body").each((function(){D(this).replaceWith(this.childNodes)})),this}}),D.expr.pseudos.hidden=function(e){return!D.expr.pseudos.visible(e)},D.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},D.ajaxSettings.xhr=function(){try{return new i.XMLHttpRequest}catch(e){}};var Gt={0:200,1223:204},$t=D.ajaxSettings.xhr();v.cors=!!$t&&"withCredentials"in $t,v.ajax=$t=!!$t,D.ajaxTransport((function(e){var t,n;if(v.cors||$t&&!e.crossDomain)return{send:function(s,a){var r,o=e.xhr();if(o.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(r in e.xhrFields)o[r]=e.xhrFields[r];for(r in e.mimeType&&o.overrideMimeType&&o.overrideMimeType(e.mimeType),e.crossDomain||s["X-Requested-With"]||(s["X-Requested-With"]="XMLHttpRequest"),s)o.setRequestHeader(r,s[r]);t=function(e){return function(){t&&(t=n=o.onload=o.onerror=o.onabort=o.ontimeout=o.onreadystatechange=null,"abort"===e?o.abort():"error"===e?"number"!=typeof o.status?a(0,"error"):a(o.status,o.statusText):a(Gt[o.status]||o.status,o.statusText,"text"!==(o.responseType||"text")||"string"!=typeof o.responseText?{binary:o.response}:{text:o.responseText},o.getAllResponseHeaders()))}},o.onload=t(),n=o.onerror=o.ontimeout=t("error"),void 0!==o.onabort?o.onabort=n:o.onreadystatechange=function(){4===o.readyState&&i.setTimeout((function(){t&&n()}))},t=t("abort");try{o.send(e.hasContent&&e.data||null)}catch(e){if(t)throw e}},abort:function(){t&&t()}}})),D.ajaxPrefilter((function(e){e.crossDomain&&(e.contents.script=!1)})),D.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return D.globalEval(e),e}}}),D.ajaxPrefilter("script",(function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")})),D.ajaxTransport("script",(function(e){var t,i;if(e.crossDomain||e.scriptAttrs)return{send:function(n,s){t=D("<script>").attr(e.scriptAttrs||{}).prop({charset:e.scriptCharset,src:e.url}).on("load error",i=function(e){t.remove(),i=null,e&&s("error"===e.type?404:200,e.type)}),r.head.appendChild(t[0])},abort:function(){i&&i()}}}));var Kt,Zt=[],Xt=/(=)\?(?=&|$)|\?\?/;D.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Zt.pop()||D.expando+"_"+St++;return this[e]=!0,e}}),D.ajaxPrefilter("json jsonp",(function(e,t,n){var s,a,r,o=!1!==e.jsonp&&(Xt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Xt.test(e.data)&&"data");if(o||"jsonp"===e.dataTypes[0])return s=e.jsonpCallback=_(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,o?e[o]=e[o].replace(Xt,"$1"+s):!1!==e.jsonp&&(e.url+=(Tt.test(e.url)?"&":"?")+e.jsonp+"="+s),e.converters["script json"]=function(){return r||D.error(s+" was not called"),r[0]},e.dataTypes[0]="json",a=i[s],i[s]=function(){r=arguments},n.always((function(){void 0===a?D(i).removeProp(s):i[s]=a,e[s]&&(e.jsonpCallback=t.jsonpCallback,Zt.push(s)),r&&_(a)&&a(r[0]),r=a=void 0})),"script"})),v.createHTMLDocument=((Kt=r.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Kt.childNodes.length),D.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(v.createHTMLDocument?((n=(t=r.implementation.createHTMLDocument("")).createElement("base")).href=r.location.href,t.head.appendChild(n)):t=r),a=!i&&[],(s=Y.exec(e))?[t.createElement(s[1])]:(s=xe([e],t,a),a&&a.length&&D(a).remove(),D.merge([],s.childNodes)));var n,s,a},D.fn.load=function(e,t,i){var n,s,a,r=this,o=e.indexOf(" ");return o>-1&&(n=bt(e.slice(o)),e=e.slice(0,o)),_(t)?(i=t,t=void 0):t&&"object"==typeof t&&(s="POST"),r.length>0&&D.ajax({url:e,type:s||"GET",dataType:"html",data:t}).done((function(e){a=arguments,r.html(n?D("<div>").append(D.parseHTML(e)).find(n):e)})).always(i&&function(e,t){r.each((function(){i.apply(this,a||[e.responseText,t,e])}))}),this},D.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(e,t){D.fn[t]=function(e){return this.on(t,e)}})),D.expr.pseudos.animated=function(e){return D.grep(D.timers,(function(t){return e===t.elem})).length},D.offset={setOffset:function(e,t,i){var n,s,a,r,o,l,h=D.css(e,"position"),u=D(e),c={};"static"===h&&(e.style.position="relative"),o=u.offset(),a=D.css(e,"top"),l=D.css(e,"left"),("absolute"===h||"fixed"===h)&&(a+l).indexOf("auto")>-1?(r=(n=u.position()).top,s=n.left):(r=parseFloat(a)||0,s=parseFloat(l)||0),_(t)&&(t=t.call(e,i,D.extend({},o))),null!=t.top&&(c.top=t.top-o.top+r),null!=t.left&&(c.left=t.left-o.left+s),"using"in t?t.using.call(e,c):u.css(c)}},D.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each((function(t){D.offset.setOffset(this,e,t)}));var t,i,n=this[0];return n?n.getClientRects().length?(t=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:t.top+i.pageYOffset,left:t.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],s={top:0,left:0};if("fixed"===D.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===D.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((s=D(e).offset()).top+=D.css(e,"borderTopWidth",!0),s.left+=D.css(e,"borderLeftWidth",!0))}return{top:t.top-s.top-D.css(n,"marginTop",!0),left:t.left-s.left-D.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var e=this.offsetParent;e&&"static"===D.css(e,"position");)e=e.offsetParent;return e||re}))}}),D.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(e,t){var i="pageYOffset"===t;D.fn[e]=function(n){return B(this,(function(e,n,s){var a;if(y(e)?a=e:9===e.nodeType&&(a=e.defaultView),void 0===s)return a?a[t]:e[n];a?a.scrollTo(i?a.pageXOffset:s,i?s:a.pageYOffset):e[n]=s}),e,n,arguments.length)}})),D.each(["top","left"],(function(e,t){D.cssHooks[t]=$e(v.pixelPosition,(function(e,i){if(i)return i=Ge(e,t),Ue.test(i)?D(e).position()[t]+"px":i}))})),D.each({Height:"height",Width:"width"},(function(e,t){D.each({padding:"inner"+e,content:t,"":"outer"+e},(function(i,n){D.fn[n]=function(s,a){var r=arguments.length&&(i||"boolean"!=typeof s),o=i||(!0===s||!0===a?"margin":"border");return B(this,(function(t,i,s){var a;return y(t)?0===n.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(a=t.documentElement,Math.max(t.body["scroll"+e],a["scroll"+e],t.body["offset"+e],a["offset"+e],a["client"+e])):void 0===s?D.css(t,i,o):D.style(t,i,s,o)}),t,r?s:void 0,r)}}))})),D.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(e,t){D.fn[t]=function(e,i){return arguments.length>0?this.on(t,null,e,i):this.trigger(t)}})),D.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),D.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),D.proxy=function(e,t){var i,n,s;if("string"==typeof t&&(i=e[t],t=e,e=i),_(e))return n=l.call(arguments,2),(s=function(){return e.apply(t||this,n.concat(l.call(arguments)))}).guid=e.guid=e.guid||D.guid++,s},D.holdReady=function(e){e?D.readyWait++:D.ready(!0)},D.isArray=Array.isArray,D.parseJSON=JSON.parse,D.nodeName=O,D.isFunction=_,D.isWindow=y,D.camelCase=K,D.type=k,D.now=Date.now,D.isNumeric=function(e){var t=D.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},void 0===(n=function(){return D}.apply(t,[]))||(e.exports=n);var Jt=i.jQuery,Qt=i.$;return D.noConflict=function(e){return i.$===D&&(i.$=Qt),e&&i.jQuery===D&&(i.jQuery=Jt),D},s||(i.jQuery=i.$=D),D}))},function(e,t,i){(function(e){e.exports=function(){"use strict";var t,n;function s(){return t.apply(null,arguments)}function a(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function r(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function o(e){return void 0===e}function l(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function h(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function u(e,t){var i,n=[];for(i=0;i<e.length;++i)n.push(t(e[i],i));return n}function c(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function d(e,t){for(var i in t)c(t,i)&&(e[i]=t[i]);return c(t,"toString")&&(e.toString=t.toString),c(t,"valueOf")&&(e.valueOf=t.valueOf),e}function f(e,t,i,n){return At(e,t,i,n,!0).utc()}function p(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function m(e){if(null==e._isValid){var t=p(e),i=n.call(t.parsedDateParts,(function(e){return null!=e})),s=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&i);if(e._strict&&(s=s&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return s;e._isValid=s}return e._isValid}function g(e){var t=f(NaN);return null!=e?d(p(t),e):p(t).userInvalidated=!0,t}n=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),i=t.length>>>0,n=0;n<i;n++)if(n in t&&e.call(this,t[n],n,t))return!0;return!1};var v=s.momentProperties=[];function _(e,t){var i,n,s;if(o(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),o(t._i)||(e._i=t._i),o(t._f)||(e._f=t._f),o(t._l)||(e._l=t._l),o(t._strict)||(e._strict=t._strict),o(t._tzm)||(e._tzm=t._tzm),o(t._isUTC)||(e._isUTC=t._isUTC),o(t._offset)||(e._offset=t._offset),o(t._pf)||(e._pf=p(t)),o(t._locale)||(e._locale=t._locale),v.length>0)for(i=0;i<v.length;i++)o(s=t[n=v[i]])||(e[n]=s);return e}var y=!1;function b(e){_(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===y&&(y=!0,s.updateOffset(this),y=!1)}function w(e){return e instanceof b||null!=e&&null!=e._isAMomentObject}function k(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function D(e){var t=+e,i=0;return 0!==t&&isFinite(t)&&(i=k(t)),i}function x(e,t,i){var n,s=Math.min(e.length,t.length),a=Math.abs(e.length-t.length),r=0;for(n=0;n<s;n++)(i&&e[n]!==t[n]||!i&&D(e[n])!==D(t[n]))&&r++;return r+a}function C(e){!1===s.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function M(e,t){var i=!0;return d((function(){if(null!=s.deprecationHandler&&s.deprecationHandler(null,e),i){for(var n,a=[],r=0;r<arguments.length;r++){if(n="","object"==typeof arguments[r]){for(var o in n+="\n["+r+"] ",arguments[0])n+=o+": "+arguments[0][o]+", ";n=n.slice(0,-2)}else n=arguments[r];a.push(n)}C(e+"\nArguments: "+Array.prototype.slice.call(a).join("")+"\n"+(new Error).stack),i=!1}return t.apply(this,arguments)}),t)}var S,T={};function P(e,t){null!=s.deprecationHandler&&s.deprecationHandler(e,t),T[e]||(C(t),T[e]=!0)}function O(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function Y(e,t){var i,n=d({},e);for(i in t)c(t,i)&&(r(e[i])&&r(t[i])?(n[i]={},d(n[i],e[i]),d(n[i],t[i])):null!=t[i]?n[i]=t[i]:delete n[i]);for(i in e)c(e,i)&&!c(t,i)&&r(e[i])&&(n[i]=d({},n[i]));return n}function I(e){null!=e&&this.set(e)}s.suppressDeprecationWarnings=!1,s.deprecationHandler=null,S=Object.keys?Object.keys:function(e){var t,i=[];for(t in e)c(e,t)&&i.push(t);return i};var A={};function N(e,t){var i=e.toLowerCase();A[i]=A[i+"s"]=A[t]=e}function H(e){return"string"==typeof e?A[e]||A[e.toLowerCase()]:void 0}function E(e){var t,i,n={};for(i in e)c(e,i)&&(t=H(i))&&(n[t]=e[i]);return n}var W={};function L(e,t){W[e]=t}function z(e,t,i){var n=""+Math.abs(e),s=t-n.length;return(e>=0?i?"+":"":"-")+Math.pow(10,Math.max(0,s)).toString().substr(1)+n}var R=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,F=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,j={},V={};function U(e,t,i,n){var s=n;"string"==typeof n&&(s=function(){return this[n]()}),e&&(V[e]=s),t&&(V[t[0]]=function(){return z(s.apply(this,arguments),t[1],t[2])}),i&&(V[i]=function(){return this.localeData().ordinal(s.apply(this,arguments),e)})}function B(e,t){return e.isValid()?(t=q(t,e.localeData()),j[t]=j[t]||function(e){var t,i,n,s=e.match(R);for(t=0,i=s.length;t<i;t++)V[s[t]]?s[t]=V[s[t]]:s[t]=(n=s[t]).match(/\[[\s\S]/)?n.replace(/^\[|\]$/g,""):n.replace(/\\/g,"");return function(t){var n,a="";for(n=0;n<i;n++)a+=O(s[n])?s[n].call(t,e):s[n];return a}}(t),j[t](e)):e.localeData().invalidDate()}function q(e,t){var i=5;function n(e){return t.longDateFormat(e)||e}for(F.lastIndex=0;i>=0&&F.test(e);)e=e.replace(F,n),F.lastIndex=0,i-=1;return e}var G=/\d/,$=/\d\d/,K=/\d{3}/,Z=/\d{4}/,X=/[+-]?\d{6}/,J=/\d\d?/,Q=/\d\d\d\d?/,ee=/\d\d\d\d\d\d?/,te=/\d{1,3}/,ie=/\d{1,4}/,ne=/[+-]?\d{1,6}/,se=/\d+/,ae=/[+-]?\d+/,re=/Z|[+-]\d\d:?\d\d/gi,oe=/Z|[+-]\d\d(?::?\d\d)?/gi,le=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,he={};function ue(e,t,i){he[e]=O(t)?t:function(e,n){return e&&i?i:t}}function ce(e,t){return c(he,e)?he[e](t._strict,t._locale):new RegExp(de(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,i,n,s){return t||i||n||s}))))}function de(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}var fe={};function pe(e,t){var i,n=t;for("string"==typeof e&&(e=[e]),l(t)&&(n=function(e,i){i[t]=D(e)}),i=0;i<e.length;i++)fe[e[i]]=n}function me(e,t){pe(e,(function(e,i,n,s){n._w=n._w||{},t(e,n._w,n,s)}))}function ge(e,t,i){null!=t&&c(fe,e)&&fe[e](t,i._a,i,e)}var ve=0,_e=1,ye=2,be=3,we=4,ke=5,De=6,xe=7,Ce=8;function Me(e){return Se(e)?366:365}function Se(e){return e%4==0&&e%100!=0||e%400==0}U("Y",0,0,(function(){var e=this.year();return e<=9999?""+e:"+"+e})),U(0,["YY",2],0,(function(){return this.year()%100})),U(0,["YYYY",4],0,"year"),U(0,["YYYYY",5],0,"year"),U(0,["YYYYYY",6,!0],0,"year"),N("year","y"),L("year",1),ue("Y",ae),ue("YY",J,$),ue("YYYY",ie,Z),ue("YYYYY",ne,X),ue("YYYYYY",ne,X),pe(["YYYYY","YYYYYY"],ve),pe("YYYY",(function(e,t){t[ve]=2===e.length?s.parseTwoDigitYear(e):D(e)})),pe("YY",(function(e,t){t[ve]=s.parseTwoDigitYear(e)})),pe("Y",(function(e,t){t[ve]=parseInt(e,10)})),s.parseTwoDigitYear=function(e){return D(e)+(D(e)>68?1900:2e3)};var Te,Pe=Oe("FullYear",!0);function Oe(e,t){return function(i){return null!=i?(Ie(this,e,i),s.updateOffset(this,t),this):Ye(this,e)}}function Ye(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function Ie(e,t,i){e.isValid()&&!isNaN(i)&&("FullYear"===t&&Se(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](i,e.month(),Ae(i,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](i))}function Ae(e,t){if(isNaN(e)||isNaN(t))return NaN;var i,n=(t%(i=12)+i)%i;return e+=(t-n)/12,1===n?Se(e)?29:28:31-n%7%2}Te=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},U("M",["MM",2],"Mo",(function(){return this.month()+1})),U("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),U("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),N("month","M"),L("month",8),ue("M",J),ue("MM",J,$),ue("MMM",(function(e,t){return t.monthsShortRegex(e)})),ue("MMMM",(function(e,t){return t.monthsRegex(e)})),pe(["M","MM"],(function(e,t){t[_e]=D(e)-1})),pe(["MMM","MMMM"],(function(e,t,i,n){var s=i._locale.monthsParse(e,n,i._strict);null!=s?t[_e]=s:p(i).invalidMonth=e}));var Ne=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,He="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),Ee="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");function We(e,t,i){var n,s,a,r=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],n=0;n<12;++n)a=f([2e3,n]),this._shortMonthsParse[n]=this.monthsShort(a,"").toLocaleLowerCase(),this._longMonthsParse[n]=this.months(a,"").toLocaleLowerCase();return i?"MMM"===t?-1!==(s=Te.call(this._shortMonthsParse,r))?s:null:-1!==(s=Te.call(this._longMonthsParse,r))?s:null:"MMM"===t?-1!==(s=Te.call(this._shortMonthsParse,r))?s:-1!==(s=Te.call(this._longMonthsParse,r))?s:null:-1!==(s=Te.call(this._longMonthsParse,r))?s:-1!==(s=Te.call(this._shortMonthsParse,r))?s:null}function Le(e,t){var i;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=D(t);else if(!l(t=e.localeData().monthsParse(t)))return e;return i=Math.min(e.date(),Ae(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,i),e}function ze(e){return null!=e?(Le(this,e),s.updateOffset(this,!0),this):Ye(this,"Month")}var Re=le,Fe=le;function je(){function e(e,t){return t.length-e.length}var t,i,n=[],s=[],a=[];for(t=0;t<12;t++)i=f([2e3,t]),n.push(this.monthsShort(i,"")),s.push(this.months(i,"")),a.push(this.months(i,"")),a.push(this.monthsShort(i,""));for(n.sort(e),s.sort(e),a.sort(e),t=0;t<12;t++)n[t]=de(n[t]),s[t]=de(s[t]);for(t=0;t<24;t++)a[t]=de(a[t]);this._monthsRegex=new RegExp("^("+a.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+n.join("|")+")","i")}function Ve(e,t,i,n,s,a,r){var o;return e<100&&e>=0?(o=new Date(e+400,t,i,n,s,a,r),isFinite(o.getFullYear())&&o.setFullYear(e)):o=new Date(e,t,i,n,s,a,r),o}function Ue(e){var t;if(e<100&&e>=0){var i=Array.prototype.slice.call(arguments);i[0]=e+400,t=new Date(Date.UTC.apply(null,i)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function Be(e,t,i){var n=7+t-i;return-(7+Ue(e,0,n).getUTCDay()-t)%7+n-1}function qe(e,t,i,n,s){var a,r,o=1+7*(t-1)+(7+i-n)%7+Be(e,n,s);return o<=0?r=Me(a=e-1)+o:o>Me(e)?(a=e+1,r=o-Me(e)):(a=e,r=o),{year:a,dayOfYear:r}}function Ge(e,t,i){var n,s,a=Be(e.year(),t,i),r=Math.floor((e.dayOfYear()-a-1)/7)+1;return r<1?n=r+$e(s=e.year()-1,t,i):r>$e(e.year(),t,i)?(n=r-$e(e.year(),t,i),s=e.year()+1):(s=e.year(),n=r),{week:n,year:s}}function $e(e,t,i){var n=Be(e,t,i),s=Be(e+1,t,i);return(Me(e)-n+s)/7}function Ke(e,t){return e.slice(t,7).concat(e.slice(0,t))}U("w",["ww",2],"wo","week"),U("W",["WW",2],"Wo","isoWeek"),N("week","w"),N("isoWeek","W"),L("week",5),L("isoWeek",5),ue("w",J),ue("ww",J,$),ue("W",J),ue("WW",J,$),me(["w","ww","W","WW"],(function(e,t,i,n){t[n.substr(0,1)]=D(e)})),U("d",0,"do","day"),U("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),U("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),U("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),U("e",0,0,"weekday"),U("E",0,0,"isoWeekday"),N("day","d"),N("weekday","e"),N("isoWeekday","E"),L("day",11),L("weekday",11),L("isoWeekday",11),ue("d",J),ue("e",J),ue("E",J),ue("dd",(function(e,t){return t.weekdaysMinRegex(e)})),ue("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),ue("dddd",(function(e,t){return t.weekdaysRegex(e)})),me(["dd","ddd","dddd"],(function(e,t,i,n){var s=i._locale.weekdaysParse(e,n,i._strict);null!=s?t.d=s:p(i).invalidWeekday=e})),me(["d","e","E"],(function(e,t,i,n){t[n]=D(e)}));var Ze="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Xe="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Je="Su_Mo_Tu_We_Th_Fr_Sa".split("_");function Qe(e,t,i){var n,s,a,r=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],n=0;n<7;++n)a=f([2e3,1]).day(n),this._minWeekdaysParse[n]=this.weekdaysMin(a,"").toLocaleLowerCase(),this._shortWeekdaysParse[n]=this.weekdaysShort(a,"").toLocaleLowerCase(),this._weekdaysParse[n]=this.weekdays(a,"").toLocaleLowerCase();return i?"dddd"===t?-1!==(s=Te.call(this._weekdaysParse,r))?s:null:"ddd"===t?-1!==(s=Te.call(this._shortWeekdaysParse,r))?s:null:-1!==(s=Te.call(this._minWeekdaysParse,r))?s:null:"dddd"===t?-1!==(s=Te.call(this._weekdaysParse,r))?s:-1!==(s=Te.call(this._shortWeekdaysParse,r))?s:-1!==(s=Te.call(this._minWeekdaysParse,r))?s:null:"ddd"===t?-1!==(s=Te.call(this._shortWeekdaysParse,r))?s:-1!==(s=Te.call(this._weekdaysParse,r))?s:-1!==(s=Te.call(this._minWeekdaysParse,r))?s:null:-1!==(s=Te.call(this._minWeekdaysParse,r))?s:-1!==(s=Te.call(this._weekdaysParse,r))?s:-1!==(s=Te.call(this._shortWeekdaysParse,r))?s:null}var et=le,tt=le,it=le;function nt(){function e(e,t){return t.length-e.length}var t,i,n,s,a,r=[],o=[],l=[],h=[];for(t=0;t<7;t++)i=f([2e3,1]).day(t),n=this.weekdaysMin(i,""),s=this.weekdaysShort(i,""),a=this.weekdays(i,""),r.push(n),o.push(s),l.push(a),h.push(n),h.push(s),h.push(a);for(r.sort(e),o.sort(e),l.sort(e),h.sort(e),t=0;t<7;t++)o[t]=de(o[t]),l[t]=de(l[t]),h[t]=de(h[t]);this._weekdaysRegex=new RegExp("^("+h.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+r.join("|")+")","i")}function st(){return this.hours()%12||12}function at(e,t){U(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function rt(e,t){return t._meridiemParse}U("H",["HH",2],0,"hour"),U("h",["hh",2],0,st),U("k",["kk",2],0,(function(){return this.hours()||24})),U("hmm",0,0,(function(){return""+st.apply(this)+z(this.minutes(),2)})),U("hmmss",0,0,(function(){return""+st.apply(this)+z(this.minutes(),2)+z(this.seconds(),2)})),U("Hmm",0,0,(function(){return""+this.hours()+z(this.minutes(),2)})),U("Hmmss",0,0,(function(){return""+this.hours()+z(this.minutes(),2)+z(this.seconds(),2)})),at("a",!0),at("A",!1),N("hour","h"),L("hour",13),ue("a",rt),ue("A",rt),ue("H",J),ue("h",J),ue("k",J),ue("HH",J,$),ue("hh",J,$),ue("kk",J,$),ue("hmm",Q),ue("hmmss",ee),ue("Hmm",Q),ue("Hmmss",ee),pe(["H","HH"],be),pe(["k","kk"],(function(e,t,i){var n=D(e);t[be]=24===n?0:n})),pe(["a","A"],(function(e,t,i){i._isPm=i._locale.isPM(e),i._meridiem=e})),pe(["h","hh"],(function(e,t,i){t[be]=D(e),p(i).bigHour=!0})),pe("hmm",(function(e,t,i){var n=e.length-2;t[be]=D(e.substr(0,n)),t[we]=D(e.substr(n)),p(i).bigHour=!0})),pe("hmmss",(function(e,t,i){var n=e.length-4,s=e.length-2;t[be]=D(e.substr(0,n)),t[we]=D(e.substr(n,2)),t[ke]=D(e.substr(s)),p(i).bigHour=!0})),pe("Hmm",(function(e,t,i){var n=e.length-2;t[be]=D(e.substr(0,n)),t[we]=D(e.substr(n))})),pe("Hmmss",(function(e,t,i){var n=e.length-4,s=e.length-2;t[be]=D(e.substr(0,n)),t[we]=D(e.substr(n,2)),t[ke]=D(e.substr(s))}));var ot,lt=Oe("Hours",!0),ht={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:He,monthsShort:Ee,week:{dow:0,doy:6},weekdays:Ze,weekdaysMin:Je,weekdaysShort:Xe,meridiemParse:/[ap]\.?m?\.?/i},ut={},ct={};function dt(e){return e?e.toLowerCase().replace("_","-"):e}function ft(t){var n=null;if(!ut[t]&&void 0!==e&&e&&e.exports)try{n=ot._abbr,i(4)("./"+t),pt(n)}catch(e){}return ut[t]}function pt(e,t){var i;return e&&((i=o(t)?gt(e):mt(e,t))?ot=i:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),ot._abbr}function mt(e,t){if(null!==t){var i,n=ht;if(t.abbr=e,null!=ut[e])P("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),n=ut[e]._config;else if(null!=t.parentLocale)if(null!=ut[t.parentLocale])n=ut[t.parentLocale]._config;else{if(null==(i=ft(t.parentLocale)))return ct[t.parentLocale]||(ct[t.parentLocale]=[]),ct[t.parentLocale].push({name:e,config:t}),null;n=i._config}return ut[e]=new I(Y(n,t)),ct[e]&&ct[e].forEach((function(e){mt(e.name,e.config)})),pt(e),ut[e]}return delete ut[e],null}function gt(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return ot;if(!a(e)){if(t=ft(e))return t;e=[e]}return function(e){for(var t,i,n,s,a=0;a<e.length;){for(t=(s=dt(e[a]).split("-")).length,i=(i=dt(e[a+1]))?i.split("-"):null;t>0;){if(n=ft(s.slice(0,t).join("-")))return n;if(i&&i.length>=t&&x(s,i,!0)>=t-1)break;t--}a++}return ot}(e)}function vt(e){var t,i=e._a;return i&&-2===p(e).overflow&&(t=i[_e]<0||i[_e]>11?_e:i[ye]<1||i[ye]>Ae(i[ve],i[_e])?ye:i[be]<0||i[be]>24||24===i[be]&&(0!==i[we]||0!==i[ke]||0!==i[De])?be:i[we]<0||i[we]>59?we:i[ke]<0||i[ke]>59?ke:i[De]<0||i[De]>999?De:-1,p(e)._overflowDayOfYear&&(t<ve||t>ye)&&(t=ye),p(e)._overflowWeeks&&-1===t&&(t=xe),p(e)._overflowWeekday&&-1===t&&(t=Ce),p(e).overflow=t),e}function _t(e,t,i){return null!=e?e:null!=t?t:i}function yt(e){var t,i,n,a,r,o=[];if(!e._d){for(n=function(e){var t=new Date(s.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[ye]&&null==e._a[_e]&&function(e){var t,i,n,s,a,r,o,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)a=1,r=4,i=_t(t.GG,e._a[ve],Ge(Nt(),1,4).year),n=_t(t.W,1),((s=_t(t.E,1))<1||s>7)&&(l=!0);else{a=e._locale._week.dow,r=e._locale._week.doy;var h=Ge(Nt(),a,r);i=_t(t.gg,e._a[ve],h.year),n=_t(t.w,h.week),null!=t.d?((s=t.d)<0||s>6)&&(l=!0):null!=t.e?(s=t.e+a,(t.e<0||t.e>6)&&(l=!0)):s=a}n<1||n>$e(i,a,r)?p(e)._overflowWeeks=!0:null!=l?p(e)._overflowWeekday=!0:(o=qe(i,n,s,a,r),e._a[ve]=o.year,e._dayOfYear=o.dayOfYear)}(e),null!=e._dayOfYear&&(r=_t(e._a[ve],n[ve]),(e._dayOfYear>Me(r)||0===e._dayOfYear)&&(p(e)._overflowDayOfYear=!0),i=Ue(r,0,e._dayOfYear),e._a[_e]=i.getUTCMonth(),e._a[ye]=i.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=o[t]=n[t];for(;t<7;t++)e._a[t]=o[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[be]&&0===e._a[we]&&0===e._a[ke]&&0===e._a[De]&&(e._nextDay=!0,e._a[be]=0),e._d=(e._useUTC?Ue:Ve).apply(null,o),a=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[be]=24),e._w&&void 0!==e._w.d&&e._w.d!==a&&(p(e).weekdayMismatch=!0)}}var bt=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,wt=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,kt=/Z|[+-]\d\d(?::?\d\d)?/,Dt=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],xt=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Ct=/^\/?Date\((\-?\d+)/i;function Mt(e){var t,i,n,s,a,r,o=e._i,l=bt.exec(o)||wt.exec(o);if(l){for(p(e).iso=!0,t=0,i=Dt.length;t<i;t++)if(Dt[t][1].exec(l[1])){s=Dt[t][0],n=!1!==Dt[t][2];break}if(null==s)return void(e._isValid=!1);if(l[3]){for(t=0,i=xt.length;t<i;t++)if(xt[t][1].exec(l[3])){a=(l[2]||" ")+xt[t][0];break}if(null==a)return void(e._isValid=!1)}if(!n&&null!=a)return void(e._isValid=!1);if(l[4]){if(!kt.exec(l[4]))return void(e._isValid=!1);r="Z"}e._f=s+(a||"")+(r||""),Yt(e)}else e._isValid=!1}var St=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function Tt(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}var Pt={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Ot(e){var t,i,n,s,a,r,o,l=St.exec(e._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(l){var h=(t=l[4],i=l[3],n=l[2],s=l[5],a=l[6],r=l[7],o=[Tt(t),Ee.indexOf(i),parseInt(n,10),parseInt(s,10),parseInt(a,10)],r&&o.push(parseInt(r,10)),o);if(!function(e,t,i){return!e||Xe.indexOf(e)===new Date(t[0],t[1],t[2]).getDay()||(p(i).weekdayMismatch=!0,i._isValid=!1,!1)}(l[1],h,e))return;e._a=h,e._tzm=function(e,t,i){if(e)return Pt[e];if(t)return 0;var n=parseInt(i,10),s=n%100;return(n-s)/100*60+s}(l[8],l[9],l[10]),e._d=Ue.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),p(e).rfc2822=!0}else e._isValid=!1}function Yt(e){if(e._f!==s.ISO_8601)if(e._f!==s.RFC_2822){e._a=[],p(e).empty=!0;var t,i,n,a,r,o=""+e._i,l=o.length,h=0;for(n=q(e._f,e._locale).match(R)||[],t=0;t<n.length;t++)a=n[t],(i=(o.match(ce(a,e))||[])[0])&&((r=o.substr(0,o.indexOf(i))).length>0&&p(e).unusedInput.push(r),o=o.slice(o.indexOf(i)+i.length),h+=i.length),V[a]?(i?p(e).empty=!1:p(e).unusedTokens.push(a),ge(a,i,e)):e._strict&&!i&&p(e).unusedTokens.push(a);p(e).charsLeftOver=l-h,o.length>0&&p(e).unusedInput.push(o),e._a[be]<=12&&!0===p(e).bigHour&&e._a[be]>0&&(p(e).bigHour=void 0),p(e).parsedDateParts=e._a.slice(0),p(e).meridiem=e._meridiem,e._a[be]=function(e,t,i){var n;return null==i?t:null!=e.meridiemHour?e.meridiemHour(t,i):null!=e.isPM?((n=e.isPM(i))&&t<12&&(t+=12),n||12!==t||(t=0),t):t}(e._locale,e._a[be],e._meridiem),yt(e),vt(e)}else Ot(e);else Mt(e)}function It(e){var t=e._i,i=e._f;return e._locale=e._locale||gt(e._l),null===t||void 0===i&&""===t?g({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),w(t)?new b(vt(t)):(h(t)?e._d=t:a(i)?function(e){var t,i,n,s,a;if(0===e._f.length)return p(e).invalidFormat=!0,void(e._d=new Date(NaN));for(s=0;s<e._f.length;s++)a=0,t=_({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[s],Yt(t),m(t)&&(a+=p(t).charsLeftOver,a+=10*p(t).unusedTokens.length,p(t).score=a,(null==n||a<n)&&(n=a,i=t));d(e,i||t)}(e):i?Yt(e):function(e){var t=e._i;o(t)?e._d=new Date(s.now()):h(t)?e._d=new Date(t.valueOf()):"string"==typeof t?function(e){var t=Ct.exec(e._i);null===t?(Mt(e),!1===e._isValid&&(delete e._isValid,Ot(e),!1===e._isValid&&(delete e._isValid,s.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):a(t)?(e._a=u(t.slice(0),(function(e){return parseInt(e,10)})),yt(e)):r(t)?function(e){if(!e._d){var t=E(e._i);e._a=u([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),yt(e)}}(e):l(t)?e._d=new Date(t):s.createFromInputFallback(e)}(e),m(e)||(e._d=null),e))}function At(e,t,i,n,s){var o,l={};return!0!==i&&!1!==i||(n=i,i=void 0),(r(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||a(e)&&0===e.length)&&(e=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=s,l._l=i,l._i=e,l._f=t,l._strict=n,(o=new b(vt(It(l))))._nextDay&&(o.add(1,"d"),o._nextDay=void 0),o}function Nt(e,t,i,n){return At(e,t,i,n,!1)}s.createFromInputFallback=M("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),s.ISO_8601=function(){},s.RFC_2822=function(){};var Ht=M("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Nt.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:g()})),Et=M("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Nt.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:g()}));function Wt(e,t){var i,n;if(1===t.length&&a(t[0])&&(t=t[0]),!t.length)return Nt();for(i=t[0],n=1;n<t.length;++n)t[n].isValid()&&!t[n][e](i)||(i=t[n]);return i}var Lt=["year","quarter","month","week","day","hour","minute","second","millisecond"];function zt(e){var t=E(e),i=t.year||0,n=t.quarter||0,s=t.month||0,a=t.week||t.isoWeek||0,r=t.day||0,o=t.hour||0,l=t.minute||0,h=t.second||0,u=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===Te.call(Lt,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var i=!1,n=0;n<Lt.length;++n)if(e[Lt[n]]){if(i)return!1;parseFloat(e[Lt[n]])!==D(e[Lt[n]])&&(i=!0)}return!0}(t),this._milliseconds=+u+1e3*h+6e4*l+1e3*o*60*60,this._days=+r+7*a,this._months=+s+3*n+12*i,this._data={},this._locale=gt(),this._bubble()}function Rt(e){return e instanceof zt}function Ft(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function jt(e,t){U(e,0,0,(function(){var e=this.utcOffset(),i="+";return e<0&&(e=-e,i="-"),i+z(~~(e/60),2)+t+z(~~e%60,2)}))}jt("Z",":"),jt("ZZ",""),ue("Z",oe),ue("ZZ",oe),pe(["Z","ZZ"],(function(e,t,i){i._useUTC=!0,i._tzm=Ut(oe,e)}));var Vt=/([\+\-]|\d\d)/gi;function Ut(e,t){var i=(t||"").match(e);if(null===i)return null;var n=((i[i.length-1]||[])+"").match(Vt)||["-",0,0],s=60*n[1]+D(n[2]);return 0===s?0:"+"===n[0]?s:-s}function Bt(e,t){var i,n;return t._isUTC?(i=t.clone(),n=(w(e)||h(e)?e.valueOf():Nt(e).valueOf())-i.valueOf(),i._d.setTime(i._d.valueOf()+n),s.updateOffset(i,!1),i):Nt(e).local()}function qt(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function Gt(){return!!this.isValid()&&this._isUTC&&0===this._offset}s.updateOffset=function(){};var $t=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,Kt=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Zt(e,t){var i,n,s,a,r,o,h=e,u=null;return Rt(e)?h={ms:e._milliseconds,d:e._days,M:e._months}:l(e)?(h={},t?h[t]=e:h.milliseconds=e):(u=$t.exec(e))?(i="-"===u[1]?-1:1,h={y:0,d:D(u[ye])*i,h:D(u[be])*i,m:D(u[we])*i,s:D(u[ke])*i,ms:D(Ft(1e3*u[De]))*i}):(u=Kt.exec(e))?(i="-"===u[1]?-1:1,h={y:Xt(u[2],i),M:Xt(u[3],i),w:Xt(u[4],i),d:Xt(u[5],i),h:Xt(u[6],i),m:Xt(u[7],i),s:Xt(u[8],i)}):null==h?h={}:"object"==typeof h&&("from"in h||"to"in h)&&(a=Nt(h.from),r=Nt(h.to),s=a.isValid()&&r.isValid()?(r=Bt(r,a),a.isBefore(r)?o=Jt(a,r):((o=Jt(r,a)).milliseconds=-o.milliseconds,o.months=-o.months),o):{milliseconds:0,months:0},(h={}).ms=s.milliseconds,h.M=s.months),n=new zt(h),Rt(e)&&c(e,"_locale")&&(n._locale=e._locale),n}function Xt(e,t){var i=e&&parseFloat(e.replace(",","."));return(isNaN(i)?0:i)*t}function Jt(e,t){var i={};return i.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(i.months,"M").isAfter(t)&&--i.months,i.milliseconds=+t-+e.clone().add(i.months,"M"),i}function Qt(e,t){return function(i,n){var s;return null===n||isNaN(+n)||(P(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),s=i,i=n,n=s),ei(this,Zt(i="string"==typeof i?+i:i,n),e),this}}function ei(e,t,i,n){var a=t._milliseconds,r=Ft(t._days),o=Ft(t._months);e.isValid()&&(n=null==n||n,o&&Le(e,Ye(e,"Month")+o*i),r&&Ie(e,"Date",Ye(e,"Date")+r*i),a&&e._d.setTime(e._d.valueOf()+a*i),n&&s.updateOffset(e,r||o))}Zt.fn=zt.prototype,Zt.invalid=function(){return Zt(NaN)};var ti=Qt(1,"add"),ii=Qt(-1,"subtract");function ni(e,t){var i=12*(t.year()-e.year())+(t.month()-e.month()),n=e.clone().add(i,"months");return-(i+(t-n<0?(t-n)/(n-e.clone().add(i-1,"months")):(t-n)/(e.clone().add(i+1,"months")-n)))||0}function si(e){var t;return void 0===e?this._locale._abbr:(null!=(t=gt(e))&&(this._locale=t),this)}s.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",s.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var ai=M("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));function ri(){return this._locale}var oi=1e3,li=60*oi,hi=60*li,ui=3506328*hi;function ci(e,t){return(e%t+t)%t}function di(e,t,i){return e<100&&e>=0?new Date(e+400,t,i)-ui:new Date(e,t,i).valueOf()}function fi(e,t,i){return e<100&&e>=0?Date.UTC(e+400,t,i)-ui:Date.UTC(e,t,i)}function pi(e,t){U(0,[e,e.length],0,t)}function mi(e,t,i,n,s){var a;return null==e?Ge(this,n,s).year:(t>(a=$e(e,n,s))&&(t=a),gi.call(this,e,t,i,n,s))}function gi(e,t,i,n,s){var a=qe(e,t,i,n,s),r=Ue(a.year,0,a.dayOfYear);return this.year(r.getUTCFullYear()),this.month(r.getUTCMonth()),this.date(r.getUTCDate()),this}U(0,["gg",2],0,(function(){return this.weekYear()%100})),U(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),pi("gggg","weekYear"),pi("ggggg","weekYear"),pi("GGGG","isoWeekYear"),pi("GGGGG","isoWeekYear"),N("weekYear","gg"),N("isoWeekYear","GG"),L("weekYear",1),L("isoWeekYear",1),ue("G",ae),ue("g",ae),ue("GG",J,$),ue("gg",J,$),ue("GGGG",ie,Z),ue("gggg",ie,Z),ue("GGGGG",ne,X),ue("ggggg",ne,X),me(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,i,n){t[n.substr(0,2)]=D(e)})),me(["gg","GG"],(function(e,t,i,n){t[n]=s.parseTwoDigitYear(e)})),U("Q",0,"Qo","quarter"),N("quarter","Q"),L("quarter",7),ue("Q",G),pe("Q",(function(e,t){t[_e]=3*(D(e)-1)})),U("D",["DD",2],"Do","date"),N("date","D"),L("date",9),ue("D",J),ue("DD",J,$),ue("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),pe(["D","DD"],ye),pe("Do",(function(e,t){t[ye]=D(e.match(J)[0])}));var vi=Oe("Date",!0);U("DDD",["DDDD",3],"DDDo","dayOfYear"),N("dayOfYear","DDD"),L("dayOfYear",4),ue("DDD",te),ue("DDDD",K),pe(["DDD","DDDD"],(function(e,t,i){i._dayOfYear=D(e)})),U("m",["mm",2],0,"minute"),N("minute","m"),L("minute",14),ue("m",J),ue("mm",J,$),pe(["m","mm"],we);var _i=Oe("Minutes",!1);U("s",["ss",2],0,"second"),N("second","s"),L("second",15),ue("s",J),ue("ss",J,$),pe(["s","ss"],ke);var yi,bi=Oe("Seconds",!1);for(U("S",0,0,(function(){return~~(this.millisecond()/100)})),U(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),U(0,["SSS",3],0,"millisecond"),U(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),U(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),U(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),U(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),U(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),U(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),N("millisecond","ms"),L("millisecond",16),ue("S",te,G),ue("SS",te,$),ue("SSS",te,K),yi="SSSS";yi.length<=9;yi+="S")ue(yi,se);function wi(e,t){t[De]=D(1e3*("0."+e))}for(yi="S";yi.length<=9;yi+="S")pe(yi,wi);var ki=Oe("Milliseconds",!1);U("z",0,0,"zoneAbbr"),U("zz",0,0,"zoneName");var Di=b.prototype;function xi(e){return e}Di.add=ti,Di.calendar=function(e,t){var i=e||Nt(),n=Bt(i,this).startOf("day"),a=s.calendarFormat(this,n)||"sameElse",r=t&&(O(t[a])?t[a].call(this,i):t[a]);return this.format(r||this.localeData().calendar(a,this,Nt(i)))},Di.clone=function(){return new b(this)},Di.diff=function(e,t,i){var n,s,a;if(!this.isValid())return NaN;if(!(n=Bt(e,this)).isValid())return NaN;switch(s=6e4*(n.utcOffset()-this.utcOffset()),t=H(t)){case"year":a=ni(this,n)/12;break;case"month":a=ni(this,n);break;case"quarter":a=ni(this,n)/3;break;case"second":a=(this-n)/1e3;break;case"minute":a=(this-n)/6e4;break;case"hour":a=(this-n)/36e5;break;case"day":a=(this-n-s)/864e5;break;case"week":a=(this-n-s)/6048e5;break;default:a=this-n}return i?a:k(a)},Di.endOf=function(e){var t;if(void 0===(e=H(e))||"millisecond"===e||!this.isValid())return this;var i=this._isUTC?fi:di;switch(e){case"year":t=i(this.year()+1,0,1)-1;break;case"quarter":t=i(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":t=i(this.year(),this.month()+1,1)-1;break;case"week":t=i(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":t=i(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":t=i(this.year(),this.month(),this.date()+1)-1;break;case"hour":t=this._d.valueOf(),t+=hi-ci(t+(this._isUTC?0:this.utcOffset()*li),hi)-1;break;case"minute":t=this._d.valueOf(),t+=li-ci(t,li)-1;break;case"second":t=this._d.valueOf(),t+=oi-ci(t,oi)-1}return this._d.setTime(t),s.updateOffset(this,!0),this},Di.format=function(e){e||(e=this.isUtc()?s.defaultFormatUtc:s.defaultFormat);var t=B(this,e);return this.localeData().postformat(t)},Di.from=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||Nt(e).isValid())?Zt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},Di.fromNow=function(e){return this.from(Nt(),e)},Di.to=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||Nt(e).isValid())?Zt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},Di.toNow=function(e){return this.to(Nt(),e)},Di.get=function(e){return O(this[e=H(e)])?this[e]():this},Di.invalidAt=function(){return p(this).overflow},Di.isAfter=function(e,t){var i=w(e)?e:Nt(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=H(t)||"millisecond")?this.valueOf()>i.valueOf():i.valueOf()<this.clone().startOf(t).valueOf())},Di.isBefore=function(e,t){var i=w(e)?e:Nt(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=H(t)||"millisecond")?this.valueOf()<i.valueOf():this.clone().endOf(t).valueOf()<i.valueOf())},Di.isBetween=function(e,t,i,n){var s=w(e)?e:Nt(e),a=w(t)?t:Nt(t);return!!(this.isValid()&&s.isValid()&&a.isValid())&&("("===(n=n||"()")[0]?this.isAfter(s,i):!this.isBefore(s,i))&&(")"===n[1]?this.isBefore(a,i):!this.isAfter(a,i))},Di.isSame=function(e,t){var i,n=w(e)?e:Nt(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=H(t)||"millisecond")?this.valueOf()===n.valueOf():(i=n.valueOf(),this.clone().startOf(t).valueOf()<=i&&i<=this.clone().endOf(t).valueOf()))},Di.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},Di.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},Di.isValid=function(){return m(this)},Di.lang=ai,Di.locale=si,Di.localeData=ri,Di.max=Et,Di.min=Ht,Di.parsingFlags=function(){return d({},p(this))},Di.set=function(e,t){if("object"==typeof e)for(var i=function(e){var t=[];for(var i in e)t.push({unit:i,priority:W[i]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=E(e)),n=0;n<i.length;n++)this[i[n].unit](e[i[n].unit]);else if(O(this[e=H(e)]))return this[e](t);return this},Di.startOf=function(e){var t;if(void 0===(e=H(e))||"millisecond"===e||!this.isValid())return this;var i=this._isUTC?fi:di;switch(e){case"year":t=i(this.year(),0,1);break;case"quarter":t=i(this.year(),this.month()-this.month()%3,1);break;case"month":t=i(this.year(),this.month(),1);break;case"week":t=i(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":t=i(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":t=i(this.year(),this.month(),this.date());break;case"hour":t=this._d.valueOf(),t-=ci(t+(this._isUTC?0:this.utcOffset()*li),hi);break;case"minute":t=this._d.valueOf(),t-=ci(t,li);break;case"second":t=this._d.valueOf(),t-=ci(t,oi)}return this._d.setTime(t),s.updateOffset(this,!0),this},Di.subtract=ii,Di.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},Di.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},Di.toDate=function(){return new Date(this.valueOf())},Di.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,i=t?this.clone().utc():this;return i.year()<0||i.year()>9999?B(i,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):O(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",B(i,"Z")):B(i,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},Di.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var i="["+e+'("]',n=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",s=t+'[")]';return this.format(i+n+"-MM-DD[T]HH:mm:ss.SSS"+s)},Di.toJSON=function(){return this.isValid()?this.toISOString():null},Di.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},Di.unix=function(){return Math.floor(this.valueOf()/1e3)},Di.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},Di.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},Di.year=Pe,Di.isLeapYear=function(){return Se(this.year())},Di.weekYear=function(e){return mi.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},Di.isoWeekYear=function(e){return mi.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},Di.quarter=Di.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},Di.month=ze,Di.daysInMonth=function(){return Ae(this.year(),this.month())},Di.week=Di.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},Di.isoWeek=Di.isoWeeks=function(e){var t=Ge(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},Di.weeksInYear=function(){var e=this.localeData()._week;return $e(this.year(),e.dow,e.doy)},Di.isoWeeksInYear=function(){return $e(this.year(),1,4)},Di.date=vi,Di.day=Di.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=function(e,t){return"string"!=typeof e?e:isNaN(e)?"number"==typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10)}(e,this.localeData()),this.add(e-t,"d")):t},Di.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},Di.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=function(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},Di.dayOfYear=function(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")},Di.hour=Di.hours=lt,Di.minute=Di.minutes=_i,Di.second=Di.seconds=bi,Di.millisecond=Di.milliseconds=ki,Di.utcOffset=function(e,t,i){var n,a=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if("string"==typeof e){if(null===(e=Ut(oe,e)))return this}else Math.abs(e)<16&&!i&&(e*=60);return!this._isUTC&&t&&(n=qt(this)),this._offset=e,this._isUTC=!0,null!=n&&this.add(n,"m"),a!==e&&(!t||this._changeInProgress?ei(this,Zt(e-a,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,s.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?a:qt(this)},Di.utc=function(e){return this.utcOffset(0,e)},Di.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(qt(this),"m")),this},Di.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Ut(re,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},Di.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?Nt(e).utcOffset():0,(this.utcOffset()-e)%60==0)},Di.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},Di.isLocal=function(){return!!this.isValid()&&!this._isUTC},Di.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},Di.isUtc=Gt,Di.isUTC=Gt,Di.zoneAbbr=function(){return this._isUTC?"UTC":""},Di.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},Di.dates=M("dates accessor is deprecated. Use date instead.",vi),Di.months=M("months accessor is deprecated. Use month instead",ze),Di.years=M("years accessor is deprecated. Use year instead",Pe),Di.zone=M("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()})),Di.isDSTShifted=M("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!o(this._isDSTShifted))return this._isDSTShifted;var e={};if(_(e,this),(e=It(e))._a){var t=e._isUTC?f(e._a):Nt(e._a);this._isDSTShifted=this.isValid()&&x(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}));var Ci=I.prototype;function Mi(e,t,i,n){var s=gt(),a=f().set(n,t);return s[i](a,e)}function Si(e,t,i){if(l(e)&&(t=e,e=void 0),e=e||"",null!=t)return Mi(e,t,i,"month");var n,s=[];for(n=0;n<12;n++)s[n]=Mi(e,n,i,"month");return s}function Ti(e,t,i,n){"boolean"==typeof e?(l(t)&&(i=t,t=void 0),t=t||""):(i=t=e,e=!1,l(t)&&(i=t,t=void 0),t=t||"");var s,a=gt(),r=e?a._week.dow:0;if(null!=i)return Mi(t,(i+r)%7,n,"day");var o=[];for(s=0;s<7;s++)o[s]=Mi(t,(s+r)%7,n,"day");return o}Ci.calendar=function(e,t,i){var n=this._calendar[e]||this._calendar.sameElse;return O(n)?n.call(t,i):n},Ci.longDateFormat=function(e){var t=this._longDateFormat[e],i=this._longDateFormat[e.toUpperCase()];return t||!i?t:(this._longDateFormat[e]=i.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},Ci.invalidDate=function(){return this._invalidDate},Ci.ordinal=function(e){return this._ordinal.replace("%d",e)},Ci.preparse=xi,Ci.postformat=xi,Ci.relativeTime=function(e,t,i,n){var s=this._relativeTime[i];return O(s)?s(e,t,i,n):s.replace(/%d/i,e)},Ci.pastFuture=function(e,t){var i=this._relativeTime[e>0?"future":"past"];return O(i)?i(t):i.replace(/%s/i,t)},Ci.set=function(e){var t,i;for(i in e)O(t=e[i])?this[i]=t:this["_"+i]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},Ci.months=function(e,t){return e?a(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Ne).test(t)?"format":"standalone"][e.month()]:a(this._months)?this._months:this._months.standalone},Ci.monthsShort=function(e,t){return e?a(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Ne.test(t)?"format":"standalone"][e.month()]:a(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},Ci.monthsParse=function(e,t,i){var n,s,a;if(this._monthsParseExact)return We.call(this,e,t,i);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;n<12;n++){if(s=f([2e3,n]),i&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp("^"+this.months(s,"").replace(".","")+"$","i"),this._shortMonthsParse[n]=new RegExp("^"+this.monthsShort(s,"").replace(".","")+"$","i")),i||this._monthsParse[n]||(a="^"+this.months(s,"")+"|^"+this.monthsShort(s,""),this._monthsParse[n]=new RegExp(a.replace(".",""),"i")),i&&"MMMM"===t&&this._longMonthsParse[n].test(e))return n;if(i&&"MMM"===t&&this._shortMonthsParse[n].test(e))return n;if(!i&&this._monthsParse[n].test(e))return n}},Ci.monthsRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||je.call(this),e?this._monthsStrictRegex:this._monthsRegex):(c(this,"_monthsRegex")||(this._monthsRegex=Fe),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},Ci.monthsShortRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||je.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(c(this,"_monthsShortRegex")||(this._monthsShortRegex=Re),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},Ci.week=function(e){return Ge(e,this._week.dow,this._week.doy).week},Ci.firstDayOfYear=function(){return this._week.doy},Ci.firstDayOfWeek=function(){return this._week.dow},Ci.weekdays=function(e,t){var i=a(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?Ke(i,this._week.dow):e?i[e.day()]:i},Ci.weekdaysMin=function(e){return!0===e?Ke(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},Ci.weekdaysShort=function(e){return!0===e?Ke(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},Ci.weekdaysParse=function(e,t,i){var n,s,a;if(this._weekdaysParseExact)return Qe.call(this,e,t,i);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),n=0;n<7;n++){if(s=f([2e3,1]).day(n),i&&!this._fullWeekdaysParse[n]&&(this._fullWeekdaysParse[n]=new RegExp("^"+this.weekdays(s,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[n]=new RegExp("^"+this.weekdaysShort(s,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[n]=new RegExp("^"+this.weekdaysMin(s,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[n]||(a="^"+this.weekdays(s,"")+"|^"+this.weekdaysShort(s,"")+"|^"+this.weekdaysMin(s,""),this._weekdaysParse[n]=new RegExp(a.replace(".",""),"i")),i&&"dddd"===t&&this._fullWeekdaysParse[n].test(e))return n;if(i&&"ddd"===t&&this._shortWeekdaysParse[n].test(e))return n;if(i&&"dd"===t&&this._minWeekdaysParse[n].test(e))return n;if(!i&&this._weekdaysParse[n].test(e))return n}},Ci.weekdaysRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||nt.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(c(this,"_weekdaysRegex")||(this._weekdaysRegex=et),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},Ci.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||nt.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(c(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=tt),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},Ci.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||nt.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(c(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=it),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},Ci.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},Ci.meridiem=function(e,t,i){return e>11?i?"pm":"PM":i?"am":"AM"},pt("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===D(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),s.lang=M("moment.lang is deprecated. Use moment.locale instead.",pt),s.langData=M("moment.langData is deprecated. Use moment.localeData instead.",gt);var Pi=Math.abs;function Oi(e,t,i,n){var s=Zt(t,i);return e._milliseconds+=n*s._milliseconds,e._days+=n*s._days,e._months+=n*s._months,e._bubble()}function Yi(e){return e<0?Math.floor(e):Math.ceil(e)}function Ii(e){return 4800*e/146097}function Ai(e){return 146097*e/4800}function Ni(e){return function(){return this.as(e)}}var Hi=Ni("ms"),Ei=Ni("s"),Wi=Ni("m"),Li=Ni("h"),zi=Ni("d"),Ri=Ni("w"),Fi=Ni("M"),ji=Ni("Q"),Vi=Ni("y");function Ui(e){return function(){return this.isValid()?this._data[e]:NaN}}var Bi=Ui("milliseconds"),qi=Ui("seconds"),Gi=Ui("minutes"),$i=Ui("hours"),Ki=Ui("days"),Zi=Ui("months"),Xi=Ui("years"),Ji=Math.round,Qi={ss:44,s:45,m:45,h:22,d:26,M:11};function en(e,t,i,n,s){return s.relativeTime(t||1,!!i,e,n)}var tn=Math.abs;function nn(e){return(e>0)-(e<0)||+e}function sn(){if(!this.isValid())return this.localeData().invalidDate();var e,t,i=tn(this._milliseconds)/1e3,n=tn(this._days),s=tn(this._months);e=k(i/60),t=k(e/60),i%=60,e%=60;var a=k(s/12),r=s%=12,o=n,l=t,h=e,u=i?i.toFixed(3).replace(/\.?0+$/,""):"",c=this.asSeconds();if(!c)return"P0D";var d=c<0?"-":"",f=nn(this._months)!==nn(c)?"-":"",p=nn(this._days)!==nn(c)?"-":"",m=nn(this._milliseconds)!==nn(c)?"-":"";return d+"P"+(a?f+a+"Y":"")+(r?f+r+"M":"")+(o?p+o+"D":"")+(l||h||u?"T":"")+(l?m+l+"H":"")+(h?m+h+"M":"")+(u?m+u+"S":"")}var an=zt.prototype;return an.isValid=function(){return this._isValid},an.abs=function(){var e=this._data;return this._milliseconds=Pi(this._milliseconds),this._days=Pi(this._days),this._months=Pi(this._months),e.milliseconds=Pi(e.milliseconds),e.seconds=Pi(e.seconds),e.minutes=Pi(e.minutes),e.hours=Pi(e.hours),e.months=Pi(e.months),e.years=Pi(e.years),this},an.add=function(e,t){return Oi(this,e,t,1)},an.subtract=function(e,t){return Oi(this,e,t,-1)},an.as=function(e){if(!this.isValid())return NaN;var t,i,n=this._milliseconds;if("month"===(e=H(e))||"quarter"===e||"year"===e)switch(t=this._days+n/864e5,i=this._months+Ii(t),e){case"month":return i;case"quarter":return i/3;case"year":return i/12}else switch(t=this._days+Math.round(Ai(this._months)),e){case"week":return t/7+n/6048e5;case"day":return t+n/864e5;case"hour":return 24*t+n/36e5;case"minute":return 1440*t+n/6e4;case"second":return 86400*t+n/1e3;case"millisecond":return Math.floor(864e5*t)+n;default:throw new Error("Unknown unit "+e)}},an.asMilliseconds=Hi,an.asSeconds=Ei,an.asMinutes=Wi,an.asHours=Li,an.asDays=zi,an.asWeeks=Ri,an.asMonths=Fi,an.asQuarters=ji,an.asYears=Vi,an.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*D(this._months/12):NaN},an._bubble=function(){var e,t,i,n,s,a=this._milliseconds,r=this._days,o=this._months,l=this._data;return a>=0&&r>=0&&o>=0||a<=0&&r<=0&&o<=0||(a+=864e5*Yi(Ai(o)+r),r=0,o=0),l.milliseconds=a%1e3,e=k(a/1e3),l.seconds=e%60,t=k(e/60),l.minutes=t%60,i=k(t/60),l.hours=i%24,r+=k(i/24),s=k(Ii(r)),o+=s,r-=Yi(Ai(s)),n=k(o/12),o%=12,l.days=r,l.months=o,l.years=n,this},an.clone=function(){return Zt(this)},an.get=function(e){return e=H(e),this.isValid()?this[e+"s"]():NaN},an.milliseconds=Bi,an.seconds=qi,an.minutes=Gi,an.hours=$i,an.days=Ki,an.weeks=function(){return k(this.days()/7)},an.months=Zi,an.years=Xi,an.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),i=function(e,t,i){var n=Zt(e).abs(),s=Ji(n.as("s")),a=Ji(n.as("m")),r=Ji(n.as("h")),o=Ji(n.as("d")),l=Ji(n.as("M")),h=Ji(n.as("y")),u=s<=Qi.ss&&["s",s]||s<Qi.s&&["ss",s]||a<=1&&["m"]||a<Qi.m&&["mm",a]||r<=1&&["h"]||r<Qi.h&&["hh",r]||o<=1&&["d"]||o<Qi.d&&["dd",o]||l<=1&&["M"]||l<Qi.M&&["MM",l]||h<=1&&["y"]||["yy",h];return u[2]=t,u[3]=+e>0,u[4]=i,en.apply(null,u)}(this,!e,t);return e&&(i=t.pastFuture(+this,i)),t.postformat(i)},an.toISOString=sn,an.toString=sn,an.toJSON=sn,an.locale=si,an.localeData=ri,an.toIsoString=M("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",sn),an.lang=ai,U("X",0,0,"unix"),U("x",0,0,"valueOf"),ue("x",ae),ue("X",/[+-]?\d+(\.\d{1,3})?/),pe("X",(function(e,t,i){i._d=new Date(1e3*parseFloat(e,10))})),pe("x",(function(e,t,i){i._d=new Date(D(e))})),s.version="2.24.0",t=Nt,s.fn=Di,s.min=function(){return Wt("isBefore",[].slice.call(arguments,0))},s.max=function(){return Wt("isAfter",[].slice.call(arguments,0))},s.now=function(){return Date.now?Date.now():+new Date},s.utc=f,s.unix=function(e){return Nt(1e3*e)},s.months=function(e,t){return Si(e,t,"months")},s.isDate=h,s.locale=pt,s.invalid=g,s.duration=Zt,s.isMoment=w,s.weekdays=function(e,t,i){return Ti(e,t,i,"weekdays")},s.parseZone=function(){return Nt.apply(null,arguments).parseZone()},s.localeData=gt,s.isDuration=Rt,s.monthsShort=function(e,t){return Si(e,t,"monthsShort")},s.weekdaysMin=function(e,t,i){return Ti(e,t,i,"weekdaysMin")},s.defineLocale=mt,s.updateLocale=function(e,t){if(null!=t){var i,n,s=ht;null!=(n=ft(e))&&(s=n._config),t=Y(s,t),(i=new I(t)).parentLocale=ut[e],ut[e]=i,pt(e)}else null!=ut[e]&&(null!=ut[e].parentLocale?ut[e]=ut[e].parentLocale:null!=ut[e]&&delete ut[e]);return ut[e]},s.locales=function(){return S(ut)},s.weekdaysShort=function(e,t,i){return Ti(e,t,i,"weekdaysShort")},s.normalizeUnits=H,s.relativeTimeRounding=function(e){return void 0===e?Ji:"function"==typeof e&&(Ji=e,!0)},s.relativeTimeThreshold=function(e,t){return void 0!==Qi[e]&&(void 0===t?Qi[e]:(Qi[e]=t,"s"===e&&(Qi.ss=t-1),!0))},s.calendarFormat=function(e,t){var i=e.diff(t,"days",!0);return i<-6?"sameElse":i<-1?"lastWeek":i<0?"lastDay":i<1?"sameDay":i<2?"nextDay":i<7?"nextWeek":"sameElse"},s.prototype=Di,s.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},s}()}).call(this,i(3)(e))},function(e,t,i){var n,s,a={},r=(n=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===s&&(s=n.apply(this,arguments)),s}),o=function(e,t){return t?t.querySelector(e):document.querySelector(e)},l=function(e){var t={};return function(e,i){if("function"==typeof e)return e();if(void 0===t[e]){var n=o.call(this,e,i);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),h=null,u=0,c=[],d=i(7);function f(e,t){for(var i=0;i<e.length;i++){var n=e[i],s=a[n.id];if(s){s.refs++;for(var r=0;r<s.parts.length;r++)s.parts[r](n.parts[r]);for(;r<n.parts.length;r++)s.parts.push(y(n.parts[r],t))}else{var o=[];for(r=0;r<n.parts.length;r++)o.push(y(n.parts[r],t));a[n.id]={id:n.id,refs:1,parts:o}}}}function p(e,t){for(var i=[],n={},s=0;s<e.length;s++){var a=e[s],r=t.base?a[0]+t.base:a[0],o={css:a[1],media:a[2],sourceMap:a[3]};n[r]?n[r].parts.push(o):i.push(n[r]={id:r,parts:[o]})}return i}function m(e,t){var i=l(e.insertInto);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var n=c[c.length-1];if("top"===e.insertAt)n?n.nextSibling?i.insertBefore(t,n.nextSibling):i.appendChild(t):i.insertBefore(t,i.firstChild),c.push(t);else if("bottom"===e.insertAt)i.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var s=l(e.insertAt.before,i);i.insertBefore(t,s)}}function g(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=c.indexOf(e);t>=0&&c.splice(t,1)}function v(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var n=function(){0;return i.nc}();n&&(e.attrs.nonce=n)}return _(t,e.attrs),m(e,t),t}function _(e,t){Object.keys(t).forEach((function(i){e.setAttribute(i,t[i])}))}function y(e,t){var i,n,s,a;if(t.transform&&e.css){if(!(a="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=a}if(t.singleton){var r=u++;i=h||(h=v(t)),n=k.bind(null,i,r,!1),s=k.bind(null,i,r,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(i=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",_(t,e.attrs),m(e,t),t}(t),n=x.bind(null,i,t),s=function(){g(i),i.href&&URL.revokeObjectURL(i.href)}):(i=v(t),n=D.bind(null,i),s=function(){g(i)});return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else s()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=r()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var i=p(e,t);return f(i,t),function(e){for(var n=[],s=0;s<i.length;s++){var r=i[s];(o=a[r.id]).refs--,n.push(o)}e&&f(p(e,t),t);for(s=0;s<n.length;s++){var o;if(0===(o=n[s]).refs){for(var l=0;l<o.parts.length;l++)o.parts[l]();delete a[o.id]}}}};var b,w=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function k(e,t,i,n){var s=i?"":n.css;if(e.styleSheet)e.styleSheet.cssText=w(t,s);else{var a=document.createTextNode(s),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(a,r[t]):e.appendChild(a)}}function D(e,t){var i=t.css,n=t.media;if(n&&e.setAttribute("media",n),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}function x(e,t,i){var n=i.css,s=i.sourceMap,a=void 0===t.convertToAbsoluteUrls&&s;(t.convertToAbsoluteUrls||a)&&(n=d(n)),s&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */");var r=new Blob([n],{type:"text/css"}),o=e.href;e.href=URL.createObjectURL(r),o&&URL.revokeObjectURL(o)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,i){var n={"./index.js":23};function s(e){var t=a(e);return i(t)}function a(e){if(!i.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}s.keys=function(){return Object.keys(n)},s.resolve=a,e.exports=s,s.id=4},function(e,t,i){var n=i(6);"string"==typeof n&&(n=[[e.i,n,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};i(2)(n,s);n.locals&&(e.exports=n.locals)},function(e,t,i){},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var i=t.protocol+"//"+t.host,n=i+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,t){var s,a=t.trim().replace(/^"(.*)"$/,(function(e,t){return t})).replace(/^'(.*)'$/,(function(e,t){return t}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(s=0===a.indexOf("//")?a:0===a.indexOf("/")?i+a:n+a.replace(/^\.\//,""),"url("+JSON.stringify(s)+")")}))}},function(e,t,i){var n,s,a;s=[i(0)],void 0===(a="function"==typeof(n=function(e){var t,i=navigator.userAgent,n=/iphone/i.test(i),s=/chrome/i.test(i),a=/android/i.test(i);e.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},autoclear:!0,dataName:"rawMaskFn",placeholder:"_"},e.fn.extend({caret:function(e,t){var i;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof e?(t="number"==typeof t?t:e,this.each((function(){this.setSelectionRange?this.setSelectionRange(e,t):this.createTextRange&&((i=this.createTextRange()).collapse(!0),i.moveEnd("character",t),i.moveStart("character",e),i.select())}))):(this[0].setSelectionRange?(e=this[0].selectionStart,t=this[0].selectionEnd):document.selection&&document.selection.createRange&&(i=document.selection.createRange(),e=0-i.duplicate().moveStart("character",-1e5),t=e+i.text.length),{begin:e,end:t})},unmask:function(){return this.trigger("unmask")},mask:function(i,r){var o,l,h,u,c,d,f;if(!i&&this.length>0){var p=e(this[0]).data(e.mask.dataName);return p?p():void 0}return r=e.extend({autoclear:e.mask.autoclear,placeholder:e.mask.placeholder,completed:null},r),o=e.mask.definitions,l=[],h=d=i.length,u=null,e.each(i.split(""),(function(e,t){"?"==t?(d--,h=e):o[t]?(l.push(new RegExp(o[t])),null===u&&(u=l.length-1),h>e&&(c=l.length-1)):l.push(null)})),this.trigger("unmask").each((function(){function p(){if(r.completed){for(var e=u;c>=e;e++)if(l[e]&&D[e]===m(e))return;r.completed.call(k)}}function m(e){return r.placeholder.charAt(e<r.placeholder.length?e:0)}function g(e){for(;++e<d&&!l[e];);return e}function v(e,t){var i,n;if(!(0>e)){for(i=e,n=g(t);d>i;i++)if(l[i]){if(!(d>n&&l[i].test(D[n])))break;D[i]=D[n],D[n]=m(n),n=g(n)}b(),k.caret(Math.max(u,e))}}function _(){w(),k.val()!=C&&k.change()}function y(e,t){var i;for(i=e;t>i&&d>i;i++)l[i]&&(D[i]=m(i))}function b(){k.val(D.join(""))}function w(e){var t,i,n,s=k.val(),a=-1;for(t=0,n=0;d>t;t++)if(l[t]){for(D[t]=m(t);n++<s.length;)if(i=s.charAt(n-1),l[t].test(i)){D[t]=i,a=t;break}if(n>s.length){y(t+1,d);break}}else D[t]===s.charAt(n)&&n++,h>t&&(a=t);return e?b():h>a+1?r.autoclear||D.join("")===x?(k.val()&&k.val(""),y(0,d)):b():(b(),k.val(k.val().substring(0,a+1))),h?t:u}var k=e(this),D=e.map(i.split(""),(function(e,t){return"?"!=e?o[e]?m(t):e:void 0})),x=D.join(""),C=k.val();k.data(e.mask.dataName,(function(){return e.map(D,(function(e,t){return l[t]&&e!=m(t)?e:null})).join("")})),k.one("unmask",(function(){k.off(".mask").removeData(e.mask.dataName)})).on("focus.mask",(function(){var e;k.prop("readonly")||(clearTimeout(t),C=k.val(),e=w(),t=setTimeout((function(){k.get(0)===document.activeElement&&(b(),e==i.replace("?","").length?k.caret(0,e):k.caret(e))}),10))})).on("blur.mask",_).on("keydown.mask",(function(e){if(!k.prop("readonly")){var t,i,s,a=e.which||e.keyCode;f=k.val(),8===a||46===a||n&&127===a?(i=(t=k.caret()).begin,(s=t.end)-i==0&&(i=46!==a?function(e){for(;--e>=0&&!l[e];);return e}(i):s=g(i-1),s=46===a?g(s):s),y(i,s),v(i,s-1),e.preventDefault()):13===a?_.call(this,e):27===a&&(k.val(C),k.caret(0,w()),e.preventDefault())}})).on("keypress.mask",(function(t){if(!k.prop("readonly")){var i,n,s,r=t.which||t.keyCode,o=k.caret();t.ctrlKey||t.altKey||t.metaKey||32>r||!r||13===r||(o.end-o.begin!=0&&(y(o.begin,o.end),v(o.begin,o.end-1)),i=g(o.begin-1),d>i&&(n=String.fromCharCode(r),l[i].test(n))&&(function(e){var t,i,n,s;for(t=e,i=m(e);d>t;t++)if(l[t]){if(n=g(t),s=D[t],D[t]=i,!(d>n&&l[n].test(s)))break;i=s}}(i),D[i]=n,b(),s=g(i),a?setTimeout((function(){e.proxy(e.fn.caret,k,s)()}),0):k.caret(s),o.begin<=c&&p()),t.preventDefault())}})).on("input.mask paste.mask",(function(){k.prop("readonly")||setTimeout((function(){var e=w(!0);k.caret(e),p()}),0)})),s&&a&&k.off("input.mask").on("input.mask",(function(){var e=k.val(),t=k.caret();if(f&&f.length&&f.length>e.length){for(w(!0);t.begin>0&&!l[t.begin-1];)t.begin--;if(0===t.begin)for(;t.begin<u&&!l[t.begin];)t.begin++;k.caret(t.begin,t.begin)}else{for(w(!0);t.begin<d&&!l[t.begin];)t.begin++;k.caret(t.begin,t.begin)}p()})),w()}))}})})?n.apply(t,s):n)||(e.exports=a)},function(e,t,i){"use strict";i(10)},function(e,t,i){var n=i(11);n.keys().forEach(n)},function(e,t,i){var n={"./android-chrome-144x144.png":12,"./apple-touch-icon.png":13,"./browserconfig.xml":14,"./favicon-16x16.png":15,"./favicon-32x32.png":16,"./favicon.ico":17,"./mstile-150x150.png":18,"./safari-pinned-tab.svg":19,"./site.webmanifest":20};function s(e){var t=a(e);return i(t)}function a(e){if(!i.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}s.keys=function(){return Object.keys(n)},s.resolve=a,e.exports=s,s.id=11},function(e,t,i){e.exports=i.p+"favicon/android-chrome-144x144.png"},function(e,t,i){e.exports=i.p+"favicon/apple-touch-icon.png"},function(e,t,i){e.exports=i.p+"favicon/browserconfig.xml"},function(e,t,i){e.exports=i.p+"favicon/favicon-16x16.png"},function(e,t,i){e.exports=i.p+"favicon/favicon-32x32.png"},function(e,t,i){e.exports=i.p+"favicon/favicon.ico"},function(e,t,i){e.exports=i.p+"favicon/mstile-150x150.png"},function(e,t,i){e.exports=i.p+"favicon/safari-pinned-tab.svg"},function(e,t,i){e.exports=i.p+"favicon/site.webmanifest"},function(e,t,i){(function(e){function t(i){if(e("#menu__button").checked=i,i)setTimeout((function(){t(!1)}),2e3)}e("#menu__button").onclick=function(){t(!0)},document.addEventListener("DOMContentLoaded",(function(e){t(!0)})),e("#menu__button").on("click",(function(){e(this).parent().children(".mobil-menu").slideToggle(300,"linear").css("display","flex")}))}).call(this,i(0))},function(e,t,i){(function(e){e.exports=function(){"use strict";var t,n;function s(){return t.apply(null,arguments)}function a(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function r(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function o(e){return void 0===e}function l(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function h(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function u(e,t){var i,n=[];for(i=0;i<e.length;++i)n.push(t(e[i],i));return n}function c(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function d(e,t){for(var i in t)c(t,i)&&(e[i]=t[i]);return c(t,"toString")&&(e.toString=t.toString),c(t,"valueOf")&&(e.valueOf=t.valueOf),e}function f(e,t,i,n){return Tt(e,t,i,n,!0).utc()}function p(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function m(e){if(null==e._isValid){var t=p(e),i=n.call(t.parsedDateParts,(function(e){return null!=e})),s=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&i);if(e._strict&&(s=s&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return s;e._isValid=s}return e._isValid}function g(e){var t=f(NaN);return null!=e?d(p(t),e):p(t).userInvalidated=!0,t}n=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),i=t.length>>>0,n=0;n<i;n++)if(n in t&&e.call(this,t[n],n,t))return!0;return!1};var v=s.momentProperties=[];function _(e,t){var i,n,s;if(o(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),o(t._i)||(e._i=t._i),o(t._f)||(e._f=t._f),o(t._l)||(e._l=t._l),o(t._strict)||(e._strict=t._strict),o(t._tzm)||(e._tzm=t._tzm),o(t._isUTC)||(e._isUTC=t._isUTC),o(t._offset)||(e._offset=t._offset),o(t._pf)||(e._pf=p(t)),o(t._locale)||(e._locale=t._locale),0<v.length)for(i=0;i<v.length;i++)o(s=t[n=v[i]])||(e[n]=s);return e}var y=!1;function b(e){_(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===y&&(y=!0,s.updateOffset(this),y=!1)}function w(e){return e instanceof b||null!=e&&null!=e._isAMomentObject}function k(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function D(e){var t=+e,i=0;return 0!==t&&isFinite(t)&&(i=k(t)),i}function x(e,t,i){var n,s=Math.min(e.length,t.length),a=Math.abs(e.length-t.length),r=0;for(n=0;n<s;n++)(i&&e[n]!==t[n]||!i&&D(e[n])!==D(t[n]))&&r++;return r+a}function C(e){!1===s.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function M(e,t){var i=!0;return d((function(){if(null!=s.deprecationHandler&&s.deprecationHandler(null,e),i){for(var n,a=[],r=0;r<arguments.length;r++){if(n="","object"==typeof arguments[r]){for(var o in n+="\n["+r+"] ",arguments[0])n+=o+": "+arguments[0][o]+", ";n=n.slice(0,-2)}else n=arguments[r];a.push(n)}C(e+"\nArguments: "+Array.prototype.slice.call(a).join("")+"\n"+(new Error).stack),i=!1}return t.apply(this,arguments)}),t)}var S,T={};function P(e,t){null!=s.deprecationHandler&&s.deprecationHandler(e,t),T[e]||(C(t),T[e]=!0)}function O(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function Y(e,t){var i,n=d({},e);for(i in t)c(t,i)&&(r(e[i])&&r(t[i])?(n[i]={},d(n[i],e[i]),d(n[i],t[i])):null!=t[i]?n[i]=t[i]:delete n[i]);for(i in e)c(e,i)&&!c(t,i)&&r(e[i])&&(n[i]=d({},n[i]));return n}function I(e){null!=e&&this.set(e)}s.suppressDeprecationWarnings=!1,s.deprecationHandler=null,S=Object.keys?Object.keys:function(e){var t,i=[];for(t in e)c(e,t)&&i.push(t);return i};var A={};function N(e,t){var i=e.toLowerCase();A[i]=A[i+"s"]=A[t]=e}function H(e){return"string"==typeof e?A[e]||A[e.toLowerCase()]:void 0}function E(e){var t,i,n={};for(i in e)c(e,i)&&(t=H(i))&&(n[t]=e[i]);return n}var W={};function L(e,t){W[e]=t}function z(e,t,i){var n=""+Math.abs(e),s=t-n.length;return(0<=e?i?"+":"":"-")+Math.pow(10,Math.max(0,s)).toString().substr(1)+n}var R=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,F=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,j={},V={};function U(e,t,i,n){var s=n;"string"==typeof n&&(s=function(){return this[n]()}),e&&(V[e]=s),t&&(V[t[0]]=function(){return z(s.apply(this,arguments),t[1],t[2])}),i&&(V[i]=function(){return this.localeData().ordinal(s.apply(this,arguments),e)})}function B(e,t){return e.isValid()?(t=q(t,e.localeData()),j[t]=j[t]||function(e){var t,i,n,s=e.match(R);for(t=0,i=s.length;t<i;t++)V[s[t]]?s[t]=V[s[t]]:s[t]=(n=s[t]).match(/\[[\s\S]/)?n.replace(/^\[|\]$/g,""):n.replace(/\\/g,"");return function(t){var n,a="";for(n=0;n<i;n++)a+=O(s[n])?s[n].call(t,e):s[n];return a}}(t),j[t](e)):e.localeData().invalidDate()}function q(e,t){var i=5;function n(e){return t.longDateFormat(e)||e}for(F.lastIndex=0;0<=i&&F.test(e);)e=e.replace(F,n),F.lastIndex=0,i-=1;return e}var G=/\d/,$=/\d\d/,K=/\d{3}/,Z=/\d{4}/,X=/[+-]?\d{6}/,J=/\d\d?/,Q=/\d\d\d\d?/,ee=/\d\d\d\d\d\d?/,te=/\d{1,3}/,ie=/\d{1,4}/,ne=/[+-]?\d{1,6}/,se=/\d+/,ae=/[+-]?\d+/,re=/Z|[+-]\d\d:?\d\d/gi,oe=/Z|[+-]\d\d(?::?\d\d)?/gi,le=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,he={};function ue(e,t,i){he[e]=O(t)?t:function(e,n){return e&&i?i:t}}function ce(e,t){return c(he,e)?he[e](t._strict,t._locale):new RegExp(de(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,i,n,s){return t||i||n||s}))))}function de(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}var fe={};function pe(e,t){var i,n=t;for("string"==typeof e&&(e=[e]),l(t)&&(n=function(e,i){i[t]=D(e)}),i=0;i<e.length;i++)fe[e[i]]=n}function me(e,t){pe(e,(function(e,i,n,s){n._w=n._w||{},t(e,n._w,n,s)}))}var ge=0,ve=1,_e=2,ye=3,be=4,we=5,ke=6,De=7,xe=8;function Ce(e){return Me(e)?366:365}function Me(e){return e%4==0&&e%100!=0||e%400==0}U("Y",0,0,(function(){var e=this.year();return e<=9999?""+e:"+"+e})),U(0,["YY",2],0,(function(){return this.year()%100})),U(0,["YYYY",4],0,"year"),U(0,["YYYYY",5],0,"year"),U(0,["YYYYYY",6,!0],0,"year"),N("year","y"),L("year",1),ue("Y",ae),ue("YY",J,$),ue("YYYY",ie,Z),ue("YYYYY",ne,X),ue("YYYYYY",ne,X),pe(["YYYYY","YYYYYY"],ge),pe("YYYY",(function(e,t){t[ge]=2===e.length?s.parseTwoDigitYear(e):D(e)})),pe("YY",(function(e,t){t[ge]=s.parseTwoDigitYear(e)})),pe("Y",(function(e,t){t[ge]=parseInt(e,10)})),s.parseTwoDigitYear=function(e){return D(e)+(68<D(e)?1900:2e3)};var Se,Te=Pe("FullYear",!0);function Pe(e,t){return function(i){return null!=i?(Ye(this,e,i),s.updateOffset(this,t),this):Oe(this,e)}}function Oe(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function Ye(e,t,i){e.isValid()&&!isNaN(i)&&("FullYear"===t&&Me(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](i,e.month(),Ie(i,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](i))}function Ie(e,t){if(isNaN(e)||isNaN(t))return NaN;var i=(t%12+12)%12;return e+=(t-i)/12,1===i?Me(e)?29:28:31-i%7%2}Se=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},U("M",["MM",2],"Mo",(function(){return this.month()+1})),U("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),U("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),N("month","M"),L("month",8),ue("M",J),ue("MM",J,$),ue("MMM",(function(e,t){return t.monthsShortRegex(e)})),ue("MMMM",(function(e,t){return t.monthsRegex(e)})),pe(["M","MM"],(function(e,t){t[ve]=D(e)-1})),pe(["MMM","MMMM"],(function(e,t,i,n){var s=i._locale.monthsParse(e,n,i._strict);null!=s?t[ve]=s:p(i).invalidMonth=e}));var Ae=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,Ne="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),He="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");function Ee(e,t){var i;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=D(t);else if(!l(t=e.localeData().monthsParse(t)))return e;return i=Math.min(e.date(),Ie(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,i),e}function We(e){return null!=e?(Ee(this,e),s.updateOffset(this,!0),this):Oe(this,"Month")}var Le=le,ze=le;function Re(){function e(e,t){return t.length-e.length}var t,i,n=[],s=[],a=[];for(t=0;t<12;t++)i=f([2e3,t]),n.push(this.monthsShort(i,"")),s.push(this.months(i,"")),a.push(this.months(i,"")),a.push(this.monthsShort(i,""));for(n.sort(e),s.sort(e),a.sort(e),t=0;t<12;t++)n[t]=de(n[t]),s[t]=de(s[t]);for(t=0;t<24;t++)a[t]=de(a[t]);this._monthsRegex=new RegExp("^("+a.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+n.join("|")+")","i")}function Fe(e){var t;if(e<100&&0<=e){var i=Array.prototype.slice.call(arguments);i[0]=e+400,t=new Date(Date.UTC.apply(null,i)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function je(e,t,i){var n=7+t-i;return-(7+Fe(e,0,n).getUTCDay()-t)%7+n-1}function Ve(e,t,i,n,s){var a,r,o=1+7*(t-1)+(7+i-n)%7+je(e,n,s);return r=o<=0?Ce(a=e-1)+o:o>Ce(e)?(a=e+1,o-Ce(e)):(a=e,o),{year:a,dayOfYear:r}}function Ue(e,t,i){var n,s,a=je(e.year(),t,i),r=Math.floor((e.dayOfYear()-a-1)/7)+1;return r<1?n=r+Be(s=e.year()-1,t,i):r>Be(e.year(),t,i)?(n=r-Be(e.year(),t,i),s=e.year()+1):(s=e.year(),n=r),{week:n,year:s}}function Be(e,t,i){var n=je(e,t,i),s=je(e+1,t,i);return(Ce(e)-n+s)/7}function qe(e,t){return e.slice(t,7).concat(e.slice(0,t))}U("w",["ww",2],"wo","week"),U("W",["WW",2],"Wo","isoWeek"),N("week","w"),N("isoWeek","W"),L("week",5),L("isoWeek",5),ue("w",J),ue("ww",J,$),ue("W",J),ue("WW",J,$),me(["w","ww","W","WW"],(function(e,t,i,n){t[n.substr(0,1)]=D(e)})),U("d",0,"do","day"),U("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),U("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),U("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),U("e",0,0,"weekday"),U("E",0,0,"isoWeekday"),N("day","d"),N("weekday","e"),N("isoWeekday","E"),L("day",11),L("weekday",11),L("isoWeekday",11),ue("d",J),ue("e",J),ue("E",J),ue("dd",(function(e,t){return t.weekdaysMinRegex(e)})),ue("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),ue("dddd",(function(e,t){return t.weekdaysRegex(e)})),me(["dd","ddd","dddd"],(function(e,t,i,n){var s=i._locale.weekdaysParse(e,n,i._strict);null!=s?t.d=s:p(i).invalidWeekday=e})),me(["d","e","E"],(function(e,t,i,n){t[n]=D(e)}));var Ge="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),$e="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Ke="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),Ze=le,Xe=le,Je=le;function Qe(){function e(e,t){return t.length-e.length}var t,i,n,s,a,r=[],o=[],l=[],h=[];for(t=0;t<7;t++)i=f([2e3,1]).day(t),n=this.weekdaysMin(i,""),s=this.weekdaysShort(i,""),a=this.weekdays(i,""),r.push(n),o.push(s),l.push(a),h.push(n),h.push(s),h.push(a);for(r.sort(e),o.sort(e),l.sort(e),h.sort(e),t=0;t<7;t++)o[t]=de(o[t]),l[t]=de(l[t]),h[t]=de(h[t]);this._weekdaysRegex=new RegExp("^("+h.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+r.join("|")+")","i")}function et(){return this.hours()%12||12}function tt(e,t){U(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function it(e,t){return t._meridiemParse}U("H",["HH",2],0,"hour"),U("h",["hh",2],0,et),U("k",["kk",2],0,(function(){return this.hours()||24})),U("hmm",0,0,(function(){return""+et.apply(this)+z(this.minutes(),2)})),U("hmmss",0,0,(function(){return""+et.apply(this)+z(this.minutes(),2)+z(this.seconds(),2)})),U("Hmm",0,0,(function(){return""+this.hours()+z(this.minutes(),2)})),U("Hmmss",0,0,(function(){return""+this.hours()+z(this.minutes(),2)+z(this.seconds(),2)})),tt("a",!0),tt("A",!1),N("hour","h"),L("hour",13),ue("a",it),ue("A",it),ue("H",J),ue("h",J),ue("k",J),ue("HH",J,$),ue("hh",J,$),ue("kk",J,$),ue("hmm",Q),ue("hmmss",ee),ue("Hmm",Q),ue("Hmmss",ee),pe(["H","HH"],ye),pe(["k","kk"],(function(e,t,i){var n=D(e);t[ye]=24===n?0:n})),pe(["a","A"],(function(e,t,i){i._isPm=i._locale.isPM(e),i._meridiem=e})),pe(["h","hh"],(function(e,t,i){t[ye]=D(e),p(i).bigHour=!0})),pe("hmm",(function(e,t,i){var n=e.length-2;t[ye]=D(e.substr(0,n)),t[be]=D(e.substr(n)),p(i).bigHour=!0})),pe("hmmss",(function(e,t,i){var n=e.length-4,s=e.length-2;t[ye]=D(e.substr(0,n)),t[be]=D(e.substr(n,2)),t[we]=D(e.substr(s)),p(i).bigHour=!0})),pe("Hmm",(function(e,t,i){var n=e.length-2;t[ye]=D(e.substr(0,n)),t[be]=D(e.substr(n))})),pe("Hmmss",(function(e,t,i){var n=e.length-4,s=e.length-2;t[ye]=D(e.substr(0,n)),t[be]=D(e.substr(n,2)),t[we]=D(e.substr(s))}));var nt,st=Pe("Hours",!0),at={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:Ne,monthsShort:He,week:{dow:0,doy:6},weekdays:Ge,weekdaysMin:Ke,weekdaysShort:$e,meridiemParse:/[ap]\.?m?\.?/i},rt={},ot={};function lt(e){return e?e.toLowerCase().replace("_","-"):e}function ht(t){var n=null;if(!rt[t]&&void 0!==e&&e&&e.exports)try{n=nt._abbr,i(4)("./"+t),ut(n)}catch(t){}return rt[t]}function ut(e,t){var i;return e&&((i=o(t)?dt(e):ct(e,t))?nt=i:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),nt._abbr}function ct(e,t){if(null===t)return delete rt[e],null;var i,n=at;if(t.abbr=e,null!=rt[e])P("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),n=rt[e]._config;else if(null!=t.parentLocale)if(null!=rt[t.parentLocale])n=rt[t.parentLocale]._config;else{if(null==(i=ht(t.parentLocale)))return ot[t.parentLocale]||(ot[t.parentLocale]=[]),ot[t.parentLocale].push({name:e,config:t}),null;n=i._config}return rt[e]=new I(Y(n,t)),ot[e]&&ot[e].forEach((function(e){ct(e.name,e.config)})),ut(e),rt[e]}function dt(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return nt;if(!a(e)){if(t=ht(e))return t;e=[e]}return function(e){for(var t,i,n,s,a=0;a<e.length;){for(t=(s=lt(e[a]).split("-")).length,i=(i=lt(e[a+1]))?i.split("-"):null;0<t;){if(n=ht(s.slice(0,t).join("-")))return n;if(i&&i.length>=t&&x(s,i,!0)>=t-1)break;t--}a++}return nt}(e)}function ft(e){var t,i=e._a;return i&&-2===p(e).overflow&&(t=i[ve]<0||11<i[ve]?ve:i[_e]<1||i[_e]>Ie(i[ge],i[ve])?_e:i[ye]<0||24<i[ye]||24===i[ye]&&(0!==i[be]||0!==i[we]||0!==i[ke])?ye:i[be]<0||59<i[be]?be:i[we]<0||59<i[we]?we:i[ke]<0||999<i[ke]?ke:-1,p(e)._overflowDayOfYear&&(t<ge||_e<t)&&(t=_e),p(e)._overflowWeeks&&-1===t&&(t=De),p(e)._overflowWeekday&&-1===t&&(t=xe),p(e).overflow=t),e}function pt(e,t,i){return null!=e?e:null!=t?t:i}function mt(e){var t,i,n,a,r,o=[];if(!e._d){var l,h;for(l=e,h=new Date(s.now()),n=l._useUTC?[h.getUTCFullYear(),h.getUTCMonth(),h.getUTCDate()]:[h.getFullYear(),h.getMonth(),h.getDate()],e._w&&null==e._a[_e]&&null==e._a[ve]&&function(e){var t,i,n,s,a,r,o,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)a=1,r=4,i=pt(t.GG,e._a[ge],Ue(Pt(),1,4).year),n=pt(t.W,1),((s=pt(t.E,1))<1||7<s)&&(l=!0);else{a=e._locale._week.dow,r=e._locale._week.doy;var h=Ue(Pt(),a,r);i=pt(t.gg,e._a[ge],h.year),n=pt(t.w,h.week),null!=t.d?((s=t.d)<0||6<s)&&(l=!0):null!=t.e?(s=t.e+a,(t.e<0||6<t.e)&&(l=!0)):s=a}n<1||n>Be(i,a,r)?p(e)._overflowWeeks=!0:null!=l?p(e)._overflowWeekday=!0:(o=Ve(i,n,s,a,r),e._a[ge]=o.year,e._dayOfYear=o.dayOfYear)}(e),null!=e._dayOfYear&&(r=pt(e._a[ge],n[ge]),(e._dayOfYear>Ce(r)||0===e._dayOfYear)&&(p(e)._overflowDayOfYear=!0),i=Fe(r,0,e._dayOfYear),e._a[ve]=i.getUTCMonth(),e._a[_e]=i.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=o[t]=n[t];for(;t<7;t++)e._a[t]=o[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[ye]&&0===e._a[be]&&0===e._a[we]&&0===e._a[ke]&&(e._nextDay=!0,e._a[ye]=0),e._d=(e._useUTC?Fe:function(e,t,i,n,s,a,r){var o;return e<100&&0<=e?(o=new Date(e+400,t,i,n,s,a,r),isFinite(o.getFullYear())&&o.setFullYear(e)):o=new Date(e,t,i,n,s,a,r),o}).apply(null,o),a=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[ye]=24),e._w&&void 0!==e._w.d&&e._w.d!==a&&(p(e).weekdayMismatch=!0)}}var gt=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,vt=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,_t=/Z|[+-]\d\d(?::?\d\d)?/,yt=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],bt=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],wt=/^\/?Date\((\-?\d+)/i;function kt(e){var t,i,n,s,a,r,o=e._i,l=gt.exec(o)||vt.exec(o);if(l){for(p(e).iso=!0,t=0,i=yt.length;t<i;t++)if(yt[t][1].exec(l[1])){s=yt[t][0],n=!1!==yt[t][2];break}if(null==s)return void(e._isValid=!1);if(l[3]){for(t=0,i=bt.length;t<i;t++)if(bt[t][1].exec(l[3])){a=(l[2]||" ")+bt[t][0];break}if(null==a)return void(e._isValid=!1)}if(!n&&null!=a)return void(e._isValid=!1);if(l[4]){if(!_t.exec(l[4]))return void(e._isValid=!1);r="Z"}e._f=s+(a||"")+(r||""),Mt(e)}else e._isValid=!1}var Dt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,xt={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Ct(e){var t,i,n,s=Dt.exec(e._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(s){var a=function(e,t,i,n,s,a){var r=[function(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}(e),He.indexOf(t),parseInt(i,10),parseInt(n,10),parseInt(s,10)];return a&&r.push(parseInt(a,10)),r}(s[4],s[3],s[2],s[5],s[6],s[7]);if(i=a,n=e,(t=s[1])&&$e.indexOf(t)!==new Date(i[0],i[1],i[2]).getDay()&&(p(n).weekdayMismatch=!0,!(n._isValid=!1)))return;e._a=a,e._tzm=function(e,t,i){if(e)return xt[e];if(t)return 0;var n=parseInt(i,10),s=n%100;return(n-s)/100*60+s}(s[8],s[9],s[10]),e._d=Fe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),p(e).rfc2822=!0}else e._isValid=!1}function Mt(e){if(e._f!==s.ISO_8601)if(e._f!==s.RFC_2822){e._a=[],p(e).empty=!0;var t,i,n,a,r,o,l,h,u=""+e._i,d=u.length,f=0;for(n=q(e._f,e._locale).match(R)||[],t=0;t<n.length;t++)a=n[t],(i=(u.match(ce(a,e))||[])[0])&&(0<(r=u.substr(0,u.indexOf(i))).length&&p(e).unusedInput.push(r),u=u.slice(u.indexOf(i)+i.length),f+=i.length),V[a]?(i?p(e).empty=!1:p(e).unusedTokens.push(a),o=a,h=e,null!=(l=i)&&c(fe,o)&&fe[o](l,h._a,h,o)):e._strict&&!i&&p(e).unusedTokens.push(a);p(e).charsLeftOver=d-f,0<u.length&&p(e).unusedInput.push(u),e._a[ye]<=12&&!0===p(e).bigHour&&0<e._a[ye]&&(p(e).bigHour=void 0),p(e).parsedDateParts=e._a.slice(0),p(e).meridiem=e._meridiem,e._a[ye]=function(e,t,i){var n;return null==i?t:null!=e.meridiemHour?e.meridiemHour(t,i):(null!=e.isPM&&((n=e.isPM(i))&&t<12&&(t+=12),n||12!==t||(t=0)),t)}(e._locale,e._a[ye],e._meridiem),mt(e),ft(e)}else Ct(e);else kt(e)}function St(e){var t,i,n,c,f=e._i,v=e._f;return e._locale=e._locale||dt(e._l),null===f||void 0===v&&""===f?g({nullInput:!0}):("string"==typeof f&&(e._i=f=e._locale.preparse(f)),w(f)?new b(ft(f)):(h(f)?e._d=f:a(v)?function(e){var t,i,n,s,a;if(0===e._f.length)return p(e).invalidFormat=!0,e._d=new Date(NaN);for(s=0;s<e._f.length;s++)a=0,t=_({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[s],Mt(t),m(t)&&(a+=p(t).charsLeftOver,a+=10*p(t).unusedTokens.length,p(t).score=a,(null==n||a<n)&&(n=a,i=t));d(e,i||t)}(e):v?Mt(e):o(i=(t=e)._i)?t._d=new Date(s.now()):h(i)?t._d=new Date(i.valueOf()):"string"==typeof i?(n=t,null===(c=wt.exec(n._i))?(kt(n),!1===n._isValid&&(delete n._isValid,Ct(n),!1===n._isValid&&(delete n._isValid,s.createFromInputFallback(n)))):n._d=new Date(+c[1])):a(i)?(t._a=u(i.slice(0),(function(e){return parseInt(e,10)})),mt(t)):r(i)?function(e){if(!e._d){var t=E(e._i);e._a=u([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),mt(e)}}(t):l(i)?t._d=new Date(i):s.createFromInputFallback(t),m(e)||(e._d=null),e))}function Tt(e,t,i,n,s){var o,l={};return!0!==i&&!1!==i||(n=i,i=void 0),(r(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||a(e)&&0===e.length)&&(e=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=s,l._l=i,l._i=e,l._f=t,l._strict=n,(o=new b(ft(St(l))))._nextDay&&(o.add(1,"d"),o._nextDay=void 0),o}function Pt(e,t,i,n){return Tt(e,t,i,n,!1)}s.createFromInputFallback=M("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),s.ISO_8601=function(){},s.RFC_2822=function(){};var Ot=M("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Pt.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:g()})),Yt=M("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Pt.apply(null,arguments);return this.isValid()&&e.isValid()?this<e?this:e:g()}));function It(e,t){var i,n;if(1===t.length&&a(t[0])&&(t=t[0]),!t.length)return Pt();for(i=t[0],n=1;n<t.length;++n)t[n].isValid()&&!t[n][e](i)||(i=t[n]);return i}var At=["year","quarter","month","week","day","hour","minute","second","millisecond"];function Nt(e){var t=E(e),i=t.year||0,n=t.quarter||0,s=t.month||0,a=t.week||t.isoWeek||0,r=t.day||0,o=t.hour||0,l=t.minute||0,h=t.second||0,u=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===Se.call(At,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var i=!1,n=0;n<At.length;++n)if(e[At[n]]){if(i)return!1;parseFloat(e[At[n]])!==D(e[At[n]])&&(i=!0)}return!0}(t),this._milliseconds=+u+1e3*h+6e4*l+1e3*o*60*60,this._days=+r+7*a,this._months=+s+3*n+12*i,this._data={},this._locale=dt(),this._bubble()}function Ht(e){return e instanceof Nt}function Et(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function Wt(e,t){U(e,0,0,(function(){var e=this.utcOffset(),i="+";return e<0&&(e=-e,i="-"),i+z(~~(e/60),2)+t+z(~~e%60,2)}))}Wt("Z",":"),Wt("ZZ",""),ue("Z",oe),ue("ZZ",oe),pe(["Z","ZZ"],(function(e,t,i){i._useUTC=!0,i._tzm=zt(oe,e)}));var Lt=/([\+\-]|\d\d)/gi;function zt(e,t){var i=(t||"").match(e);if(null===i)return null;var n=((i[i.length-1]||[])+"").match(Lt)||["-",0,0],s=60*n[1]+D(n[2]);return 0===s?0:"+"===n[0]?s:-s}function Rt(e,t){var i,n;return t._isUTC?(i=t.clone(),n=(w(e)||h(e)?e.valueOf():Pt(e).valueOf())-i.valueOf(),i._d.setTime(i._d.valueOf()+n),s.updateOffset(i,!1),i):Pt(e).local()}function Ft(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function jt(){return!!this.isValid()&&this._isUTC&&0===this._offset}s.updateOffset=function(){};var Vt=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,Ut=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Bt(e,t){var i,n,s,a=e,r=null;return Ht(e)?a={ms:e._milliseconds,d:e._days,M:e._months}:l(e)?(a={},t?a[t]=e:a.milliseconds=e):(r=Vt.exec(e))?(i="-"===r[1]?-1:1,a={y:0,d:D(r[_e])*i,h:D(r[ye])*i,m:D(r[be])*i,s:D(r[we])*i,ms:D(Et(1e3*r[ke]))*i}):(r=Ut.exec(e))?(i="-"===r[1]?-1:1,a={y:qt(r[2],i),M:qt(r[3],i),w:qt(r[4],i),d:qt(r[5],i),h:qt(r[6],i),m:qt(r[7],i),s:qt(r[8],i)}):null==a?a={}:"object"==typeof a&&("from"in a||"to"in a)&&(s=function(e,t){var i;return e.isValid()&&t.isValid()?(t=Rt(t,e),e.isBefore(t)?i=Gt(e,t):((i=Gt(t,e)).milliseconds=-i.milliseconds,i.months=-i.months),i):{milliseconds:0,months:0}}(Pt(a.from),Pt(a.to)),(a={}).ms=s.milliseconds,a.M=s.months),n=new Nt(a),Ht(e)&&c(e,"_locale")&&(n._locale=e._locale),n}function qt(e,t){var i=e&&parseFloat(e.replace(",","."));return(isNaN(i)?0:i)*t}function Gt(e,t){var i={};return i.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(i.months,"M").isAfter(t)&&--i.months,i.milliseconds=+t-+e.clone().add(i.months,"M"),i}function $t(e,t){return function(i,n){var s;return null===n||isNaN(+n)||(P(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),s=i,i=n,n=s),Kt(this,Bt(i="string"==typeof i?+i:i,n),e),this}}function Kt(e,t,i,n){var a=t._milliseconds,r=Et(t._days),o=Et(t._months);e.isValid()&&(n=null==n||n,o&&Ee(e,Oe(e,"Month")+o*i),r&&Ye(e,"Date",Oe(e,"Date")+r*i),a&&e._d.setTime(e._d.valueOf()+a*i),n&&s.updateOffset(e,r||o))}Bt.fn=Nt.prototype,Bt.invalid=function(){return Bt(NaN)};var Zt=$t(1,"add"),Xt=$t(-1,"subtract");function Jt(e,t){var i=12*(t.year()-e.year())+(t.month()-e.month()),n=e.clone().add(i,"months");return-(i+(t-n<0?(t-n)/(n-e.clone().add(i-1,"months")):(t-n)/(e.clone().add(i+1,"months")-n)))||0}function Qt(e){var t;return void 0===e?this._locale._abbr:(null!=(t=dt(e))&&(this._locale=t),this)}s.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",s.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var ei=M("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));function ti(){return this._locale}var ii=126227808e5;function ni(e,t){return(e%t+t)%t}function si(e,t,i){return e<100&&0<=e?new Date(e+400,t,i)-ii:new Date(e,t,i).valueOf()}function ai(e,t,i){return e<100&&0<=e?Date.UTC(e+400,t,i)-ii:Date.UTC(e,t,i)}function ri(e,t){U(0,[e,e.length],0,t)}function oi(e,t,i,n,s){var a;return null==e?Ue(this,n,s).year:((a=Be(e,n,s))<t&&(t=a),function(e,t,i,n,s){var a=Ve(e,t,i,n,s),r=Fe(a.year,0,a.dayOfYear);return this.year(r.getUTCFullYear()),this.month(r.getUTCMonth()),this.date(r.getUTCDate()),this}.call(this,e,t,i,n,s))}U(0,["gg",2],0,(function(){return this.weekYear()%100})),U(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),ri("gggg","weekYear"),ri("ggggg","weekYear"),ri("GGGG","isoWeekYear"),ri("GGGGG","isoWeekYear"),N("weekYear","gg"),N("isoWeekYear","GG"),L("weekYear",1),L("isoWeekYear",1),ue("G",ae),ue("g",ae),ue("GG",J,$),ue("gg",J,$),ue("GGGG",ie,Z),ue("gggg",ie,Z),ue("GGGGG",ne,X),ue("ggggg",ne,X),me(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,i,n){t[n.substr(0,2)]=D(e)})),me(["gg","GG"],(function(e,t,i,n){t[n]=s.parseTwoDigitYear(e)})),U("Q",0,"Qo","quarter"),N("quarter","Q"),L("quarter",7),ue("Q",G),pe("Q",(function(e,t){t[ve]=3*(D(e)-1)})),U("D",["DD",2],"Do","date"),N("date","D"),L("date",9),ue("D",J),ue("DD",J,$),ue("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),pe(["D","DD"],_e),pe("Do",(function(e,t){t[_e]=D(e.match(J)[0])}));var li=Pe("Date",!0);U("DDD",["DDDD",3],"DDDo","dayOfYear"),N("dayOfYear","DDD"),L("dayOfYear",4),ue("DDD",te),ue("DDDD",K),pe(["DDD","DDDD"],(function(e,t,i){i._dayOfYear=D(e)})),U("m",["mm",2],0,"minute"),N("minute","m"),L("minute",14),ue("m",J),ue("mm",J,$),pe(["m","mm"],be);var hi=Pe("Minutes",!1);U("s",["ss",2],0,"second"),N("second","s"),L("second",15),ue("s",J),ue("ss",J,$),pe(["s","ss"],we);var ui,ci=Pe("Seconds",!1);for(U("S",0,0,(function(){return~~(this.millisecond()/100)})),U(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),U(0,["SSS",3],0,"millisecond"),U(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),U(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),U(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),U(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),U(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),U(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),N("millisecond","ms"),L("millisecond",16),ue("S",te,G),ue("SS",te,$),ue("SSS",te,K),ui="SSSS";ui.length<=9;ui+="S")ue(ui,se);function di(e,t){t[ke]=D(1e3*("0."+e))}for(ui="S";ui.length<=9;ui+="S")pe(ui,di);var fi=Pe("Milliseconds",!1);U("z",0,0,"zoneAbbr"),U("zz",0,0,"zoneName");var pi=b.prototype;function mi(e){return e}pi.add=Zt,pi.calendar=function(e,t){var i=e||Pt(),n=Rt(i,this).startOf("day"),a=s.calendarFormat(this,n)||"sameElse",r=t&&(O(t[a])?t[a].call(this,i):t[a]);return this.format(r||this.localeData().calendar(a,this,Pt(i)))},pi.clone=function(){return new b(this)},pi.diff=function(e,t,i){var n,s,a;if(!this.isValid())return NaN;if(!(n=Rt(e,this)).isValid())return NaN;switch(s=6e4*(n.utcOffset()-this.utcOffset()),t=H(t)){case"year":a=Jt(this,n)/12;break;case"month":a=Jt(this,n);break;case"quarter":a=Jt(this,n)/3;break;case"second":a=(this-n)/1e3;break;case"minute":a=(this-n)/6e4;break;case"hour":a=(this-n)/36e5;break;case"day":a=(this-n-s)/864e5;break;case"week":a=(this-n-s)/6048e5;break;default:a=this-n}return i?a:k(a)},pi.endOf=function(e){var t;if(void 0===(e=H(e))||"millisecond"===e||!this.isValid())return this;var i=this._isUTC?ai:si;switch(e){case"year":t=i(this.year()+1,0,1)-1;break;case"quarter":t=i(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":t=i(this.year(),this.month()+1,1)-1;break;case"week":t=i(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":t=i(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":t=i(this.year(),this.month(),this.date()+1)-1;break;case"hour":t=this._d.valueOf(),t+=36e5-ni(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1;break;case"minute":t=this._d.valueOf(),t+=6e4-ni(t,6e4)-1;break;case"second":t=this._d.valueOf(),t+=1e3-ni(t,1e3)-1}return this._d.setTime(t),s.updateOffset(this,!0),this},pi.format=function(e){e||(e=this.isUtc()?s.defaultFormatUtc:s.defaultFormat);var t=B(this,e);return this.localeData().postformat(t)},pi.from=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||Pt(e).isValid())?Bt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},pi.fromNow=function(e){return this.from(Pt(),e)},pi.to=function(e,t){return this.isValid()&&(w(e)&&e.isValid()||Pt(e).isValid())?Bt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},pi.toNow=function(e){return this.to(Pt(),e)},pi.get=function(e){return O(this[e=H(e)])?this[e]():this},pi.invalidAt=function(){return p(this).overflow},pi.isAfter=function(e,t){var i=w(e)?e:Pt(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=H(t)||"millisecond")?this.valueOf()>i.valueOf():i.valueOf()<this.clone().startOf(t).valueOf())},pi.isBefore=function(e,t){var i=w(e)?e:Pt(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=H(t)||"millisecond")?this.valueOf()<i.valueOf():this.clone().endOf(t).valueOf()<i.valueOf())},pi.isBetween=function(e,t,i,n){var s=w(e)?e:Pt(e),a=w(t)?t:Pt(t);return!!(this.isValid()&&s.isValid()&&a.isValid())&&("("===(n=n||"()")[0]?this.isAfter(s,i):!this.isBefore(s,i))&&(")"===n[1]?this.isBefore(a,i):!this.isAfter(a,i))},pi.isSame=function(e,t){var i,n=w(e)?e:Pt(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=H(t)||"millisecond")?this.valueOf()===n.valueOf():(i=n.valueOf(),this.clone().startOf(t).valueOf()<=i&&i<=this.clone().endOf(t).valueOf()))},pi.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},pi.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},pi.isValid=function(){return m(this)},pi.lang=ei,pi.locale=Qt,pi.localeData=ti,pi.max=Yt,pi.min=Ot,pi.parsingFlags=function(){return d({},p(this))},pi.set=function(e,t){if("object"==typeof e)for(var i=function(e){var t=[];for(var i in e)t.push({unit:i,priority:W[i]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=E(e)),n=0;n<i.length;n++)this[i[n].unit](e[i[n].unit]);else if(O(this[e=H(e)]))return this[e](t);return this},pi.startOf=function(e){var t;if(void 0===(e=H(e))||"millisecond"===e||!this.isValid())return this;var i=this._isUTC?ai:si;switch(e){case"year":t=i(this.year(),0,1);break;case"quarter":t=i(this.year(),this.month()-this.month()%3,1);break;case"month":t=i(this.year(),this.month(),1);break;case"week":t=i(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":t=i(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":t=i(this.year(),this.month(),this.date());break;case"hour":t=this._d.valueOf(),t-=ni(t+(this._isUTC?0:6e4*this.utcOffset()),36e5);break;case"minute":t=this._d.valueOf(),t-=ni(t,6e4);break;case"second":t=this._d.valueOf(),t-=ni(t,1e3)}return this._d.setTime(t),s.updateOffset(this,!0),this},pi.subtract=Xt,pi.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},pi.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},pi.toDate=function(){return new Date(this.valueOf())},pi.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,i=t?this.clone().utc():this;return i.year()<0||9999<i.year()?B(i,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):O(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",B(i,"Z")):B(i,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},pi.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var i="["+e+'("]',n=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",s=t+'[")]';return this.format(i+n+"-MM-DD[T]HH:mm:ss.SSS"+s)},pi.toJSON=function(){return this.isValid()?this.toISOString():null},pi.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},pi.unix=function(){return Math.floor(this.valueOf()/1e3)},pi.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},pi.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},pi.year=Te,pi.isLeapYear=function(){return Me(this.year())},pi.weekYear=function(e){return oi.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},pi.isoWeekYear=function(e){return oi.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},pi.quarter=pi.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},pi.month=We,pi.daysInMonth=function(){return Ie(this.year(),this.month())},pi.week=pi.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},pi.isoWeek=pi.isoWeeks=function(e){var t=Ue(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},pi.weeksInYear=function(){var e=this.localeData()._week;return Be(this.year(),e.dow,e.doy)},pi.isoWeeksInYear=function(){return Be(this.year(),1,4)},pi.date=li,pi.day=pi.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t,i,n=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(t=e,i=this.localeData(),e="string"!=typeof t?t:isNaN(t)?"number"==typeof(t=i.weekdaysParse(t))?t:null:parseInt(t,10),this.add(e-n,"d")):n},pi.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},pi.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null==e)return this.day()||7;var t,i,n=(t=e,i=this.localeData(),"string"==typeof t?i.weekdaysParse(t)%7||7:isNaN(t)?null:t);return this.day(this.day()%7?n:n-7)},pi.dayOfYear=function(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")},pi.hour=pi.hours=st,pi.minute=pi.minutes=hi,pi.second=pi.seconds=ci,pi.millisecond=pi.milliseconds=fi,pi.utcOffset=function(e,t,i){var n,a=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null==e)return this._isUTC?a:Ft(this);if("string"==typeof e){if(null===(e=zt(oe,e)))return this}else Math.abs(e)<16&&!i&&(e*=60);return!this._isUTC&&t&&(n=Ft(this)),this._offset=e,this._isUTC=!0,null!=n&&this.add(n,"m"),a!==e&&(!t||this._changeInProgress?Kt(this,Bt(e-a,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,s.updateOffset(this,!0),this._changeInProgress=null)),this},pi.utc=function(e){return this.utcOffset(0,e)},pi.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Ft(this),"m")),this},pi.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=zt(re,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},pi.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?Pt(e).utcOffset():0,(this.utcOffset()-e)%60==0)},pi.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},pi.isLocal=function(){return!!this.isValid()&&!this._isUTC},pi.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},pi.isUtc=jt,pi.isUTC=jt,pi.zoneAbbr=function(){return this._isUTC?"UTC":""},pi.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},pi.dates=M("dates accessor is deprecated. Use date instead.",li),pi.months=M("months accessor is deprecated. Use month instead",We),pi.years=M("years accessor is deprecated. Use year instead",Te),pi.zone=M("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()})),pi.isDSTShifted=M("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!o(this._isDSTShifted))return this._isDSTShifted;var e={};if(_(e,this),(e=St(e))._a){var t=e._isUTC?f(e._a):Pt(e._a);this._isDSTShifted=this.isValid()&&0<x(e._a,t.toArray())}else this._isDSTShifted=!1;return this._isDSTShifted}));var gi=I.prototype;function vi(e,t,i,n){var s=dt(),a=f().set(n,t);return s[i](a,e)}function _i(e,t,i){if(l(e)&&(t=e,e=void 0),e=e||"",null!=t)return vi(e,t,i,"month");var n,s=[];for(n=0;n<12;n++)s[n]=vi(e,n,i,"month");return s}function yi(e,t,i,n){"boolean"==typeof e?l(t)&&(i=t,t=void 0):(t=e,e=!1,l(i=t)&&(i=t,t=void 0)),t=t||"";var s,a=dt(),r=e?a._week.dow:0;if(null!=i)return vi(t,(i+r)%7,n,"day");var o=[];for(s=0;s<7;s++)o[s]=vi(t,(s+r)%7,n,"day");return o}gi.calendar=function(e,t,i){var n=this._calendar[e]||this._calendar.sameElse;return O(n)?n.call(t,i):n},gi.longDateFormat=function(e){var t=this._longDateFormat[e],i=this._longDateFormat[e.toUpperCase()];return t||!i?t:(this._longDateFormat[e]=i.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},gi.invalidDate=function(){return this._invalidDate},gi.ordinal=function(e){return this._ordinal.replace("%d",e)},gi.preparse=mi,gi.postformat=mi,gi.relativeTime=function(e,t,i,n){var s=this._relativeTime[i];return O(s)?s(e,t,i,n):s.replace(/%d/i,e)},gi.pastFuture=function(e,t){var i=this._relativeTime[0<e?"future":"past"];return O(i)?i(t):i.replace(/%s/i,t)},gi.set=function(e){var t,i;for(i in e)O(t=e[i])?this[i]=t:this["_"+i]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},gi.months=function(e,t){return e?a(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Ae).test(t)?"format":"standalone"][e.month()]:a(this._months)?this._months:this._months.standalone},gi.monthsShort=function(e,t){return e?a(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Ae.test(t)?"format":"standalone"][e.month()]:a(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},gi.monthsParse=function(e,t,i){var n,s,a;if(this._monthsParseExact)return function(e,t,i){var n,s,a,r=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],n=0;n<12;++n)a=f([2e3,n]),this._shortMonthsParse[n]=this.monthsShort(a,"").toLocaleLowerCase(),this._longMonthsParse[n]=this.months(a,"").toLocaleLowerCase();return i?"MMM"===t?-1!==(s=Se.call(this._shortMonthsParse,r))?s:null:-1!==(s=Se.call(this._longMonthsParse,r))?s:null:"MMM"===t?-1!==(s=Se.call(this._shortMonthsParse,r))?s:-1!==(s=Se.call(this._longMonthsParse,r))?s:null:-1!==(s=Se.call(this._longMonthsParse,r))?s:-1!==(s=Se.call(this._shortMonthsParse,r))?s:null}.call(this,e,t,i);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;n<12;n++){if(s=f([2e3,n]),i&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp("^"+this.months(s,"").replace(".","")+"$","i"),this._shortMonthsParse[n]=new RegExp("^"+this.monthsShort(s,"").replace(".","")+"$","i")),i||this._monthsParse[n]||(a="^"+this.months(s,"")+"|^"+this.monthsShort(s,""),this._monthsParse[n]=new RegExp(a.replace(".",""),"i")),i&&"MMMM"===t&&this._longMonthsParse[n].test(e))return n;if(i&&"MMM"===t&&this._shortMonthsParse[n].test(e))return n;if(!i&&this._monthsParse[n].test(e))return n}},gi.monthsRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||Re.call(this),e?this._monthsStrictRegex:this._monthsRegex):(c(this,"_monthsRegex")||(this._monthsRegex=ze),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},gi.monthsShortRegex=function(e){return this._monthsParseExact?(c(this,"_monthsRegex")||Re.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(c(this,"_monthsShortRegex")||(this._monthsShortRegex=Le),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},gi.week=function(e){return Ue(e,this._week.dow,this._week.doy).week},gi.firstDayOfYear=function(){return this._week.doy},gi.firstDayOfWeek=function(){return this._week.dow},gi.weekdays=function(e,t){var i=a(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?qe(i,this._week.dow):e?i[e.day()]:i},gi.weekdaysMin=function(e){return!0===e?qe(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},gi.weekdaysShort=function(e){return!0===e?qe(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},gi.weekdaysParse=function(e,t,i){var n,s,a;if(this._weekdaysParseExact)return function(e,t,i){var n,s,a,r=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],n=0;n<7;++n)a=f([2e3,1]).day(n),this._minWeekdaysParse[n]=this.weekdaysMin(a,"").toLocaleLowerCase(),this._shortWeekdaysParse[n]=this.weekdaysShort(a,"").toLocaleLowerCase(),this._weekdaysParse[n]=this.weekdays(a,"").toLocaleLowerCase();return i?"dddd"===t?-1!==(s=Se.call(this._weekdaysParse,r))?s:null:"ddd"===t?-1!==(s=Se.call(this._shortWeekdaysParse,r))?s:null:-1!==(s=Se.call(this._minWeekdaysParse,r))?s:null:"dddd"===t?-1!==(s=Se.call(this._weekdaysParse,r))?s:-1!==(s=Se.call(this._shortWeekdaysParse,r))?s:-1!==(s=Se.call(this._minWeekdaysParse,r))?s:null:"ddd"===t?-1!==(s=Se.call(this._shortWeekdaysParse,r))?s:-1!==(s=Se.call(this._weekdaysParse,r))?s:-1!==(s=Se.call(this._minWeekdaysParse,r))?s:null:-1!==(s=Se.call(this._minWeekdaysParse,r))?s:-1!==(s=Se.call(this._weekdaysParse,r))?s:-1!==(s=Se.call(this._shortWeekdaysParse,r))?s:null}.call(this,e,t,i);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),n=0;n<7;n++){if(s=f([2e3,1]).day(n),i&&!this._fullWeekdaysParse[n]&&(this._fullWeekdaysParse[n]=new RegExp("^"+this.weekdays(s,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[n]=new RegExp("^"+this.weekdaysShort(s,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[n]=new RegExp("^"+this.weekdaysMin(s,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[n]||(a="^"+this.weekdays(s,"")+"|^"+this.weekdaysShort(s,"")+"|^"+this.weekdaysMin(s,""),this._weekdaysParse[n]=new RegExp(a.replace(".",""),"i")),i&&"dddd"===t&&this._fullWeekdaysParse[n].test(e))return n;if(i&&"ddd"===t&&this._shortWeekdaysParse[n].test(e))return n;if(i&&"dd"===t&&this._minWeekdaysParse[n].test(e))return n;if(!i&&this._weekdaysParse[n].test(e))return n}},gi.weekdaysRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||Qe.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(c(this,"_weekdaysRegex")||(this._weekdaysRegex=Ze),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},gi.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||Qe.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(c(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Xe),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},gi.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(c(this,"_weekdaysRegex")||Qe.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(c(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Je),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},gi.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},gi.meridiem=function(e,t,i){return 11<e?i?"pm":"PM":i?"am":"AM"},ut("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===D(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),s.lang=M("moment.lang is deprecated. Use moment.locale instead.",ut),s.langData=M("moment.langData is deprecated. Use moment.localeData instead.",dt);var bi=Math.abs;function wi(e,t,i,n){var s=Bt(t,i);return e._milliseconds+=n*s._milliseconds,e._days+=n*s._days,e._months+=n*s._months,e._bubble()}function ki(e){return e<0?Math.floor(e):Math.ceil(e)}function Di(e){return 4800*e/146097}function xi(e){return 146097*e/4800}function Ci(e){return function(){return this.as(e)}}var Mi=Ci("ms"),Si=Ci("s"),Ti=Ci("m"),Pi=Ci("h"),Oi=Ci("d"),Yi=Ci("w"),Ii=Ci("M"),Ai=Ci("Q"),Ni=Ci("y");function Hi(e){return function(){return this.isValid()?this._data[e]:NaN}}var Ei=Hi("milliseconds"),Wi=Hi("seconds"),Li=Hi("minutes"),zi=Hi("hours"),Ri=Hi("days"),Fi=Hi("months"),ji=Hi("years"),Vi=Math.round,Ui={ss:44,s:45,m:45,h:22,d:26,M:11},Bi=Math.abs;function qi(e){return(0<e)-(e<0)||+e}function Gi(){if(!this.isValid())return this.localeData().invalidDate();var e,t,i=Bi(this._milliseconds)/1e3,n=Bi(this._days),s=Bi(this._months);t=k((e=k(i/60))/60),i%=60,e%=60;var a=k(s/12),r=s%=12,o=n,l=t,h=e,u=i?i.toFixed(3).replace(/\.?0+$/,""):"",c=this.asSeconds();if(!c)return"P0D";var d=c<0?"-":"",f=qi(this._months)!==qi(c)?"-":"",p=qi(this._days)!==qi(c)?"-":"",m=qi(this._milliseconds)!==qi(c)?"-":"";return d+"P"+(a?f+a+"Y":"")+(r?f+r+"M":"")+(o?p+o+"D":"")+(l||h||u?"T":"")+(l?m+l+"H":"")+(h?m+h+"M":"")+(u?m+u+"S":"")}var $i=Nt.prototype;return $i.isValid=function(){return this._isValid},$i.abs=function(){var e=this._data;return this._milliseconds=bi(this._milliseconds),this._days=bi(this._days),this._months=bi(this._months),e.milliseconds=bi(e.milliseconds),e.seconds=bi(e.seconds),e.minutes=bi(e.minutes),e.hours=bi(e.hours),e.months=bi(e.months),e.years=bi(e.years),this},$i.add=function(e,t){return wi(this,e,t,1)},$i.subtract=function(e,t){return wi(this,e,t,-1)},$i.as=function(e){if(!this.isValid())return NaN;var t,i,n=this._milliseconds;if("month"===(e=H(e))||"quarter"===e||"year"===e)switch(t=this._days+n/864e5,i=this._months+Di(t),e){case"month":return i;case"quarter":return i/3;case"year":return i/12}else switch(t=this._days+Math.round(xi(this._months)),e){case"week":return t/7+n/6048e5;case"day":return t+n/864e5;case"hour":return 24*t+n/36e5;case"minute":return 1440*t+n/6e4;case"second":return 86400*t+n/1e3;case"millisecond":return Math.floor(864e5*t)+n;default:throw new Error("Unknown unit "+e)}},$i.asMilliseconds=Mi,$i.asSeconds=Si,$i.asMinutes=Ti,$i.asHours=Pi,$i.asDays=Oi,$i.asWeeks=Yi,$i.asMonths=Ii,$i.asQuarters=Ai,$i.asYears=Ni,$i.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*D(this._months/12):NaN},$i._bubble=function(){var e,t,i,n,s,a=this._milliseconds,r=this._days,o=this._months,l=this._data;return 0<=a&&0<=r&&0<=o||a<=0&&r<=0&&o<=0||(a+=864e5*ki(xi(o)+r),o=r=0),l.milliseconds=a%1e3,e=k(a/1e3),l.seconds=e%60,t=k(e/60),l.minutes=t%60,i=k(t/60),l.hours=i%24,o+=s=k(Di(r+=k(i/24))),r-=ki(xi(s)),n=k(o/12),o%=12,l.days=r,l.months=o,l.years=n,this},$i.clone=function(){return Bt(this)},$i.get=function(e){return e=H(e),this.isValid()?this[e+"s"]():NaN},$i.milliseconds=Ei,$i.seconds=Wi,$i.minutes=Li,$i.hours=zi,$i.days=Ri,$i.weeks=function(){return k(this.days()/7)},$i.months=Fi,$i.years=ji,$i.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t,i,n,s,a,r,o,l,h,u,c=this.localeData(),d=(t=!e,i=c,n=Bt(this).abs(),s=Vi(n.as("s")),a=Vi(n.as("m")),r=Vi(n.as("h")),o=Vi(n.as("d")),l=Vi(n.as("M")),h=Vi(n.as("y")),(u=s<=Ui.ss&&["s",s]||s<Ui.s&&["ss",s]||a<=1&&["m"]||a<Ui.m&&["mm",a]||r<=1&&["h"]||r<Ui.h&&["hh",r]||o<=1&&["d"]||o<Ui.d&&["dd",o]||l<=1&&["M"]||l<Ui.M&&["MM",l]||h<=1&&["y"]||["yy",h])[2]=t,u[3]=0<+this,u[4]=i,function(e,t,i,n,s){return s.relativeTime(t||1,!!i,e,n)}.apply(null,u));return e&&(d=c.pastFuture(+this,d)),c.postformat(d)},$i.toISOString=Gi,$i.toString=Gi,$i.toJSON=Gi,$i.locale=Qt,$i.localeData=ti,$i.toIsoString=M("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Gi),$i.lang=ei,U("X",0,0,"unix"),U("x",0,0,"valueOf"),ue("x",ae),ue("X",/[+-]?\d+(\.\d{1,3})?/),pe("X",(function(e,t,i){i._d=new Date(1e3*parseFloat(e,10))})),pe("x",(function(e,t,i){i._d=new Date(D(e))})),s.version="2.24.0",t=Pt,s.fn=pi,s.min=function(){return It("isBefore",[].slice.call(arguments,0))},s.max=function(){return It("isAfter",[].slice.call(arguments,0))},s.now=function(){return Date.now?Date.now():+new Date},s.utc=f,s.unix=function(e){return Pt(1e3*e)},s.months=function(e,t){return _i(e,t,"months")},s.isDate=h,s.locale=ut,s.invalid=g,s.duration=Bt,s.isMoment=w,s.weekdays=function(e,t,i){return yi(e,t,i,"weekdays")},s.parseZone=function(){return Pt.apply(null,arguments).parseZone()},s.localeData=dt,s.isDuration=Ht,s.monthsShort=function(e,t){return _i(e,t,"monthsShort")},s.weekdaysMin=function(e,t,i){return yi(e,t,i,"weekdaysMin")},s.defineLocale=ct,s.updateLocale=function(e,t){if(null!=t){var i,n,s=at;null!=(n=ht(e))&&(s=n._config),(i=new I(t=Y(s,t))).parentLocale=rt[e],rt[e]=i,ut(e)}else null!=rt[e]&&(null!=rt[e].parentLocale?rt[e]=rt[e].parentLocale:null!=rt[e]&&delete rt[e]);return rt[e]},s.locales=function(){return S(rt)},s.weekdaysShort=function(e,t,i){return yi(e,t,i,"weekdaysShort")},s.normalizeUnits=H,s.relativeTimeRounding=function(e){return void 0===e?Vi:"function"==typeof e&&(Vi=e,!0)},s.relativeTimeThreshold=function(e,t){return void 0!==Ui[e]&&(void 0===t?Ui[e]:(Ui[e]=t,"s"===e&&(Ui.ss=t-1),!0))},s.calendarFormat=function(e,t){var i=e.diff(t,"days",!0);return i<-6?"sameElse":i<-1?"lastWeek":i<0?"lastDay":i<1?"sameDay":i<2?"nextDay":i<7?"nextWeek":"sameElse"},s.prototype=pi,s.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},s}()}).call(this,i(3)(e))},function(e,t){e.exports=null},function(e,t,i){var n,s;
/**
* @version: 3.0.5
* @author: Dan Grossman http://www.dangrossman.info/
* @copyright: Copyright (c) 2012-2019 Dan Grossman. All rights reserved.
* @license: Licensed under the MIT license. See http://www.opensource.org/licenses/mit-license.php
* @website: http://www.daterangepicker.com/
*/n=[i(1),i(0)],void 0===(s=function(e,t){return t.fn||(t.fn={}),"function"!=typeof e&&e.default&&(e=e.default),function(e,t){var i=function(i,n,s){if(this.parentEl="body",this.element=t(i),this.startDate=e().startOf("day"),this.endDate=e().endOf("day"),this.minDate=!1,this.maxDate=!1,this.maxSpan=!1,this.autoApply=!1,this.singleDatePicker=!1,this.showDropdowns=!1,this.minYear=e().subtract(100,"year").format("YYYY"),this.maxYear=e().add(100,"year").format("YYYY"),this.showWeekNumbers=!1,this.showISOWeekNumbers=!1,this.showCustomRangeLabel=!0,this.timePicker=!1,this.timePicker24Hour=!1,this.timePickerIncrement=1,this.timePickerSeconds=!1,this.linkedCalendars=!0,this.autoUpdateInput=!0,this.alwaysShowCalendars=!1,this.ranges={},this.opens="right",this.element.hasClass("pull-right")&&(this.opens="left"),this.drops="down",this.element.hasClass("dropup")&&(this.drops="up"),this.buttonClasses="btn btn-sm",this.applyButtonClasses="btn-primary",this.cancelButtonClasses="btn-default",this.locale={direction:"ltr",format:e.localeData().longDateFormat("L"),separator:" - ",applyLabel:"Apply",cancelLabel:"Cancel",weekLabel:"W",customRangeLabel:"Custom Range",daysOfWeek:e.weekdaysMin(),monthNames:e.monthsShort(),firstDay:e.localeData().firstDayOfWeek()},this.callback=function(){},this.isShowing=!1,this.leftCalendar={},this.rightCalendar={},"object"==typeof n&&null!==n||(n={}),"string"==typeof(n=t.extend(this.element.data(),n)).template||n.template instanceof t||(n.template='<div class="daterangepicker"><div class="ranges"></div><div class="drp-calendar left"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-calendar right"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-buttons"><span class="drp-selected"></span><button class="cancelBtn" type="button"></button><button class="applyBtn" disabled="disabled" type="button"></button> </div></div>'),this.parentEl=n.parentEl&&t(n.parentEl).length?t(n.parentEl):t(this.parentEl),this.container=t(n.template).appendTo(this.parentEl),"object"==typeof n.locale&&("string"==typeof n.locale.direction&&(this.locale.direction=n.locale.direction),"string"==typeof n.locale.format&&(this.locale.format=n.locale.format),"string"==typeof n.locale.separator&&(this.locale.separator=n.locale.separator),"object"==typeof n.locale.daysOfWeek&&(this.locale.daysOfWeek=n.locale.daysOfWeek.slice()),"object"==typeof n.locale.monthNames&&(this.locale.monthNames=n.locale.monthNames.slice()),"number"==typeof n.locale.firstDay&&(this.locale.firstDay=n.locale.firstDay),"string"==typeof n.locale.applyLabel&&(this.locale.applyLabel=n.locale.applyLabel),"string"==typeof n.locale.cancelLabel&&(this.locale.cancelLabel=n.locale.cancelLabel),"string"==typeof n.locale.weekLabel&&(this.locale.weekLabel=n.locale.weekLabel),"string"==typeof n.locale.customRangeLabel)){(d=document.createElement("textarea")).innerHTML=n.locale.customRangeLabel;var a=d.value;this.locale.customRangeLabel=a}if(this.container.addClass(this.locale.direction),"string"==typeof n.startDate&&(this.startDate=e(n.startDate,this.locale.format)),"string"==typeof n.endDate&&(this.endDate=e(n.endDate,this.locale.format)),"string"==typeof n.minDate&&(this.minDate=e(n.minDate,this.locale.format)),"string"==typeof n.maxDate&&(this.maxDate=e(n.maxDate,this.locale.format)),"object"==typeof n.startDate&&(this.startDate=e(n.startDate)),"object"==typeof n.endDate&&(this.endDate=e(n.endDate)),"object"==typeof n.minDate&&(this.minDate=e(n.minDate)),"object"==typeof n.maxDate&&(this.maxDate=e(n.maxDate)),this.minDate&&this.startDate.isBefore(this.minDate)&&(this.startDate=this.minDate.clone()),this.maxDate&&this.endDate.isAfter(this.maxDate)&&(this.endDate=this.maxDate.clone()),"string"==typeof n.applyButtonClasses&&(this.applyButtonClasses=n.applyButtonClasses),"string"==typeof n.applyClass&&(this.applyButtonClasses=n.applyClass),"string"==typeof n.cancelButtonClasses&&(this.cancelButtonClasses=n.cancelButtonClasses),"string"==typeof n.cancelClass&&(this.cancelButtonClasses=n.cancelClass),"object"==typeof n.maxSpan&&(this.maxSpan=n.maxSpan),"object"==typeof n.dateLimit&&(this.maxSpan=n.dateLimit),"string"==typeof n.opens&&(this.opens=n.opens),"string"==typeof n.drops&&(this.drops=n.drops),"boolean"==typeof n.showWeekNumbers&&(this.showWeekNumbers=n.showWeekNumbers),"boolean"==typeof n.showISOWeekNumbers&&(this.showISOWeekNumbers=n.showISOWeekNumbers),"string"==typeof n.buttonClasses&&(this.buttonClasses=n.buttonClasses),"object"==typeof n.buttonClasses&&(this.buttonClasses=n.buttonClasses.join(" ")),"boolean"==typeof n.showDropdowns&&(this.showDropdowns=n.showDropdowns),"number"==typeof n.minYear&&(this.minYear=n.minYear),"number"==typeof n.maxYear&&(this.maxYear=n.maxYear),"boolean"==typeof n.showCustomRangeLabel&&(this.showCustomRangeLabel=n.showCustomRangeLabel),"boolean"==typeof n.singleDatePicker&&(this.singleDatePicker=n.singleDatePicker,this.singleDatePicker&&(this.endDate=this.startDate.clone())),"boolean"==typeof n.timePicker&&(this.timePicker=n.timePicker),"boolean"==typeof n.timePickerSeconds&&(this.timePickerSeconds=n.timePickerSeconds),"number"==typeof n.timePickerIncrement&&(this.timePickerIncrement=n.timePickerIncrement),"boolean"==typeof n.timePicker24Hour&&(this.timePicker24Hour=n.timePicker24Hour),"boolean"==typeof n.autoApply&&(this.autoApply=n.autoApply),"boolean"==typeof n.autoUpdateInput&&(this.autoUpdateInput=n.autoUpdateInput),"boolean"==typeof n.linkedCalendars&&(this.linkedCalendars=n.linkedCalendars),"function"==typeof n.isInvalidDate&&(this.isInvalidDate=n.isInvalidDate),"function"==typeof n.isCustomDate&&(this.isCustomDate=n.isCustomDate),"boolean"==typeof n.alwaysShowCalendars&&(this.alwaysShowCalendars=n.alwaysShowCalendars),0!=this.locale.firstDay)for(var r=this.locale.firstDay;r>0;)this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift()),r--;var o,l,h;if(void 0===n.startDate&&void 0===n.endDate&&t(this.element).is(":text")){var u=t(this.element).val(),c=u.split(this.locale.separator);o=l=null,2==c.length?(o=e(c[0],this.locale.format),l=e(c[1],this.locale.format)):this.singleDatePicker&&""!==u&&(o=e(u,this.locale.format),l=e(u,this.locale.format)),null!==o&&null!==l&&(this.setStartDate(o),this.setEndDate(l))}if("object"==typeof n.ranges){for(h in n.ranges){o="string"==typeof n.ranges[h][0]?e(n.ranges[h][0],this.locale.format):e(n.ranges[h][0]),l="string"==typeof n.ranges[h][1]?e(n.ranges[h][1],this.locale.format):e(n.ranges[h][1]),this.minDate&&o.isBefore(this.minDate)&&(o=this.minDate.clone());var d,f=this.maxDate;if(this.maxSpan&&f&&o.clone().add(this.maxSpan).isAfter(f)&&(f=o.clone().add(this.maxSpan)),f&&l.isAfter(f)&&(l=f.clone()),!(this.minDate&&l.isBefore(this.minDate,this.timepicker?"minute":"day")||f&&o.isAfter(f,this.timepicker?"minute":"day")))(d=document.createElement("textarea")).innerHTML=h,a=d.value,this.ranges[a]=[o,l]}var p="<ul>";for(h in this.ranges)p+='<li data-range-key="'+h+'">'+h+"</li>";this.showCustomRangeLabel&&(p+='<li data-range-key="'+this.locale.customRangeLabel+'">'+this.locale.customRangeLabel+"</li>"),p+="</ul>",this.container.find(".ranges").prepend(p)}"function"==typeof s&&(this.callback=s),this.timePicker||(this.startDate=this.startDate.startOf("day"),this.endDate=this.endDate.endOf("day"),this.container.find(".calendar-time").hide()),this.timePicker&&this.autoApply&&(this.autoApply=!1),this.autoApply&&this.container.addClass("auto-apply"),"object"==typeof n.ranges&&this.container.addClass("show-ranges"),this.singleDatePicker&&(this.container.addClass("single"),this.container.find(".drp-calendar.left").addClass("single"),this.container.find(".drp-calendar.left").show(),this.container.find(".drp-calendar.right").hide(),this.timePicker||this.container.addClass("auto-apply")),(void 0===n.ranges&&!this.singleDatePicker||this.alwaysShowCalendars)&&this.container.addClass("show-calendar"),this.container.addClass("opens"+this.opens),this.container.find(".applyBtn, .cancelBtn").addClass(this.buttonClasses),this.applyButtonClasses.length&&this.container.find(".applyBtn").addClass(this.applyButtonClasses),this.cancelButtonClasses.length&&this.container.find(".cancelBtn").addClass(this.cancelButtonClasses),this.container.find(".applyBtn").html(this.locale.applyLabel),this.container.find(".cancelBtn").html(this.locale.cancelLabel),this.container.find(".drp-calendar").on("click.daterangepicker",".prev",t.proxy(this.clickPrev,this)).on("click.daterangepicker",".next",t.proxy(this.clickNext,this)).on("mousedown.daterangepicker","td.available",t.proxy(this.clickDate,this)).on("mouseenter.daterangepicker","td.available",t.proxy(this.hoverDate,this)).on("change.daterangepicker","select.yearselect",t.proxy(this.monthOrYearChanged,this)).on("change.daterangepicker","select.monthselect",t.proxy(this.monthOrYearChanged,this)).on("change.daterangepicker","select.hourselect,select.minuteselect,select.secondselect,select.ampmselect",t.proxy(this.timeChanged,this)),this.container.find(".ranges").on("click.daterangepicker","li",t.proxy(this.clickRange,this)),this.container.find(".drp-buttons").on("click.daterangepicker","button.applyBtn",t.proxy(this.clickApply,this)).on("click.daterangepicker","button.cancelBtn",t.proxy(this.clickCancel,this)),this.element.is("input")||this.element.is("button")?this.element.on({"click.daterangepicker":t.proxy(this.show,this),"focus.daterangepicker":t.proxy(this.show,this),"keyup.daterangepicker":t.proxy(this.elementChanged,this),"keydown.daterangepicker":t.proxy(this.keydown,this)}):(this.element.on("click.daterangepicker",t.proxy(this.toggle,this)),this.element.on("keydown.daterangepicker",t.proxy(this.toggle,this))),this.updateElement()};return i.prototype={constructor:i,setStartDate:function(t){"string"==typeof t&&(this.startDate=e(t,this.locale.format)),"object"==typeof t&&(this.startDate=e(t)),this.timePicker||(this.startDate=this.startDate.startOf("day")),this.timePicker&&this.timePickerIncrement&&this.startDate.minute(Math.round(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement),this.minDate&&this.startDate.isBefore(this.minDate)&&(this.startDate=this.minDate.clone(),this.timePicker&&this.timePickerIncrement&&this.startDate.minute(Math.round(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement)),this.maxDate&&this.startDate.isAfter(this.maxDate)&&(this.startDate=this.maxDate.clone(),this.timePicker&&this.timePickerIncrement&&this.startDate.minute(Math.floor(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement)),this.isShowing||this.updateElement(),this.updateMonthsInView()},setEndDate:function(t){"string"==typeof t&&(this.endDate=e(t,this.locale.format)),"object"==typeof t&&(this.endDate=e(t)),this.timePicker||(this.endDate=this.endDate.endOf("day")),this.timePicker&&this.timePickerIncrement&&this.endDate.minute(Math.round(this.endDate.minute()/this.timePickerIncrement)*this.timePickerIncrement),this.endDate.isBefore(this.startDate)&&(this.endDate=this.startDate.clone()),this.maxDate&&this.endDate.isAfter(this.maxDate)&&(this.endDate=this.maxDate.clone()),this.maxSpan&&this.startDate.clone().add(this.maxSpan).isBefore(this.endDate)&&(this.endDate=this.startDate.clone().add(this.maxSpan)),this.previousRightTime=this.endDate.clone(),this.container.find(".drp-selected").html(this.startDate.format(this.locale.format)+this.locale.separator+this.endDate.format(this.locale.format)),this.isShowing||this.updateElement(),this.updateMonthsInView()},isInvalidDate:function(){return!1},isCustomDate:function(){return!1},updateView:function(){this.timePicker&&(this.renderTimePicker("left"),this.renderTimePicker("right"),this.endDate?this.container.find(".right .calendar-time select").prop("disabled",!1).removeClass("disabled"):this.container.find(".right .calendar-time select").prop("disabled",!0).addClass("disabled")),this.endDate&&this.container.find(".drp-selected").html(this.startDate.format(this.locale.format)+this.locale.separator+this.endDate.format(this.locale.format)),this.updateMonthsInView(),this.updateCalendars(),this.updateFormInputs()},updateMonthsInView:function(){if(this.endDate){if(!this.singleDatePicker&&this.leftCalendar.month&&this.rightCalendar.month&&(this.startDate.format("YYYY-MM")==this.leftCalendar.month.format("YYYY-MM")||this.startDate.format("YYYY-MM")==this.rightCalendar.month.format("YYYY-MM"))&&(this.endDate.format("YYYY-MM")==this.leftCalendar.month.format("YYYY-MM")||this.endDate.format("YYYY-MM")==this.rightCalendar.month.format("YYYY-MM")))return;this.leftCalendar.month=this.startDate.clone().date(2),this.linkedCalendars||this.endDate.month()==this.startDate.month()&&this.endDate.year()==this.startDate.year()?this.rightCalendar.month=this.startDate.clone().date(2).add(1,"month"):this.rightCalendar.month=this.endDate.clone().date(2)}else this.leftCalendar.month.format("YYYY-MM")!=this.startDate.format("YYYY-MM")&&this.rightCalendar.month.format("YYYY-MM")!=this.startDate.format("YYYY-MM")&&(this.leftCalendar.month=this.startDate.clone().date(2),this.rightCalendar.month=this.startDate.clone().date(2).add(1,"month"));this.maxDate&&this.linkedCalendars&&!this.singleDatePicker&&this.rightCalendar.month>this.maxDate&&(this.rightCalendar.month=this.maxDate.clone().date(2),this.leftCalendar.month=this.maxDate.clone().date(2).subtract(1,"month"))},updateCalendars:function(){var e,t,i,n;this.timePicker&&(this.endDate?(e=parseInt(this.container.find(".left .hourselect").val(),10),t=parseInt(this.container.find(".left .minuteselect").val(),10),isNaN(t)&&(t=parseInt(this.container.find(".left .minuteselect option:last").val(),10)),i=this.timePickerSeconds?parseInt(this.container.find(".left .secondselect").val(),10):0,this.timePicker24Hour||("PM"===(n=this.container.find(".left .ampmselect").val())&&e<12&&(e+=12),"AM"===n&&12===e&&(e=0))):(e=parseInt(this.container.find(".right .hourselect").val(),10),t=parseInt(this.container.find(".right .minuteselect").val(),10),isNaN(t)&&(t=parseInt(this.container.find(".right .minuteselect option:last").val(),10)),i=this.timePickerSeconds?parseInt(this.container.find(".right .secondselect").val(),10):0,this.timePicker24Hour||("PM"===(n=this.container.find(".right .ampmselect").val())&&e<12&&(e+=12),"AM"===n&&12===e&&(e=0))),this.leftCalendar.month.hour(e).minute(t).second(i),this.rightCalendar.month.hour(e).minute(t).second(i));this.renderCalendar("left"),this.renderCalendar("right"),this.container.find(".ranges li").removeClass("active"),null!=this.endDate&&this.calculateChosenLabel()},renderCalendar:function(i){var n,s=(n="left"==i?this.leftCalendar:this.rightCalendar).month.month(),a=n.month.year(),r=n.month.hour(),o=n.month.minute(),l=n.month.second(),h=e([a,s]).daysInMonth(),u=e([a,s,1]),c=e([a,s,h]),d=e(u).subtract(1,"month").month(),f=e(u).subtract(1,"month").year(),p=e([f,d]).daysInMonth(),m=u.day();(n=[]).firstDay=u,n.lastDay=c;for(var g=0;g<6;g++)n[g]=[];var v=p-m+this.locale.firstDay+1;v>p&&(v-=7),m==this.locale.firstDay&&(v=p-6);for(var _=e([f,d,v,12,o,l]),y=(g=0,0),b=0;g<42;g++,y++,_=e(_).add(24,"hour"))g>0&&y%7==0&&(y=0,b++),n[b][y]=_.clone().hour(r).minute(o).second(l),_.hour(12),this.minDate&&n[b][y].format("YYYY-MM-DD")==this.minDate.format("YYYY-MM-DD")&&n[b][y].isBefore(this.minDate)&&"left"==i&&(n[b][y]=this.minDate.clone()),this.maxDate&&n[b][y].format("YYYY-MM-DD")==this.maxDate.format("YYYY-MM-DD")&&n[b][y].isAfter(this.maxDate)&&"right"==i&&(n[b][y]=this.maxDate.clone());"left"==i?this.leftCalendar.calendar=n:this.rightCalendar.calendar=n;var w="left"==i?this.minDate:this.startDate,k=this.maxDate,D=("left"==i?this.startDate:this.endDate,this.locale.direction,'<table class="table-condensed">');D+="<thead>",D+="<tr>",(this.showWeekNumbers||this.showISOWeekNumbers)&&(D+="<th></th>"),w&&!w.isBefore(n.firstDay)||this.linkedCalendars&&"left"!=i?D+="<th></th>":D+='<th class="prev available"><span></span></th>';var x=this.locale.monthNames[n[1][1].month()]+n[1][1].format(" YYYY");if(this.showDropdowns){for(var C=n[1][1].month(),M=n[1][1].year(),S=k&&k.year()||this.maxYear,T=w&&w.year()||this.minYear,P=M==T,O=M==S,Y='<select class="monthselect">',I=0;I<12;I++)(!P||w&&I>=w.month())&&(!O||k&&I<=k.month())?Y+="<option value='"+I+"'"+(I===C?" selected='selected'":"")+">"+this.locale.monthNames[I]+"</option>":Y+="<option value='"+I+"'"+(I===C?" selected='selected'":"")+" disabled='disabled'>"+this.locale.monthNames[I]+"</option>";Y+="</select>";for(var A='<select class="yearselect">',N=T;N<=S;N++)A+='<option value="'+N+'"'+(N===M?' selected="selected"':"")+">"+N+"</option>";x=Y+(A+="</select>")}if(D+='<th colspan="5" class="month">'+x+"</th>",k&&!k.isAfter(n.lastDay)||this.linkedCalendars&&"right"!=i&&!this.singleDatePicker?D+="<th></th>":D+='<th class="next available"><span></span></th>',D+="</tr>",D+="<tr>",(this.showWeekNumbers||this.showISOWeekNumbers)&&(D+='<th class="week">'+this.locale.weekLabel+"</th>"),t.each(this.locale.daysOfWeek,(function(e,t){D+="<th>"+t+"</th>"})),D+="</tr>",D+="</thead>",D+="<tbody>",null==this.endDate&&this.maxSpan){var H=this.startDate.clone().add(this.maxSpan).endOf("day");k&&!H.isBefore(k)||(k=H)}for(b=0;b<6;b++){for(D+="<tr>",this.showWeekNumbers?D+='<td class="week">'+n[b][0].week()+"</td>":this.showISOWeekNumbers&&(D+='<td class="week">'+n[b][0].isoWeek()+"</td>"),y=0;y<7;y++){var E=[];n[b][y].isSame(new Date,"day")&&E.push("today"),n[b][y].isoWeekday()>5&&E.push("weekend"),n[b][y].month()!=n[1][1].month()&&E.push("off","ends"),this.minDate&&n[b][y].isBefore(this.minDate,"day")&&E.push("off","disabled"),k&&n[b][y].isAfter(k,"day")&&E.push("off","disabled"),this.isInvalidDate(n[b][y])&&E.push("off","disabled"),n[b][y].format("YYYY-MM-DD")==this.startDate.format("YYYY-MM-DD")&&E.push("active","start-date"),null!=this.endDate&&n[b][y].format("YYYY-MM-DD")==this.endDate.format("YYYY-MM-DD")&&E.push("active","end-date"),null!=this.endDate&&n[b][y]>this.startDate&&n[b][y]<this.endDate&&E.push("in-range");var W=this.isCustomDate(n[b][y]);!1!==W&&("string"==typeof W?E.push(W):Array.prototype.push.apply(E,W));var L="",z=!1;for(g=0;g<E.length;g++)L+=E[g]+" ","disabled"==E[g]&&(z=!0);z||(L+="available"),D+='<td class="'+L.replace(/^\s+|\s+$/g,"")+'" data-title="r'+b+"c"+y+'">'+n[b][y].date()+"</td>"}D+="</tr>"}D+="</tbody>",D+="</table>",this.container.find(".drp-calendar."+i+" .calendar-table").html(D)},renderTimePicker:function(e){if("right"!=e||this.endDate){var t,i,n,s=this.maxDate;if(!this.maxSpan||this.maxDate&&!this.startDate.clone().add(this.maxSpan).isBefore(this.maxDate)||(s=this.startDate.clone().add(this.maxSpan)),"left"==e)i=this.startDate.clone(),n=this.minDate;else if("right"==e){i=this.endDate.clone(),n=this.startDate;var a=this.container.find(".drp-calendar.right .calendar-time");if(""!=a.html()&&(i.hour(isNaN(i.hour())?a.find(".hourselect option:selected").val():i.hour()),i.minute(isNaN(i.minute())?a.find(".minuteselect option:selected").val():i.minute()),i.second(isNaN(i.second())?a.find(".secondselect option:selected").val():i.second()),!this.timePicker24Hour)){var r=a.find(".ampmselect option:selected").val();"PM"===r&&i.hour()<12&&i.hour(i.hour()+12),"AM"===r&&12===i.hour()&&i.hour(0)}i.isBefore(this.startDate)&&(i=this.startDate.clone()),s&&i.isAfter(s)&&(i=s.clone())}t='<select class="hourselect">';for(var o=this.timePicker24Hour?0:1,l=this.timePicker24Hour?23:12,h=o;h<=l;h++){var u=h;this.timePicker24Hour||(u=i.hour()>=12?12==h?12:h+12:12==h?0:h);var c=i.clone().hour(u),d=!1;n&&c.minute(59).isBefore(n)&&(d=!0),s&&c.minute(0).isAfter(s)&&(d=!0),u!=i.hour()||d?t+=d?'<option value="'+h+'" disabled="disabled" class="disabled">'+h+"</option>":'<option value="'+h+'">'+h+"</option>":t+='<option value="'+h+'" selected="selected">'+h+"</option>"}for(t+="</select> ",t+=': <select class="minuteselect">',h=0;h<60;h+=this.timePickerIncrement){var f=h<10?"0"+h:h;c=i.clone().minute(h),d=!1,n&&c.second(59).isBefore(n)&&(d=!0),s&&c.second(0).isAfter(s)&&(d=!0),i.minute()!=h||d?t+=d?'<option value="'+h+'" disabled="disabled" class="disabled">'+f+"</option>":'<option value="'+h+'">'+f+"</option>":t+='<option value="'+h+'" selected="selected">'+f+"</option>"}if(t+="</select> ",this.timePickerSeconds){for(t+=': <select class="secondselect">',h=0;h<60;h++)f=h<10?"0"+h:h,c=i.clone().second(h),d=!1,n&&c.isBefore(n)&&(d=!0),s&&c.isAfter(s)&&(d=!0),i.second()!=h||d?t+=d?'<option value="'+h+'" disabled="disabled" class="disabled">'+f+"</option>":'<option value="'+h+'">'+f+"</option>":t+='<option value="'+h+'" selected="selected">'+f+"</option>";t+="</select> "}if(!this.timePicker24Hour){t+='<select class="ampmselect">';var p="",m="";n&&i.clone().hour(12).minute(0).second(0).isBefore(n)&&(p=' disabled="disabled" class="disabled"'),s&&i.clone().hour(0).minute(0).second(0).isAfter(s)&&(m=' disabled="disabled" class="disabled"'),i.hour()>=12?t+='<option value="AM"'+p+'>AM</option><option value="PM" selected="selected"'+m+">PM</option>":t+='<option value="AM" selected="selected"'+p+'>AM</option><option value="PM"'+m+">PM</option>",t+="</select>"}this.container.find(".drp-calendar."+e+" .calendar-time").html(t)}},updateFormInputs:function(){this.singleDatePicker||this.endDate&&(this.startDate.isBefore(this.endDate)||this.startDate.isSame(this.endDate))?this.container.find("button.applyBtn").prop("disabled",!1):this.container.find("button.applyBtn").prop("disabled",!0)},move:function(){var e,i={top:0,left:0},n=t(window).width();this.parentEl.is("body")||(i={top:this.parentEl.offset().top-this.parentEl.scrollTop(),left:this.parentEl.offset().left-this.parentEl.scrollLeft()},n=this.parentEl[0].clientWidth+this.parentEl.offset().left),e="up"==this.drops?this.element.offset().top-this.container.outerHeight()-i.top:this.element.offset().top+this.element.outerHeight()-i.top,this.container.css({top:0,left:0,right:"auto"});var s=this.container.outerWidth();if(this.container["up"==this.drops?"addClass":"removeClass"]("drop-up"),"left"==this.opens){var a=n-this.element.offset().left-this.element.outerWidth();s+a>t(window).width()?this.container.css({top:e,right:"auto",left:9}):this.container.css({top:e,right:a,left:"auto"})}else if("center"==this.opens)(r=this.element.offset().left-i.left+this.element.outerWidth()/2-s/2)<0?this.container.css({top:e,right:"auto",left:9}):r+s>t(window).width()?this.container.css({top:e,left:"auto",right:0}):this.container.css({top:e,left:r,right:"auto"});else{var r;(r=this.element.offset().left-i.left)+s>t(window).width()?this.container.css({top:e,left:"auto",right:0}):this.container.css({top:e,left:r,right:"auto"})}},show:function(e){this.isShowing||(this._outsideClickProxy=t.proxy((function(e){this.outsideClick(e)}),this),t(document).on("mousedown.daterangepicker",this._outsideClickProxy).on("touchend.daterangepicker",this._outsideClickProxy).on("click.daterangepicker","[data-toggle=dropdown]",this._outsideClickProxy).on("focusin.daterangepicker",this._outsideClickProxy),t(window).on("resize.daterangepicker",t.proxy((function(e){this.move(e)}),this)),this.oldStartDate=this.startDate.clone(),this.oldEndDate=this.endDate.clone(),this.previousRightTime=this.endDate.clone(),this.updateView(),this.container.show(),this.move(),this.element.trigger("show.daterangepicker",this),this.isShowing=!0)},hide:function(e){this.isShowing&&(this.endDate||(this.startDate=this.oldStartDate.clone(),this.endDate=this.oldEndDate.clone()),this.startDate.isSame(this.oldStartDate)&&this.endDate.isSame(this.oldEndDate)||this.callback(this.startDate.clone(),this.endDate.clone(),this.chosenLabel),this.updateElement(),t(document).off(".daterangepicker"),t(window).off(".daterangepicker"),this.container.hide(),this.element.trigger("hide.daterangepicker",this),this.isShowing=!1)},toggle:function(e){this.isShowing?this.hide():this.show()},outsideClick:function(e){var i=t(e.target);"focusin"==e.type||i.closest(this.element).length||i.closest(this.container).length||i.closest(".calendar-table").length||(this.hide(),this.element.trigger("outsideClick.daterangepicker",this))},showCalendars:function(){this.container.addClass("show-calendar"),this.move(),this.element.trigger("showCalendar.daterangepicker",this)},hideCalendars:function(){this.container.removeClass("show-calendar"),this.element.trigger("hideCalendar.daterangepicker",this)},clickRange:function(e){var t=e.target.getAttribute("data-range-key");if(this.chosenLabel=t,t==this.locale.customRangeLabel)this.showCalendars();else{var i=this.ranges[t];this.startDate=i[0],this.endDate=i[1],this.timePicker||(this.startDate.startOf("day"),this.endDate.endOf("day")),this.alwaysShowCalendars||this.hideCalendars(),this.clickApply()}},clickPrev:function(e){t(e.target).parents(".drp-calendar").hasClass("left")?(this.leftCalendar.month.subtract(1,"month"),this.linkedCalendars&&this.rightCalendar.month.subtract(1,"month")):this.rightCalendar.month.subtract(1,"month"),this.updateCalendars()},clickNext:function(e){t(e.target).parents(".drp-calendar").hasClass("left")?this.leftCalendar.month.add(1,"month"):(this.rightCalendar.month.add(1,"month"),this.linkedCalendars&&this.leftCalendar.month.add(1,"month")),this.updateCalendars()},hoverDate:function(e){if(t(e.target).hasClass("available")){var i=t(e.target).attr("data-title"),n=i.substr(1,1),s=i.substr(3,1),a=t(e.target).parents(".drp-calendar").hasClass("left")?this.leftCalendar.calendar[n][s]:this.rightCalendar.calendar[n][s],r=this.leftCalendar,o=this.rightCalendar,l=this.startDate;this.endDate||this.container.find(".drp-calendar tbody td").each((function(e,i){if(!t(i).hasClass("week")){var n=t(i).attr("data-title"),s=n.substr(1,1),h=n.substr(3,1),u=t(i).parents(".drp-calendar").hasClass("left")?r.calendar[s][h]:o.calendar[s][h];u.isAfter(l)&&u.isBefore(a)||u.isSame(a,"day")?t(i).addClass("in-range"):t(i).removeClass("in-range")}}))}},clickDate:function(e){if(t(e.target).hasClass("available")){var i=t(e.target).attr("data-title"),n=i.substr(1,1),s=i.substr(3,1),a=t(e.target).parents(".drp-calendar").hasClass("left")?this.leftCalendar.calendar[n][s]:this.rightCalendar.calendar[n][s];if(this.endDate||a.isBefore(this.startDate,"day")){if(this.timePicker){var r=parseInt(this.container.find(".left .hourselect").val(),10);this.timePicker24Hour||("PM"===(h=this.container.find(".left .ampmselect").val())&&r<12&&(r+=12),"AM"===h&&12===r&&(r=0));var o=parseInt(this.container.find(".left .minuteselect").val(),10);isNaN(o)&&(o=parseInt(this.container.find(".left .minuteselect option:last").val(),10));var l=this.timePickerSeconds?parseInt(this.container.find(".left .secondselect").val(),10):0;a=a.clone().hour(r).minute(o).second(l)}this.endDate=null,this.setStartDate(a.clone())}else if(!this.endDate&&a.isBefore(this.startDate))this.setEndDate(this.startDate.clone());else{var h;if(this.timePicker)r=parseInt(this.container.find(".right .hourselect").val(),10),this.timePicker24Hour||("PM"===(h=this.container.find(".right .ampmselect").val())&&r<12&&(r+=12),"AM"===h&&12===r&&(r=0)),o=parseInt(this.container.find(".right .minuteselect").val(),10),isNaN(o)&&(o=parseInt(this.container.find(".right .minuteselect option:last").val(),10)),l=this.timePickerSeconds?parseInt(this.container.find(".right .secondselect").val(),10):0,a=a.clone().hour(r).minute(o).second(l);this.setEndDate(a.clone()),this.autoApply&&(this.calculateChosenLabel(),this.clickApply())}this.singleDatePicker&&(this.setEndDate(this.startDate),this.timePicker||this.clickApply()),this.updateView(),e.stopPropagation()}},calculateChosenLabel:function(){var e=!0,t=0;for(var i in this.ranges){if(this.timePicker){var n=this.timePickerSeconds?"YYYY-MM-DD HH:mm:ss":"YYYY-MM-DD HH:mm";if(this.startDate.format(n)==this.ranges[i][0].format(n)&&this.endDate.format(n)==this.ranges[i][1].format(n)){e=!1,this.chosenLabel=this.container.find(".ranges li:eq("+t+")").addClass("active").attr("data-range-key");break}}else if(this.startDate.format("YYYY-MM-DD")==this.ranges[i][0].format("YYYY-MM-DD")&&this.endDate.format("YYYY-MM-DD")==this.ranges[i][1].format("YYYY-MM-DD")){e=!1,this.chosenLabel=this.container.find(".ranges li:eq("+t+")").addClass("active").attr("data-range-key");break}t++}e&&(this.showCustomRangeLabel?this.chosenLabel=this.container.find(".ranges li:last").addClass("active").attr("data-range-key"):this.chosenLabel=null,this.showCalendars())},clickApply:function(e){this.hide(),this.element.trigger("apply.daterangepicker",this)},clickCancel:function(e){this.startDate=this.oldStartDate,this.endDate=this.oldEndDate,this.hide(),this.element.trigger("cancel.daterangepicker",this)},monthOrYearChanged:function(e){var i=t(e.target).closest(".drp-calendar").hasClass("left"),n=i?"left":"right",s=this.container.find(".drp-calendar."+n),a=parseInt(s.find(".monthselect").val(),10),r=s.find(".yearselect").val();i||(r<this.startDate.year()||r==this.startDate.year()&&a<this.startDate.month())&&(a=this.startDate.month(),r=this.startDate.year()),this.minDate&&(r<this.minDate.year()||r==this.minDate.year()&&a<this.minDate.month())&&(a=this.minDate.month(),r=this.minDate.year()),this.maxDate&&(r>this.maxDate.year()||r==this.maxDate.year()&&a>this.maxDate.month())&&(a=this.maxDate.month(),r=this.maxDate.year()),i?(this.leftCalendar.month.month(a).year(r),this.linkedCalendars&&(this.rightCalendar.month=this.leftCalendar.month.clone().add(1,"month"))):(this.rightCalendar.month.month(a).year(r),this.linkedCalendars&&(this.leftCalendar.month=this.rightCalendar.month.clone().subtract(1,"month"))),this.updateCalendars()},timeChanged:function(e){var i=t(e.target).closest(".drp-calendar"),n=i.hasClass("left"),s=parseInt(i.find(".hourselect").val(),10),a=parseInt(i.find(".minuteselect").val(),10);isNaN(a)&&(a=parseInt(i.find(".minuteselect option:last").val(),10));var r=this.timePickerSeconds?parseInt(i.find(".secondselect").val(),10):0;if(!this.timePicker24Hour){var o=i.find(".ampmselect").val();"PM"===o&&s<12&&(s+=12),"AM"===o&&12===s&&(s=0)}if(n){var l=this.startDate.clone();l.hour(s),l.minute(a),l.second(r),this.setStartDate(l),this.singleDatePicker?this.endDate=this.startDate.clone():this.endDate&&this.endDate.format("YYYY-MM-DD")==l.format("YYYY-MM-DD")&&this.endDate.isBefore(l)&&this.setEndDate(l.clone())}else if(this.endDate){var h=this.endDate.clone();h.hour(s),h.minute(a),h.second(r),this.setEndDate(h)}this.updateCalendars(),this.updateFormInputs(),this.renderTimePicker("left"),this.renderTimePicker("right")},elementChanged:function(){if(this.element.is("input")&&this.element.val().length){var t=this.element.val().split(this.locale.separator),i=null,n=null;2===t.length&&(i=e(t[0],this.locale.format),n=e(t[1],this.locale.format)),(this.singleDatePicker||null===i||null===n)&&(n=i=e(this.element.val(),this.locale.format)),i.isValid()&&n.isValid()&&(this.setStartDate(i),this.setEndDate(n),this.updateView())}},keydown:function(e){9!==e.keyCode&&13!==e.keyCode||this.hide(),27===e.keyCode&&(e.preventDefault(),e.stopPropagation(),this.hide())},updateElement:function(){if(this.element.is("input")&&this.autoUpdateInput){var e=this.startDate.format(this.locale.format);this.singleDatePicker||(e+=this.locale.separator+this.endDate.format(this.locale.format)),e!==this.element.val()&&this.element.val(e).trigger("change")}},remove:function(){this.container.remove(),this.element.off(".daterangepicker"),this.element.removeData()}},t.fn.daterangepicker=function(e,n){var s=t.extend(!0,{},t.fn.daterangepicker.defaultOptions,e);return this.each((function(){var e=t(this);e.data("daterangepicker")&&e.data("daterangepicker").remove(),e.data("daterangepicker",new i(e,s,n))})),this},i}(e,t)}.apply(t,n))||(e.exports=s)},function(e,t,i){var n,s,a;s=[i(0),i(1)],void 0===(a="function"==typeof(n=function(e,t){"use strict";e.dateRangePickerLanguages={default:{selected:"Selected:",day:"Day",days:"Days",apply:"Close","week-1":"mo","week-2":"tu","week-3":"we","week-4":"th","week-5":"fr","week-6":"sa","week-7":"su","week-number":"W","month-name":["january","february","march","april","may","june","july","august","september","october","november","december"],shortcuts:"Shortcuts","custom-values":"Custom Values",past:"Past",following:"Following",previous:"Previous","prev-week":"Week","prev-month":"Month","prev-year":"Year",next:"Next","next-week":"Week","next-month":"Month","next-year":"Year","less-than":"Date range should not be more than %d days","more-than":"Date range should not be less than %d days","default-more":"Please select a date range longer than %d days","default-single":"Please select a date","default-less":"Please select a date range less than %d days","default-range":"Please select a date range between %d and %d days","default-default":"Please select a date range",time:"Time",hour:"Hour",minute:"Minute"},id:{selected:"Terpilih:",day:"Hari",days:"Hari",apply:"Tutup","week-1":"sen","week-2":"sel","week-3":"rab","week-4":"kam","week-5":"jum","week-6":"sab","week-7":"min","week-number":"W","month-name":["januari","februari","maret","april","mei","juni","juli","agustus","september","oktober","november","desember"],shortcuts:"Pintas","custom-values":"Nilai yang ditentukan",past:"Yang Lalu",following:"Mengikuti",previous:"Sebelumnya","prev-week":"Minggu","prev-month":"Bulan","prev-year":"Tahun",next:"Selanjutnya","next-week":"Minggu","next-month":"Bulan","next-year":"Tahun","less-than":"Tanggal harus lebih dari %d hari","more-than":"Tanggal harus kurang dari %d hari","default-more":"Jarak tanggal harus lebih lama dari %d hari","default-single":"Silakan pilih tanggal","default-less":"Jarak rentang tanggal tidak boleh lebih lama dari %d hari","default-range":"Rentang tanggal harus antara %d dan %d hari","default-default":"Silakan pilih rentang tanggal",time:"Waktu",hour:"Jam",minute:"Menit"},az:{selected:"SeÃ§ildi:",day:" gÃ¼n",days:" gÃ¼n",apply:"tÉtbiq","week-1":"1","week-2":"2","week-3":"3","week-4":"4","week-5":"5","week-6":"6","week-7":"7","month-name":["yanvar","fevral","mart","aprel","may","iyun","iyul","avqust","sentyabr","oktyabr","noyabr","dekabr"],shortcuts:"QÄ±sayollar",past:"KeÃ§miÅ",following:"NÃ¶vbÉti",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"ÃncÉki hÉftÉ","prev-month":"ÃncÉki ay","prev-year":"ÃncÉki il",next:"&nbsp;&nbsp;&nbsp;","next-week":"NÃ¶vbÉti hÉftÉ","next-month":"NÃ¶vbÉti ay","next-year":"NÃ¶vbÉti il","less-than":"Tarix aralÄ±ÄÄ± %d gÃ¼ndÉn Ã§ox olmamalÄ±dÄ±r","more-than":"Tarix aralÄ±ÄÄ± %d gÃ¼ndÉn az olmamalÄ±dÄ±r","default-more":"%d gÃ¼ndÉn Ã§ox bir tarix seÃ§in","default-single":"Tarix seÃ§in","default-less":"%d gÃ¼ndÉn az bir tarix seÃ§in","default-range":"%d vÉ %d gÃ¼n aralÄ±ÄÄ±nda tarixlÉr seÃ§in","default-default":"Tarix aralÄ±ÄÄ± seÃ§in"},bg:{selected:"ÐÐ·Ð±ÑÐ°Ð½Ð¾:",day:"ÐÐµÐ½",days:"ÐÐ½Ð¸",apply:"ÐÐ°ÑÐ²Ð¾ÑÐ¸","week-1":"Ð¿Ð½","week-2":"Ð²Ñ","week-3":"ÑÑ","week-4":"ÑÑ","week-5":"Ð¿Ñ","week-6":"ÑÐ±","week-7":"Ð½Ð´","week-number":"Ð¡","month-name":["ÑÐ½ÑÐ°ÑÐ¸","ÑÐµÐ²ÑÑÐ°ÑÐ¸","Ð¼Ð°ÑÑ","Ð°Ð¿ÑÐ¸Ð»","Ð¼Ð°Ð¹","ÑÐ½Ð¸","ÑÐ»Ð¸","Ð°Ð²Ð³ÑÑÑ","ÑÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸","Ð¾ÐºÑÐ¾Ð¼Ð²ÑÐ¸","Ð½Ð¾ÐµÐ¼Ð²ÑÐ¸","Ð´ÐµÐºÐµÐ¼Ð²ÑÐ¸"],shortcuts:"ÐÑÐµÐºÐ¸ Ð¿ÑÑÐ¸ÑÐ°","custom-values":"ÐÐµÑÑÐ¾Ð½Ð°Ð»Ð¸Ð·Ð¸ÑÐ°Ð½Ð¸ ÑÑÐ¾Ð¹Ð½Ð¾ÑÑÐ¸",past:"ÐÐ¸Ð½Ð°Ð»",following:"Ð¡Ð»ÐµÐ´Ð²Ð°Ñ",previous:"ÐÑÐµÐ´Ð¸ÑÐµÐ½","prev-week":"Ð¡ÐµÐ´Ð¼Ð¸ÑÐ°","prev-month":"ÐÐµÑÐµÑ","prev-year":"ÐÐ¾Ð´Ð¸Ð½Ð°",next:"Ð¡Ð»ÐµÐ´Ð²Ð°Ñ","next-week":"Ð¡ÐµÐ´Ð¼Ð¸ÑÐ°","next-month":"ÐÐµÑÐµÑ","next-year":"ÐÐ¾Ð´Ð¸Ð½Ð°","less-than":"ÐÐµÑÐ¸Ð¾Ð´ÑÑ Ð¾Ñ Ð²ÑÐµÐ¼Ðµ Ð½Ðµ ÑÑÑÐ±Ð²Ð° Ð´Ð° Ðµ Ð¿Ð¾Ð²ÐµÑÐµ Ð¾Ñ %d Ð´Ð½Ð¸","more-than":"ÐÐµÑÐ¸Ð¾Ð´ÑÑ Ð¾Ñ Ð²ÑÐµÐ¼Ðµ Ð½Ðµ ÑÑÑÐ±Ð²Ð° Ð´Ð° Ðµ Ð¿Ð¾-Ð¼Ð°Ð»ÐºÐ¾ Ð¾Ñ %d Ð´Ð½Ð¸","default-more":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¿Ð¾-Ð´ÑÐ»ÑÐ³ Ð¾Ñ %d Ð´Ð½Ð¸","default-single":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð´Ð°ÑÐ°","default-less":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¿Ð¾-ÐºÑÑ Ð¾Ñ %d Ð´Ð½Ð¸","default-range":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¼ÐµÐ¶Ð´Ñ %d Ð¸ %d Ð´Ð½Ð¸","default-default":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´",time:"ÐÑÐµÐ¼Ðµ",hour:"Ð§Ð°Ñ",minute:"ÐÐ¸Ð½ÑÑÐ°"},cn:{selected:"å·²éæ©:",day:"å¤©",days:"å¤©",apply:"ç¡®å®","week-1":"ä¸","week-2":"äº","week-3":"ä¸","week-4":"å","week-5":"äº","week-6":"å­","week-7":"æ¥","week-number":"å¨","month-name":["ä¸æ","äºæ","ä¸æ","åæ","äºæ","å­æ","ä¸æ","å«æ","ä¹æ","åæ","åä¸æ","åäºæ"],shortcuts:"å¿«æ·éæ©",past:"è¿å»",following:"å°æ¥",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"ä¸å¨","prev-month":"ä¸ä¸ªæ","prev-year":"å»å¹´",next:"&nbsp;&nbsp;&nbsp;","next-week":"ä¸å¨","next-month":"ä¸ä¸ªæ","next-year":"æå¹´","less-than":"æéæ¥æèå´ä¸è½å¤§äº%då¤©","more-than":"æéæ¥æèå´ä¸è½å°äº%då¤©","default-more":"è¯·éæ©å¤§äº%då¤©çæ¥æèå´","default-less":"è¯·éæ©å°äº%då¤©çæ¥æèå´","default-range":"è¯·éæ©%då¤©å°%då¤©çæ¥æèå´","default-single":"è¯·éæ©ä¸ä¸ªæ¥æ","default-default":"è¯·éæ©ä¸ä¸ªæ¥æèå´",time:"æ¶é´",hour:"å°æ¶",minute:"åé"},cz:{selected:"VybrÃ¡no:",day:"Den",days:"Dny",apply:"ZavÅÃ­t","week-1":"po","week-2":"Ãºt","week-3":"st","week-4":"Ät","week-5":"pÃ¡","week-6":"so","week-7":"ne","month-name":["leden","Ãºnor","bÅezen","duben","kvÄten","Äerven","Äervenec","srpen","zÃ¡ÅÃ­","ÅÃ­jen","listopad","prosinec"],shortcuts:"Zkratky",past:"po",following:"nÃ¡sledujÃ­cÃ­",previous:"pÅedchozÃ­","prev-week":"tÃ½den","prev-month":"mÄsÃ­c","prev-year":"rok",next:"dalÅ¡Ã­","next-week":"tÃ½den","next-month":"mÄsÃ­c","next-year":"rok","less-than":"Rozsah data by nemÄl bÃ½t vÄtÅ¡Ã­ neÅ¾ %d dnÅ¯","more-than":"Rozsah data by nemÄl bÃ½t menÅ¡Ã­ neÅ¾ %d dnÅ¯","default-more":"ProsÃ­m zvolte rozsah data vÄtÅ¡Ã­ neÅ¾ %d dnÅ¯","default-single":"ProsÃ­m zvolte datum","default-less":"ProsÃ­m zvolte rozsah data menÅ¡Ã­ neÅ¾ %d dnÅ¯","default-range":"ProsÃ­m zvolte rozsah data mezi %d a %d dny","default-default":"ProsÃ­m zvolte rozsah data"},de:{selected:"Auswahl:",day:"Tag",days:"Tage",apply:"SchlieÃen","week-1":"mo","week-2":"di","week-3":"mi","week-4":"do","week-5":"fr","week-6":"sa","week-7":"so","month-name":["januar","februar","mÃ¤rz","april","mai","juni","juli","august","september","oktober","november","dezember"],shortcuts:"Schnellwahl",past:"Vorherige",following:"Folgende",previous:"Vorherige","prev-week":"Woche","prev-month":"Monat","prev-year":"Jahr",next:"NÃ¤chste","next-week":"Woche","next-month":"Monat","next-year":"Jahr","less-than":"Datumsbereich darf nicht grÃ¶Ãer sein als %d Tage","more-than":"Datumsbereich darf nicht kleiner sein als %d Tage","default-more":"Bitte mindestens %d Tage auswÃ¤hlen","default-single":"Bitte ein Datum auswÃ¤hlen","default-less":"Bitte weniger als %d Tage auswÃ¤hlen","default-range":"Bitte einen Datumsbereich zwischen %d und %d Tagen auswÃ¤hlen","default-default":"Bitte ein Start- und Enddatum auswÃ¤hlen",Time:"Zeit",hour:"Stunde",minute:"Minute"},es:{selected:"Seleccionado:",day:"DÃ­a",days:"DÃ­as",apply:"Cerrar","week-1":"lu","week-2":"ma","week-3":"mi","week-4":"ju","week-5":"vi","week-6":"sa","week-7":"do","month-name":["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],shortcuts:"Accesos directos",past:"Pasado",following:"Siguiente",previous:"Anterior","prev-week":"Semana","prev-month":"Mes","prev-year":"AÃ±o",next:"Siguiente","next-week":"Semana","next-month":"Mes","next-year":"AÃ±o","less-than":"El rango no deberÃ­a ser mayor de %d dÃ­as","more-than":"El rango no deberÃ­a ser menor de %d dÃ­as","default-more":"Por favor selecciona un rango mayor a %d dÃ­as","default-single":"Por favor selecciona un dÃ­a","default-less":"Por favor selecciona un rango menor a %d dÃ­as","default-range":"Por favor selecciona un rango entre %d y %d dÃ­as","default-default":"Por favor selecciona un rango de fechas."},fr:{selected:"SÃ©lection:",day:"Jour",days:"Jours",apply:"Fermer","week-1":"lu","week-2":"ma","week-3":"me","week-4":"je","week-5":"ve","week-6":"sa","week-7":"di","month-name":["janvier","fÃ©vrier","mars","avril","mai","juin","juillet","aoÃ»t","septembre","octobre","novembre","dÃ©cembre"],shortcuts:"Raccourcis",past:"PassÃ©",following:"Suivant",previous:"PrÃ©cÃ©dent","prev-week":"Semaine","prev-month":"Mois","prev-year":"AnnÃ©e",next:"Suivant","next-week":"Semaine","next-month":"Mois","next-year":"AnnÃ©e","less-than":"L'intervalle ne doit pas Ãªtre supÃ©rieure Ã  %d jours","more-than":"L'intervalle ne doit pas Ãªtre infÃ©rieure Ã  %d jours","default-more":"Merci de choisir une intervalle supÃ©rieure Ã  %d jours","default-single":"Merci de choisir une date","default-less":"Merci de choisir une intervalle infÃ©rieure %d jours","default-range":"Merci de choisir une intervalle comprise entre %d et %d jours","default-default":"Merci de choisir une date"},hu:{selected:"KivÃ¡lasztva:",day:"Nap",days:"Nap",apply:"Ok","week-1":"h","week-2":"k","week-3":"sz","week-4":"cs","week-5":"p","week-6":"sz","week-7":"v","month-name":["januÃ¡r","februÃ¡r","mÃ¡rcius","Ã¡prilis","mÃ¡jus","jÃºnius","jÃºlius","augusztus","szeptember","oktÃ³ber","november","december"],shortcuts:"GyorsvÃ¡lasztÃ³",past:"MÃºlt",following:"KÃ¶vetkezÅ",previous:"ElÅzÅ","prev-week":"HÃ©t","prev-month":"HÃ³nap","prev-year":"Ãv",next:"KÃ¶vetkezÅ","next-week":"HÃ©t","next-month":"HÃ³nap","next-year":"Ãv","less-than":"A kivÃ¡lasztÃ¡s nem lehet tÃ¶bb %d napnÃ¡l","more-than":"A kivÃ¡lasztÃ¡s nem lehet tÃ¶bb %d napnÃ¡l","default-more":"VÃ¡lassz ki egy idÅszakot ami hosszabb mint %d nap","default-single":"VÃ¡lassz egy napot","default-less":"VÃ¡lassz ki egy idÅszakot ami rÃ¶videbb mint %d nap","default-range":"VÃ¡lassz ki egy %d - %d nap hosszÃº idÅszakot","default-default":"VÃ¡lassz ki egy idÅszakot"},it:{selected:"Selezionati:",day:"Giorno",days:"Giorni",apply:"Chiudi","week-1":"lu","week-2":"ma","week-3":"me","week-4":"gi","week-5":"ve","week-6":"sa","week-7":"do","month-name":["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"],shortcuts:"Scorciatoie",past:"Scorso",following:"Successivo",previous:"Precedente","prev-week":"Settimana","prev-month":"Mese","prev-year":"Anno",next:"Prossimo","next-week":"Settimana","next-month":"Mese","next-year":"Anno","less-than":"L'intervallo non dev'essere maggiore di %d giorni","more-than":"L'intervallo non dev'essere minore di %d giorni","default-more":"Seleziona un intervallo maggiore di %d giorni","default-single":"Seleziona una data","default-less":"Seleziona un intervallo minore di %d giorni","default-range":"Seleziona un intervallo compreso tra i %d e i %d giorni","default-default":"Seleziona un intervallo di date"},ko:{selected:"ê¸°ê°:",day:"ì¼",days:"ì¼ê°",apply:"ë«ê¸°","week-1":"ì","week-2":"í","week-3":"ì","week-4":"ëª©","week-5":"ê¸","week-6":"í ","week-7":"ì¼","week-number":"ì£¼","month-name":["1ì","2ì","3ì","4ì","5ì","6ì","7ì","8ì","9ì","10ì","11ì","12ì"],shortcuts:"ë¨ì¶í¤ë¤",past:"ì§ë(ì¤ëê¸°ì¤)",following:"ì´í(ì¤ëê¸°ì¤)",previous:"ì´ì ","prev-week":"1ì£¼","prev-month":"1ë¬","prev-year":"1ë",next:"ë¤ì","next-week":"1ì£¼","next-month":"1ë¬","next-year":"1ë","less-than":"ë ì§ ë²ìë %d ì¼ë³´ë¤ ë§ì ì ììµëë¤","more-than":"ë ì§ ë²ìë %d ì¼ë³´ë¤ ìì ì ììµëë¤","default-more":"ë ì§ ë²ìë¥¼ %d ì¼ë³´ë¤ ê¸¸ê² ì íí´ ì£¼ì¸ì","default-single":"ë ì§ë¥¼ ì íí´ ì£¼ì¸ì","default-less":"%d ì¼ë³´ë¤ ìì ë ì§ë¥¼ ì íí´ ì£¼ì¸ì","default-range":"%dì %d ì¼ ì¬ì´ì ë ì§ ë²ìë¥¼ ì íí´ ì£¼ì¸ì","default-default":"ë ì§ ë²ìë¥¼ ì íí´ ì£¼ì¸ì",time:"ìê°",hour:"ì",minute:"ë¶"},no:{selected:"Valgt:",day:"Dag",days:"Dager",apply:"Lukk","week-1":"ma","week-2":"ti","week-3":"on","week-4":"to","week-5":"fr","week-6":"lÃ¸","week-7":"sÃ¸","month-name":["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"],shortcuts:"Snarveier","custom-values":"Egendefinerte Verdier",past:"Over",following:"FÃ¸lger",previous:"Forrige","prev-week":"Uke","prev-month":"MÃ¥ned","prev-year":"Ãr",next:"Neste","next-week":"Uke","next-month":"MÃ¥ned","next-year":"Ãr","less-than":"Datoperioden skal ikkje vÃ¦re lengre enn %d dager","more-than":"Datoperioden skal ikkje vÃ¦re kortere enn %d dager","default-more":"Vennligst velg ein datoperiode lengre enn %d dager","default-single":"Vennligst velg ein dato","default-less":"Vennligst velg ein datoperiode mindre enn %d dager","default-range":"Vennligst velg ein datoperiode mellom %d og %d dager","default-default":"Vennligst velg ein datoperiode",time:"Tid",hour:"Time",minute:"Minutter"},nl:{selected:"Geselecteerd:",day:"Dag",days:"Dagen",apply:"Ok","week-1":"ma","week-2":"di","week-3":"wo","week-4":"do","week-5":"vr","week-6":"za","week-7":"zo","month-name":["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],shortcuts:"Snelkoppelingen","custom-values":"Aangepaste waarden",past:"Verleden",following:"Komend",previous:"Vorige","prev-week":"Week","prev-month":"Maand","prev-year":"Jaar",next:"Volgende","next-week":"Week","next-month":"Maand","next-year":"Jaar","less-than":"Interval moet langer dan %d dagen zijn","more-than":"Interval mag niet minder dan %d dagen zijn","default-more":"Selecteer een interval langer dan %dagen","default-single":"Selecteer een datum","default-less":"Selecteer een interval minder dan %d dagen","default-range":"Selecteer een interval tussen %d en %d dagen","default-default":"Selecteer een interval",time:"Tijd",hour:"Uur",minute:"Minuut"},ru:{selected:"ÐÑÐ±ÑÐ°Ð½Ð¾:",day:"ÐÐµÐ½Ñ",days:"ÐÐ½ÐµÐ¹",apply:"ÐÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ","week-1":"Ð¿Ð½","week-2":"Ð²Ñ","week-3":"ÑÑ","week-4":"ÑÑ","week-5":"Ð¿Ñ","week-6":"ÑÐ±","week-7":"Ð²Ñ","month-name":["ÑÐ½Ð²Ð°ÑÑ","ÑÐµÐ²ÑÐ°Ð»Ñ","Ð¼Ð°ÑÑ","Ð°Ð¿ÑÐµÐ»Ñ","Ð¼Ð°Ð¹","Ð¸ÑÐ½Ñ","Ð¸ÑÐ»Ñ","Ð°Ð²Ð³ÑÑÑ","ÑÐµÐ½ÑÑÐ±ÑÑ","Ð¾ÐºÑÑÐ±ÑÑ","Ð½Ð¾ÑÐ±ÑÑ","Ð´ÐµÐºÐ°Ð±ÑÑ"],shortcuts:"ÐÑÑÑÑÑÐ¹ Ð²ÑÐ±Ð¾Ñ","custom-values":"ÐÐ¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ñ",past:"ÐÑÐ¾ÑÐµÐ´ÑÐ¸Ðµ",following:"Ð¡Ð»ÐµÐ´ÑÑÑÐ¸Ðµ",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"ÐÐµÐ´ÐµÐ»Ñ","prev-month":"ÐÐµÑÑÑ","prev-year":"ÐÐ¾Ð´",next:"&nbsp;&nbsp;&nbsp;","next-week":"ÐÐµÐ´ÐµÐ»Ñ","next-month":"ÐÐµÑÑÑ","next-year":"ÐÐ¾Ð´","less-than":"ÐÐ¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð±Ð¾Ð»ÑÑÐµ %d Ð´Ð½ÐµÐ¹","more-than":"ÐÐ¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¼ÐµÐ½ÑÑÐµ %d Ð´Ð½ÐµÐ¹","default-more":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð±Ð¾Ð»ÑÑÐµ %d Ð´Ð½ÐµÐ¹","default-single":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð°ÑÑ","default-less":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ½ÑÑÐµ %d Ð´Ð½ÐµÐ¹","default-range":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ¶Ð´Ñ %d Ð¸ %d Ð´Ð½ÑÐ¼Ð¸","default-default":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½",time:"ÐÑÐµÐ¼Ñ",hour:"Ð§Ð°ÑÑ",minute:"ÐÐ¸Ð½ÑÑÑ"},uk:{selected:"ÐÐ¸Ð±ÑÐ°Ð½Ð¾:",day:"ÐÐµÐ½Ñ",days:"ÐÐ½ÑÐ²",apply:"ÐÐ°ÑÑÐ¾ÑÑÐ²Ð°ÑÐ¸","week-1":"Ð¿Ð½","week-2":"Ð²Ñ","week-3":"ÑÑ","week-4":"ÑÑ","week-5":"Ð¿Ñ","week-6":"ÑÐ±","week-7":"Ð½Ð´","month-name":["ÑÑÑÐµÐ½Ñ","Ð»ÑÑÐ¸Ð¹","Ð±ÐµÑÐµÐ·ÐµÐ½Ñ","ÐºÐ²ÑÑÐµÐ½Ñ","ÑÑÐ°Ð²ÐµÐ½Ñ","ÑÐµÑÐ²ÐµÐ½Ñ","Ð»Ð¸Ð¿ÐµÐ½Ñ","ÑÐµÑÐ¿ÐµÐ½Ñ","Ð²ÐµÑÐµÑÐµÐ½Ñ","Ð¶Ð¾Ð²ÑÐµÐ½Ñ","Ð»Ð¸ÑÑÐ¾Ð¿Ð°Ð´","Ð³ÑÑÐ´ÐµÐ½Ñ"],shortcuts:"Ð¨Ð²Ð¸Ð´ÐºÐ¸Ð¹ Ð²Ð¸Ð±ÑÑ","custom-values":"ÐÐ½Ð°ÑÐµÐ½Ð½Ñ ÐºÐ¾ÑÐ¸ÑÑÑÐ²Ð°ÑÐ°",past:"ÐÐ¸Ð½ÑÐ»Ñ",following:"ÐÐ°ÑÑÑÐ¿Ð½Ñ",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"Ð¢Ð¸Ð¶Ð´ÐµÐ½Ñ","prev-month":"ÐÑÑÑÑÑ","prev-year":"Ð ÑÐº",next:"&nbsp;&nbsp;&nbsp;","next-week":"Ð¢Ð¸Ð¶Ð´ÐµÐ½Ñ","next-month":"ÐÑÑÑÑÑ","next-year":"Ð ÑÐº","less-than":"ÐÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶Ðµ Ð±ÑÑÐ¸ Ð±ÑÐ»ÑÑ Ð½ÑÐ¶ %d Ð´Ð½ÑÐ²","more-than":"ÐÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶Ðµ Ð±ÑÑÐ¸ Ð¼ÐµÐ½ÑÑ Ð½ÑÐ¶ %d Ð´Ð½ÑÐ²","default-more":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð±ÑÐ»ÑÑÐµ %d Ð´Ð½ÑÐ²","default-single":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´Ð°ÑÑ","default-less":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ½ÑÐµ %d Ð´Ð½ÑÐ²","default-range":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÑÐ¶ %d ÑÐ° %d Ð´Ð½ÑÐ¼Ð¸","default-default":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½",time:"Ð§Ð°Ñ",hour:"ÐÐ¾Ð´Ð¸Ð½Ð¸",minute:"Ð¥Ð²Ð¸Ð»Ð¸Ð½Ð¸"},pl:{selected:"Wybrany:",day:"DzieÅ",days:"Dni",apply:"Zamknij","week-1":"pon","week-2":"wt","week-3":"År","week-4":"czw","week-5":"pt","week-6":"so","week-7":"nd","month-name":["styczeÅ","luty","marzec","kwiecieÅ","maj","czerwiec","lipiec","sierpieÅ","wrzesieÅ","paÅºdziernik","listopad","grudzieÅ"],shortcuts:"SkrÃ³ty","custom-values":"Niestandardowe wartoÅci",past:"PrzeszÅe",following:"NastÄpne",previous:"Poprzednie","prev-week":"tydzieÅ","prev-month":"miesiÄc","prev-year":"rok",next:"NastÄpny","next-week":"tydzieÅ","next-month":"miesiÄc","next-year":"rok","less-than":"Okres nie powinien byÄ dÅuÅ¼szy niÅ¼ %d dni","more-than":"Okres nie powinien byÄ krÃ³tszy niÅ¼  %d ni","default-more":"Wybierz okres dÅuÅ¼szy niÅ¼ %d dni","default-single":"Wybierz datÄ","default-less":"Wybierz okres krÃ³tszy niÅ¼ %d dni","default-range":"Wybierz okres trwajÄcy od %d do %d dni","default-default":"Wybierz okres",time:"Czas",hour:"Godzina",minute:"Minuta"},se:{selected:"Vald:",day:"dag",days:"dagar",apply:"godkÃ¤nn","week-1":"ma","week-2":"ti","week-3":"on","week-4":"to","week-5":"fr","week-6":"lÃ¶","week-7":"sÃ¶","month-name":["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"],shortcuts:"genvÃ¤gar","custom-values":"Anpassade vÃ¤rden",past:"Ã¶ver",following:"fÃ¶ljande",previous:"fÃ¶rra","prev-week":"vecka","prev-month":"mÃ¥nad","prev-year":"Ã¥r",next:"nÃ¤sta","next-week":"vecka","next-month":"mÃ¥ned","next-year":"Ã¥r","less-than":"Datumintervall bÃ¶r inte vara mindre Ã¤n %d dagar","more-than":"Datumintervall bÃ¶r inte vara mer Ã¤n %d dagar","default-more":"VÃ¤lj ett datumintervall lÃ¤ngre Ã¤n %d dagar","default-single":"VÃ¤lj ett datum","default-less":"VÃ¤lj ett datumintervall mindre Ã¤n %d dagar","default-range":"VÃ¤lj ett datumintervall mellan %d och %d dagar","default-default":"VÃ¤lj ett datumintervall",time:"tid",hour:"timme",minute:"minut"},pt:{selected:"Selecionado:",day:"Dia",days:"Dias",apply:"Fechar","week-1":"seg","week-2":"ter","week-3":"qua","week-4":"qui","week-5":"sex","week-6":"sab","week-7":"dom","week-number":"N","month-name":["janeiro","fevereiro","marÃ§o","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"],shortcuts:"Atalhos","custom-values":"Valores Personalizados",past:"Passado",following:"Seguinte",previous:"Anterior","prev-week":"Semana","prev-month":"MÃªs","prev-year":"Ano",next:"PrÃ³ximo","next-week":"PrÃ³xima Semana","next-month":"PrÃ³ximo MÃªs","next-year":"PrÃ³ximo Ano","less-than":"O perÃ­odo selecionado nÃ£o deve ser maior que %d dias","more-than":"O perÃ­odo selecionado nÃ£o deve ser menor que %d dias","default-more":"Selecione um perÃ­odo superior a %d dias","default-single":"Selecione uma data","default-less":"Selecione um perÃ­odo inferior a %d dias","default-range":"Selecione um perÃ­odo de %d a %d dias","default-default":"Selecione um perÃ­odo",time:"Tempo",hour:"Hora",minute:"Minuto"},tc:{selected:"å·²é¸æ:",day:"å¤©",days:"å¤©",apply:"ç¢ºå®","week-1":"ä¸","week-2":"äº","week-3":"ä¸","week-4":"å","week-5":"äº","week-6":"å­","week-7":"æ¥","week-number":"å¨","month-name":["ä¸æ","äºæ","ä¸æ","åæ","äºæ","å­æ","ä¸æ","å«æ","ä¹æ","åæ","åä¸æ","åäºæ"],shortcuts:"å¿«éé¸æ",past:"éå»",following:"å°ä¾",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"ä¸é±","prev-month":"ä¸åæ","prev-year":"å»å¹´",next:"&nbsp;&nbsp;&nbsp;","next-week":"ä¸å¨","next-month":"ä¸åæ","next-year":"æå¹´","less-than":"æé¸æ¥æç¯åä¸è½å¤§æ¼%då¤©","more-than":"æé¸æ¥æç¯åä¸è½å°æ¼%då¤©","default-more":"è«é¸æå¤§æ¼%då¤©çæ¥æç¯å","default-less":"è«é¸æå°æ¼%då¤©çæ¥æç¯å","default-range":"è«é¸æ%då¤©å°%då¤©çæ¥æç¯å","default-single":"è«é¸æä¸åæ¥æ","default-default":"è«é¸æä¸åæ¥æç¯å",time:"æ¥æ",hour:"å°æ",minute:"åé"},ja:{selected:"é¸æãã¾ãã:",day:"æ¥",days:"æ¥ã",apply:"éãã","week-1":"æ","week-2":"ç«","week-3":"æ°´","week-4":"æ¨","week-5":"é","week-6":"å","week-7":"æ¥","month-name":["1æ","2æ","3æ","4æ","5æ","6æ","7æ","8æ","9æ","10æ","11æ","12æ"],shortcuts:"ã¯ã¤ãã¯é¸æ",past:"éå»",following:"å°æ¥",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"åé±ã","prev-month":"åæ","prev-year":"æ¨å¹´",next:"&nbsp;&nbsp;&nbsp;","next-week":"æ¥é±","next-month":"æ¥æ","next-year":"æ¥å¹´","less-than":"æ¥ä»ã®ç¯å²ã¯ ï¼d æ¥ä»¥ä¸ã«ãã¹ãã§ã¯ããã¾ãã","more-than":"æ¥ä»ã®ç¯å²ã¯ ï¼d æ¥ãä¸åã£ã¦ã¯ããã¾ãã","default-more":"ï¼d æ¥ãããé·ãæéãé¸æãã¦ãã ãã","default-less":"ï¼d æ¥æªæºã®æéãé¸æãã¦ãã ãã","default-range":"ï¼d ã¨ï¼ dæ¥ã®éã®æ¥ä»ç¯å²ãé¸æãã¦ãã ãã","default-single":"æ¥ä»ãé¸æãã¦ãã ãã","default-default":"æ¥ä»ç¯å²ãé¸æãã¦ãã ãã",time:"æé",hour:"æé",minute:"å"},da:{selected:"Valgt:",day:"Dag",days:"Dage",apply:"Luk","week-1":"ma","week-2":"ti","week-3":"on","week-4":"to","week-5":"fr","week-6":"lÃ¶","week-7":"sÃ¶","month-name":["januar","februar","marts","april","maj","juni","juli","august","september","oktober","november","december"],shortcuts:"genveje","custom-values":"Brugerdefinerede vÃ¦rdier",past:"Forbi",following:"FÃ¸lgende",previous:"Forrige","prev-week":"uge","prev-month":"mÃ¥nad","prev-year":"Ã¥r",next:"NÃ¦ste","next-week":"NÃ¦ste uge","next-month":"NÃ¦ste mÃ¥ned","next-year":"NÃ¦ste Ã¥r","less-than":"Dato interval bÃ¸r ikke vÃ¦re med end %d dage","more-than":"Dato interval bÃ¸r ikke vÃ¦re mindre end %d dage","default-more":"VÃ¦lg datointerval lÃ¦ngere end %d dage","default-single":"VÃ¦lg dato","default-less":"VÃ¦lg datointerval mindre end %d dage","default-range":"VÃ¦lg datointerval mellem %d og %d dage","default-default":"VÃ¦lg datointerval",time:"tid",hour:"time",minute:"minut"},fi:{selected:"Valittu:",day:"PÃ¤ivÃ¤",days:"PÃ¤ivÃ¤Ã¤",apply:"Sulje","week-1":"ma","week-2":"ti","week-3":"ke","week-4":"to","week-5":"pe","week-6":"la","week-7":"su","week-number":"V","month-name":["tammikuu","helmikuu","maaliskuu","huhtikuu","toukokuu","kesÃ¤kuu","heinÃ¤kuu","elokuu","syyskuu","lokakuu","marraskuu","joulukuu"],shortcuts:"Pikavalinnat","custom-values":"Mukautetut Arvot",past:"Menneet",following:"Tulevat",previous:"Edellinen","prev-week":"Viikko","prev-month":"Kuukausi","prev-year":"Vuosi",next:"Seuraava","next-week":"Viikko","next-month":"Kuukausi","next-year":"Vuosi","less-than":"Aikajakson tulisi olla vÃ¤hemmÃ¤n kuin %d pÃ¤ivÃ¤Ã¤","more-than":"Aikajakson ei tulisi olla vÃ¤hempÃ¤Ã¤ kuin %d pÃ¤ivÃ¤Ã¤","default-more":"Valitse pidempi aikajakso kuin %d pÃ¤ivÃ¤Ã¤","default-single":"Valitse pÃ¤ivÃ¤","default-less":"Valitse lyhyempi aikajakso kuin %d pÃ¤ivÃ¤Ã¤","default-range":"Valitse aikajakso %d ja %d pÃ¤ivÃ¤n vÃ¤liltÃ¤","default-default":"Valitse aikajakso",time:"Aika",hour:"Tunti",minute:"Minuutti"},cat:{selected:"Seleccionats:",day:"Dia",days:"Dies",apply:"Tanca","week-1":"Dl","week-2":"Dm","week-3":"Dc","week-4":"Dj","week-5":"Dv","week-6":"Ds","week-7":"Dg","week-number":"S","month-name":["gener","febrer","marÃ§","abril","maig","juny","juliol","agost","setembre","octubre","novembre","desembre"],shortcuts:"DreÃ§eres","custom-values":"Valors personalitzats",past:"Passat",following:"Futur",previous:"Anterior","prev-week":"Setmana","prev-month":"Mes","prev-year":"Any",next:"SegÃ¼ent","next-week":"Setmana","next-month":"Mes","next-year":"Any","less-than":"El perÃ­ode no hauria de ser de mÃ©s de %d dies","more-than":"El perÃ­ode no hauria de ser de menys de %d dies","default-more":"Perfavor selecciona un perÃ­ode mÃ©s gran de %d dies","default-single":"Perfavor selecciona una data","default-less":"Perfavor selecciona un perÃ­ode de menys de %d dies","default-range":"Perfavor selecciona un perÃ­ode d'entre %d i %d dies","default-default":"Perfavor selecciona un perÃ­ode",time:"Temps",hour:"Hora",minute:"Minut"}},e.fn.dateRangePicker=function(i){i||(i={}),(i=e.extend(!0,{autoClose:!1,format:"YYYY-MM-DD",separator:" to ",language:"auto",startOfWeek:"sunday",getValue:function(){return e(this).val()},setValue:function(t){e(this).attr("readonly")||e(this).is(":disabled")||t==e(this).val()||e(this).val(t)},startDate:!1,endDate:!1,time:{enabled:!1},minDays:0,maxDays:0,showShortcuts:!1,shortcuts:{},customShortcuts:[],inline:!1,container:"body",alwaysOpen:!1,singleDate:!1,lookBehind:!1,batchMode:!1,duration:200,stickyMonths:!1,dayDivAttrs:[],dayTdAttrs:[],selectForward:!1,selectBackward:!1,applyBtnClass:"",singleMonth:"auto",hoveringTooltip:function(e,t,i){return e>1?e+" "+K("days"):""},showTopbar:!0,swapTime:!1,showWeekNumbers:!1,getWeekNumber:function(e){return t(e).format("w")},customOpenAnimation:null,customCloseAnimation:null,customArrowPrevSymbol:null,customArrowNextSymbol:null,monthSelect:!1,yearSelect:!1},i)).start=!1,i.end=!1,i.startWeek=!1,i.isTouchDevice="ontouchstart"in window||navigator.msMaxTouchPoints,i.isTouchDevice&&(i.hoveringTooltip=!1),"auto"==i.singleMonth&&(i.singleMonth=e(window).width()<480),i.singleMonth&&(i.stickyMonths=!1),i.showTopbar||(i.autoClose=!0),i.startDate&&"string"==typeof i.startDate&&(i.startDate=t(i.startDate,i.format).toDate()),i.endDate&&"string"==typeof i.endDate&&(i.endDate=t(i.endDate,i.format).toDate()),i.yearSelect&&"boolean"==typeof i.yearSelect&&(i.yearSelect=function(e){return[e-5,e+5]});var n,s,a=function(){if("auto"==i.language){var t=navigator.language?navigator.language:navigator.browserLanguage;return t&&(t=t.toLowerCase())in e.dateRangePickerLanguages?e.dateRangePickerLanguages[t]:e.dateRangePickerLanguages.default}return i.language&&i.language in e.dateRangePickerLanguages?e.dateRangePickerLanguages[i.language]:e.dateRangePickerLanguages.default}(),r=!1,o=this,l=e(o).get(0);return e(this).off(".datepicker").on("click.datepicker",(function(e){n.is(":visible")||u(i.duration)})).on("change.datepicker",(function(e){c()})).on("keyup.datepicker",(function(){try{clearTimeout(s)}catch(e){}s=setTimeout((function(){c()}),2e3)})),function(){var s=this;if(e(this).data("date-picker-opened"))z();else{e(this).data("date-picker-opened",!0),(n=function(){var t,n='<div class="date-picker-wrapper';i.extraClass&&(n+=" "+i.extraClass+" "),i.singleDate&&(n+=" single-date "),i.showShortcuts||(n+=" no-shortcuts "),i.showTopbar||(n+=" no-topbar "),i.customTopBar&&(n+=" custom-topbar "),n+='">',i.showTopbar&&(n+='<div class="drp_top-bar">',i.customTopBar?("function"==typeof i.customTopBar&&(i.customTopBar=i.customTopBar()),n+='<div class="custom-top">'+i.customTopBar+"</div>"):(n+='<div class="normal-top"><span class="selection-top">'+K("selected")+' </span> <b class="start-day">...</b>',i.singleDate||(n+=' <span class="separator-day">'+i.separator+'</span> <b class="end-day">...</b> <i class="selected-days">(<span class="selected-days-num">3</span> '+K("days")+")</i>"),n+="</div>",n+='<div class="error-top">error</div><div class="default-top">default</div>'),n+='<input type="button" class="apply-btn disabled'+(t="",!0===i.autoClose&&(t+=" hide"),""!==i.applyBtnClass&&(t+=" "+i.applyBtnClass),t)+'" value="'+K("apply")+'" />',n+="</div>");var s=i.showWeekNumbers?6:5,a="&lt;";i.customArrowPrevSymbol&&(a=i.customArrowPrevSymbol);var r="&gt;";if(i.customArrowNextSymbol&&(r=i.customArrowNextSymbol),n+='<div class="month-wrapper">   <table class="month1" cellspacing="0" border="0" cellpadding="0">       <thead>           <tr class="caption">               <th>                   <span class="prev">'+a+'                   </span>               </th>               <th colspan="'+s+'" class="month-name">               </th>               <th>'+(i.singleDate||!i.stickyMonths?'<span class="next">'+r+"</span>":"")+'               </th>           </tr>           <tr class="week-name">'+B()+"       </thead>       <tbody></tbody>   </table>",!i.singleMonth&&(n+='<div class="gap">'+function(){for(var e=['<div class="gap-top-mask"></div><div class="gap-bottom-mask"></div><div class="gap-lines">'],t=0;t<20;t++)e.push('<div class="gap-line"><div class="gap-1"></div><div class="gap-2"></div><div class="gap-3"></div></div>');return e.push("</div>"),e.join("")}()+'</div><table class="month2" cellspacing="0" border="0" cellpadding="0">   <thead>   <tr class="caption">       <th>'+(i.stickyMonths?"":'<span class="prev">'+a+"</span>")+'       </th>       <th colspan="'+s+'" class="month-name">       </th>       <th>           <span class="next">'+r+'</span>       </th>   </tr>   <tr class="week-name">'+B()+"   </thead>   <tbody></tbody></table>"),n+='<div class="dp-clearfix"></div><div class="time"><div class="time1"></div>',i.singleDate||(n+='<div class="time2"></div>'),n+='</div><div class="dp-clearfix"></div></div>',n+='<div class="calendar__footer">',i.showShortcuts){n+='<div class="shortcuts"><b>'+K("shortcuts")+"</b>";var o=i.shortcuts;if(o){var l;if(o["prev-days"]&&o["prev-days"].length>0){n+='&nbsp;<span class="prev-days">'+K("past");for(var h=0;h<o["prev-days"].length;h++)l=o["prev-days"][h],l+=o["prev-days"][h]>1?K("days"):K("day"),n+=' <a href="javascript:;" shortcut="day,-'+o["prev-days"][h]+'">'+l+"</a>";n+="</span>"}if(o["next-days"]&&o["next-days"].length>0){for(n+='&nbsp;<span class="next-days">'+K("following"),h=0;h<o["next-days"].length;h++)l=o["next-days"][h],l+=o["next-days"][h]>1?K("days"):K("day"),n+=' <a href="javascript:;" shortcut="day,'+o["next-days"][h]+'">'+l+"</a>";n+="</span>"}if(o.prev&&o.prev.length>0){for(n+='&nbsp;<span class="prev-buttons">'+K("previous"),h=0;h<o.prev.length;h++)l=K("prev-"+o.prev[h]),n+=' <a href="javascript:;" shortcut="prev,'+o.prev[h]+'">'+l+"</a>";n+="</span>"}if(o.next&&o.next.length>0){for(n+='&nbsp;<span class="next-buttons">'+K("next"),h=0;h<o.next.length;h++)l=K("next-"+o.next[h]),n+=' <a href="javascript:;" shortcut="next,'+o.next[h]+'">'+l+"</a>";n+="</span>"}}if(i.customShortcuts)for(h=0;h<i.customShortcuts.length;h++){var u=i.customShortcuts[h];n+='&nbsp;<span class="custom-shortcut"><a href="javascript:;" shortcut="custom">'+u.name+"</a></span>"}n+="</div>"}if(i.showCustomValues&&(n+='<div class="customValues"><b>'+(i.customValueLabel||K("custom-values"))+"</b>",i.customValues))for(h=0;h<i.customValues.length;h++){var c=i.customValues[h];n+='&nbsp;<span class="custom-value"><a href="javascript:;" custom="'+c.value+'">'+c.name+"</a></span>"}return n+='<div class="calendar__link-wrap"><a class="link calendar__link_clear link_grey">ÐÑÐ¸ÑÑÐ¸ÑÑ</a><a class="link calendar__link_apply link_colored">ÐÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ</a>',e(n+="</div></div>")}().hide()).append('<div class="date-range-length-tip"></div>'),e(i.container).append(n),i.inline?n.addClass("inline-wrapper"):h(),i.alwaysOpen&&n.find(".apply-btn").hide();var a=Z();if(X(a),i.time.enabled)if(i.startDate&&i.endDate||i.start&&i.end)H(t(i.start||i.startDate).toDate(),"time1"),H(t(i.end||i.endDate).toDate(),"time2");else{var o=i.defaultEndTime?i.defaultEndTime:a;H(a,"time1"),H(o,"time2")}var u="";u=i.singleDate?K("default-single"):i.minDays&&i.maxDays?K("default-range"):i.minDays?K("default-more"):i.maxDays?K("default-less"):K("default-default"),n.find(".default-top").html(u.replace(/\%d/,i.minDays).replace(/\%d/,i.maxDays)),i.singleMonth?n.addClass("single-month"):n.addClass("two-months"),setTimeout((function(){f(),r=!0}),0),n.click((function(e){e.stopPropagation()})),e(document).on("click.datepicker",J),n.find(".next").click((function(){var t,n;i.stickyMonths?(t=V(i.month1),q(n=V(i.month2))||!i.singleDate&&F(t,n)>=0||(I(t,"month1"),I(n,"month2"),Y())):function(t){var n=e(t).parents("table").hasClass("month2"),s=n?i.month2:i.month1;s=V(s),!i.singleMonth&&!i.singleDate&&!n&&F(s,i.month2)>=0||q(s)||(I(s,n?"month2":"month1"),L())}(this)})),n.find(".prev").click((function(){var t,n;i.stickyMonths?(t=U(i.month1),n=U(i.month2),q(t)||!i.singleDate&&F(n,t)<=0||(I(n,"month2"),I(t,"month1"),Y())):function(t){var n=e(t).parents("table").hasClass("month2"),s=n?i.month2:i.month1;s=U(s),n&&F(s,i.month1)<=0||q(s)||(I(s,n?"month2":"month1"),L())}(this)})),n.attr("unselectable","on").css("user-select","none").on("selectstart",(function(e){return e.preventDefault(),!1})),n.find(".apply-btn").click((function(){z();var t=W(new Date(i.start))+i.separator+W(new Date(i.end));e(s).trigger("datepicker-apply",{value:t,date1:new Date(i.start),date2:new Date(i.end)})})),n.find("[custom]").click((function(){var t=e(this).attr("custom");i.start=!1,i.end=!1,n.find(".day.checked").removeClass("checked"),n.find(".day.checked").parent().removeClass("td-checked"),i.setValue.call(l,t),M(),S(!0),Y(),i.autoClose&&z()})),n.find("[shortcut]").click((function(){var t,n=e(this).attr("shortcut"),s=new Date,a=!1;if(-1!=n.indexOf("day")){var r=parseInt(n.split(",",2)[1],10);a=new Date((new Date).getTime()+864e5*r),s=new Date(s.getTime()+864e5*(r>0?1:-1))}else if(-1!=n.indexOf("week")){var o;for(o=1==(t=-1!=n.indexOf("prev,")?-1:1)?"monday"==i.startOfWeek?1:0:"monday"==i.startOfWeek?0:6,s=new Date(s.getTime()-864e5);s.getDay()!=o;)s=new Date(s.getTime()+864e5*t);a=new Date(s.getTime()+864e5*t*6)}else if(-1!=n.indexOf("month"))(a=1==(t=-1!=n.indexOf("prev,")?-1:1)?V(s):U(s)).setDate(1),(s=V(a)).setDate(1),s=new Date(s.getTime()-864e5);else if(-1!=n.indexOf("year"))t=-1!=n.indexOf("prev,")?-1:1,(a=new Date).setFullYear(s.getFullYear()+t),a.setMonth(0),a.setDate(1),s.setFullYear(s.getFullYear()+t),s.setMonth(11),s.setDate(31);else if("custom"==n){var l=e(this).html();if(i.customShortcuts&&i.customShortcuts.length>0)for(var h=0;h<i.customShortcuts.length;h++){var u=i.customShortcuts[h];if(u.name==l){var c;if((c=u.dates.call())&&2==c.length&&(a=c[0],s=c[1]),c&&1==c.length){var d=c[0];I(d,"month1"),I(V(d),"month2"),L()}break}}}a&&s&&(P(a,s),M())})),n.find(".time1 input[type=range]").on("change touchmove",(function(t){var i=t.target;g("time1","hour"==i.name?e(i).val().replace(/^(\d{1})$/,"0$1"):void 0,"minute"==i.name?e(i).val().replace(/^(\d{1})$/,"0$1"):void 0)})),n.find(".time2 input[type=range]").on("change touchmove",(function(t){var i=t.target;g("time2","hour"==i.name?e(i).val().replace(/^(\d{1})$/,"0$1"):void 0,"minute"==i.name?e(i).val().replace(/^(\d{1})$/,"0$1"):void 0)}))}}.call(this),i.alwaysOpen&&u(0),e(this).data("dateRangePicker",{setStart:function(e){return"string"==typeof e&&(e=t(e,i.format).toDate()),i.end=!1,O(e),this},setEnd:function(e,n){var s=new Date;return s.setTime(i.start),"string"==typeof e&&(e=t(e,i.format).toDate()),P(s,e,n),this},setDateRange:function(e,n,s){"string"==typeof e&&"string"==typeof n&&(e=t(e,i.format).toDate(),n=t(n,i.format).toDate()),P(e,n,s)},clear:function(){i.start=!1,i.end=!1,n.find(".day.checked").removeClass("checked"),n.find(".day.checked").parent().removeClass("td-checked"),n.find(".day.last-date-selected").removeClass("last-date-selected"),n.find(".day.last-date-selected").parent().removeClass("td-last-date-selected"),n.find(".day.first-date-selected").removeClass("first-date-selected"),n.find(".day.first-date-selected").parent().removeClass("td-first-date-selected"),i.setValue.call(l,""),M(),S(),Y()},close:z,open:u,redraw:R,getDatePicker:function(){return n},resetMonthsView:X,destroy:function(){e(o).off(".datepicker"),e(o).data("dateRangePicker",""),e(o).data("date-picker-opened",null),n.remove(),e(window).off("resize.datepicker",h),e(document).off("click.datepicker",J)}}),e(window).on("resize.datepicker",h),this;function h(){if(!i.inline){var t=e(o).offset();if("relative"==e(i.container).css("position")){var s=e(i.container).offset(),a=Math.max(0,t.left+n.outerWidth()-e("body").width()+16);n.css({top:t.top-s.top+e(o).outerHeight()+4,left:t.left-s.left-a})}else t.left<460?n.css({top:t.top+e(o).outerHeight()+parseInt(e("body").css("border-top")||0,10),left:t.left}):n.css({top:t.top+e(o).outerHeight()+parseInt(e("body").css("border-top")||0,10),left:t.left+e(o).width()-n.width()-16})}}function u(t){R(),c(),i.customOpenAnimation?i.customOpenAnimation.call(n.get(0),(function(){e(o).trigger("datepicker-opened",{relatedTarget:n})})):n.slideDown(t,(function(){e(o).trigger("datepicker-opened",{relatedTarget:n})})),e(o).trigger("datepicker-open",{relatedTarget:n}),L(),f(),h()}function c(){var e=i.getValue.call(l),n=e?e.split(i.separator):"";if(n&&(1==n.length&&i.singleDate||n.length>=2)){var s=i.format;s.match(/Do/)&&(s=s.replace(/Do/,"D"),n[0]=n[0].replace(/(\d+)(th|nd|st)/,"$1"),n.length>=2&&(n[1]=n[1].replace(/(\d+)(th|nd|st)/,"$1"))),r=!1,n.length>=2?P(d(n[0],s,t.locale(i.language)),d(n[1],s,t.locale(i.language))):1==n.length&&i.singleDate&&O(d(n[0],s,t.locale(i.language))),r=!0}}function d(e,i,n){return t(e,i,n).isValid()?t(e,i,n).toDate():t().toDate()}function f(){var e=n.find(".gap").css("margin-left");e&&(e=parseInt(e));var t=n.find(".month1").width(),i=n.find(".gap").width()+(e?2*e:0),s=n.find(".month2").width();n.find(".month-wrapper").width(t+i+s)}function p(e,i){n.find("."+e+" input[type=range].hour-range").val(t(i).hours()),n.find("."+e+" input[type=range].minute-range").val(t(i).minutes()),g(e,t(i).format("HH"),t(i).format("mm"))}function m(e,n){i[e]=parseInt(t(parseInt(n)).startOf("day").add(t(i[e+"Time"]).format("HH"),"h").add(t(i[e+"Time"]).format("mm"),"m").valueOf())}function g(e,s,a){switch(s&&n.find("."+e+" .hour-val").text(s),a&&n.find("."+e+" .minute-val").text(a),e){case"time1":i.start&&r("start",t(i.start)),r("startTime",t(i.startTime||t().valueOf()));break;case"time2":i.end&&r("end",t(i.end)),r("endTime",t(i.endTime||t().valueOf()))}function r(e,t){var n=t.format("HH"),r=t.format("mm");i[e]=t.startOf("day").add(s||n,"h").add(a||r,"m").valueOf()}M(),S(),Y()}function v(e){var n=e;return"week-range"===i.batchMode?n="monday"===i.startOfWeek?t(parseInt(e)).startOf("isoweek").valueOf():t(parseInt(e)).startOf("week").valueOf():"month-range"===i.batchMode&&(n=t(parseInt(e)).startOf("month").valueOf()),n}function _(e){var n=e;return"week-range"===i.batchMode?n="monday"===i.startOfWeek?t(parseInt(e)).endOf("isoweek").valueOf():t(parseInt(e)).endOf("week").valueOf():"month-range"===i.batchMode&&(n=t(parseInt(e)).endOf("month").valueOf()),n}function y(n){if(!n.hasClass("invalid")){var s=n.attr("time");if(n.addClass("checked"),n.parent().addClass("td-checked"),i.singleDate?(i.start=s,i.end=!1):"week"===i.batchMode?"monday"===i.startOfWeek?(i.start=t(parseInt(s)).startOf("isoweek").valueOf(),i.end=t(parseInt(s)).endOf("isoweek").valueOf()):(i.end=t(parseInt(s)).endOf("week").valueOf(),i.start=t(parseInt(s)).startOf("week").valueOf()):"workweek"===i.batchMode?(i.start=t(parseInt(s)).day(1).valueOf(),i.end=t(parseInt(s)).day(5).valueOf()):"weekend"===i.batchMode?(i.start=t(parseInt(s)).day(6).valueOf(),i.end=t(parseInt(s)).day(7).valueOf()):"month"===i.batchMode?(i.start=t(parseInt(s)).startOf("month").valueOf(),i.end=t(parseInt(s)).endOf("month").valueOf()):i.start&&i.end||!i.start&&!i.end?(i.start=v(s),i.end=!1):i.start&&(i.end=_(s),i.time.enabled&&m("end",i.end)),i.time.enabled&&(i.start&&m("start",i.start),i.end&&m("end",i.end)),!i.singleDate&&i.start&&i.end&&i.start>i.end){var a=i.end;i.end=_(i.start),i.start=v(a),i.time.enabled&&i.swapTime&&(p("time1",i.start),p("time2",i.end))}i.start=parseInt(i.start),i.end=parseInt(i.end),D(),i.start&&!i.end&&(e(o).trigger("datepicker-first-date-selected",{date1:new Date(i.start)}),k(n)),w(),M(),S(),Y(),C()}}function b(e){if(e=parseInt(e,10),i.startDate&&j(e,i.startDate)<0)return!1;if(i.endDate&&j(e,i.endDate)>0)return!1;if(i.start&&!i.end&&!i.singleDate){if(i.maxDays>0&&T(e,i.start)>i.maxDays)return!1;if(i.minDays>0&&T(e,i.start)<i.minDays)return!1;if(i.selectForward&&e<i.start)return!1;if(i.selectBackward&&e>i.start)return!1;if(i.beforeShowDay&&"function"==typeof i.beforeShowDay){for(var t=!0,n=e;T(n,i.start)>1;){if(!i.beforeShowDay(new Date(n))[0]){t=!1;break}if(Math.abs(n-i.start)<864e5)break;n>i.start&&(n-=864e5),n<i.start&&(n+=864e5)}if(!t)return!1}}return!0}function w(){return n.find(".day.invalid.tmp").removeClass("tmp invalid").addClass("valid"),i.start&&!i.end&&n.find(".day.toMonth.valid").each((function(){b(parseInt(e(this).attr("time"),10))?e(this).addClass("valid tmp").removeClass("invalid"):e(this).addClass("invalid tmp").removeClass("valid")})),!0}function k(t){var s=parseInt(t.attr("time")),a="";if(t.hasClass("has-tooltip")&&t.attr("data-tooltip"))a='<span class="tooltip-content">'+t.attr("data-tooltip")+"</span>";else if(!t.hasClass("invalid"))if(i.singleDate)n.find(".day.hovering").removeClass("hovering"),t.addClass("hovering"),t.parent().addClass("td-hovering");else if(n.find(".day").each((function(){var t=parseInt(e(this).attr("time"));i.start,i.end,t==s?(e(this).addClass("hovering"),e(this).parent().addClass("td-hovering")):(e(this).removeClass("hovering"),e(this).parent().removeClass("td-hovering")),i.start&&!i.end&&(i.start<t&&s>=t||i.start>t&&s<=t)?(e(this).addClass("hovering"),e(this).parent().addClass("td-hovering")):(e(this).removeClass("hovering"),e(this).parent().removeClass("td-hovering"))})),i.start&&!i.end){var r=T(s,i.start);i.hoveringTooltip&&("function"==typeof i.hoveringTooltip?a=i.hoveringTooltip(r,i.start,s):!0===i.hoveringTooltip&&r>1&&(a=r+" "+K("days")))}if(a){var o=t.offset(),l=n.offset(),h=o.left-l.left,u=o.top-l.top;h+=t.width()/2;var c=n.find(".date-range-length-tip"),d=c.css({visibility:"hidden",display:"none"}).html(a).width(),f=c.height();h-=d/2,u-=f,setTimeout((function(){c.css({left:h,top:u,display:"block",visibility:"visible"})}),10)}else n.find(".date-range-length-tip").hide()}function D(){n.find(".day.hovering").removeClass("hovering"),n.find(".date-range-length-tip").hide()}function x(e){var n=e.val(),s=e.attr("name"),a=e.parents("table").hasClass("month1")?"month1":"month2",r="month1"===a?"month2":"month1",o=!!i.startDate&&t(i.startDate),l=!!i.endDate&&t(i.endDate),h=t(i[a])[s](n);o&&h.isSameOrBefore(o)&&(h=o.add("month2"===a?1:0,"month")),l&&h.isSameOrAfter(l)&&(h=l.add(i.singleMonth||"month1"!==a?0:-1,"month")),I(h,a),"month1"===a?(i.stickyMonths||t(h).isSameOrAfter(i[r],"month"))&&I(t(h).add(1,"month"),r):(i.stickyMonths||t(h).isSameOrBefore(i[r],"month"))&&I(t(h).add(-1,"month"),r),L()}function C(){!0===i.singleDate?r&&i.start&&i.autoClose&&z():r&&i.start&&i.end&&i.autoClose&&z()}function M(){var e=Math.ceil((i.end-i.start)/864e5)+1;i.singleDate?i.start&&!i.end?n.find(".drp_top-bar").removeClass("error").addClass("normal"):n.find(".drp_top-bar").removeClass("error").removeClass("normal"):i.maxDays&&e>i.maxDays?(i.start=!1,i.end=!1,n.find(".day").removeClass("checked"),n.find(".day").parent().removeClass("td-checked"),n.find(".drp_top-bar").removeClass("normal").addClass("error").find(".error-top").html(K("less-than").replace("%d",i.maxDays))):i.minDays&&e<i.minDays?(i.start=!1,i.end=!1,n.find(".day").removeClass("checked"),n.find(".day").parent().removeClass("td-checked"),n.find(".drp_top-bar").removeClass("normal").addClass("error").find(".error-top").html(K("more-than").replace("%d",i.minDays))):i.start||i.end?n.find(".drp_top-bar").removeClass("error").addClass("normal"):n.find(".drp_top-bar").removeClass("error").removeClass("normal"),i.singleDate&&i.start&&!i.end||!i.singleDate&&i.start&&i.end?n.find(".apply-btn").removeClass("disabled"):n.find(".apply-btn").addClass("disabled"),i.batchMode&&(i.start&&i.startDate&&j(i.start,i.startDate)<0||i.end&&i.endDate&&j(i.end,i.endDate)>0)&&(i.start=!1,i.end=!1,n.find(".day").removeClass("checked"),n.find(".day").parent().removeClass("td-checked"))}function S(t,s){var a;n.find(".start-day").html("..."),n.find(".end-day").html("..."),n.find(".selected-days").hide(),i.start&&n.find(".start-day").html(W(new Date(parseInt(i.start)))),i.end&&n.find(".end-day").html(W(new Date(parseInt(i.end)))),i.start&&i.singleDate?(n.find(".apply-btn").removeClass("disabled"),a=W(new Date(i.start)),i.setValue.call(l,a,W(new Date(i.start)),W(new Date(i.end))),r&&!s&&e(o).trigger("datepicker-change",{value:a,date1:new Date(i.start)})):i.start&&i.end?(n.find(".selected-days").show().find(".selected-days-num").html(T(i.end,i.start)),n.find(".apply-btn").removeClass("disabled"),a=W(new Date(i.start))+i.separator+W(new Date(i.end)),i.setValue.call(l,a,W(new Date(i.start)),W(new Date(i.end))),r&&!s&&e(o).trigger("datepicker-change",{value:a,date1:new Date(i.start),date2:new Date(i.end)})):t?n.find(".apply-btn").removeClass("disabled"):n.find(".apply-btn").addClass("disabled")}function T(e,i){return Math.abs(t(e).diff(t(i),"d"))+1}function P(e,t,n){if(e.getTime()>t.getTime()){var s=t;t=e,e=s,s=null}var a=!0;if(i.startDate&&j(e,i.startDate)<0&&(a=!1),i.endDate&&j(t,i.endDate)>0&&(a=!1),!a)return I(i.startDate,"month1"),I(V(i.startDate),"month2"),void L();i.start=e.getTime(),i.end=t.getTime(),i.time.enabled&&(p("time1",e),p("time2",t)),(i.stickyMonths||j(e,t)>0&&0===F(e,t))&&(i.lookBehind?e=U(t):t=V(e)),i.stickyMonths&&!1!==i.endDate&&F(t,i.endDate)>0&&(e=U(e),t=U(t)),i.stickyMonths||0===F(e,t)&&(i.lookBehind?e=U(t):t=V(e)),I(e,"month1"),I(t,"month2"),L(),M(),S(!1,n),C()}function O(e){var t=!0;i.startDate&&j(e,i.startDate)<0&&(t=!1),i.endDate&&j(e,i.endDate)>0&&(t=!1),t?(i.start=e.getTime(),i.time.enabled&&p("time1",e),I(e,"month1"),!0!==i.singleMonth&&I(V(e),"month2"),L(),S(),C()):I(i.startDate,"month1")}function Y(){(i.start||i.end)&&(n.find(".day").each((function(){var n=parseInt(e(this).attr("time")),s=i.start,a=i.end;i.time.enabled&&(n=t(n).startOf("day").valueOf(),s=t(s||t().valueOf()).startOf("day").valueOf(),a=t(a||t().valueOf()).startOf("day").valueOf()),i.start&&i.end&&a>=n&&s<=n||i.start&&!i.end&&t(s).format("YYYY-MM-DD")==t(n).format("YYYY-MM-DD")?(e(this).addClass("checked"),e(this).parent().addClass("td-checked")):(e(this).removeClass("checked"),e(this).parent().removeClass("td-checked")),i.start&&t(s).format("YYYY-MM-DD")==t(n).format("YYYY-MM-DD")?(e(this).addClass("first-date-selected"),e(this).parent().addClass("td-first-date-selected")):(e(this).removeClass("first-date-selected"),e(this).parent().removeClass("td-first-date-selected")),i.end&&t(a).format("YYYY-MM-DD")==t(n).format("YYYY-MM-DD")?(e(this).addClass("last-date-selected"),e(this).parent().addClass("td-last-date-selected")):(e(this).removeClass("last-date-selected"),e(this).parent().removeClass("td-last-date-selected"))})),n.find(".week-number").each((function(){e(this).attr("data-start-time")==i.startWeek&&e(this).addClass("week-number-selected")})))}function I(s,a){var r=function(e,n){var s=(e=t(e)).get("month"),a='<div class="month-element">'+E(s)+"</div>";if(!i.monthSelect)return a;var r=!!i.startDate&&t(i.startDate).add(i.singleMonth||"month2"!==n?0:1,"month"),o=!!i.endDate&&t(i.endDate).add(i.singleMonth||"month1"!==n?0:-1,"month"),l=r&&e.isSame(r,"year")?r.get("month"):0,h=o&&e.isSame(o,"year")?o.get("month"):11,u=Math.min(l,s),c=Math.max(h,s);return u===c?a:N("month",A({minSelectable:l,maxSelectable:h,minVisible:u,maxVisible:c},s,(function(e){return E(e)})))}(s=t(s).toDate(),a),o=function(e,n){var s=(e=t(e)).get("year"),a='<div class="month-element">'+s+"</div>";if(!i.yearSelect)return a;var r=i.yearSelect&&"function"==typeof i.yearSelect,o=!!i.startDate&&t(i.startDate).add(i.singleMonth||"month2"!==n?0:1,"month"),l=!!i.endDate&&t(i.endDate).add(i.singleMonth||"month1"!==n?0:-1,"month"),h=r?i.yearSelect(s):i.yearSelect.slice(),u=o?Math.max(h[0],o.get("year")):Math.min(h[0],s),c=l?Math.min(h[1],l.get("year")):Math.max(h[1],s),d=Math.min(u,s),f=Math.max(c,s);return d===f?a:N("year",A({minSelectable:u,maxSelectable:c,minVisible:d,maxVisible:f},s))}(s,a);n.find("."+a+" .month-name").html(r+" "+o),n.find("."+a+" tbody").html(function(e){var n=[];e.setDate(1),new Date(e.getTime()-864e5);var s,a,r=new Date,o=e.getDay();if(0===o&&"monday"===i.startOfWeek&&(o=7),o>0)for(var l=o;l>0;l--){var h=new Date(e.getTime()-864e5*l);a=b(h.getTime()),i.startDate&&j(h,i.startDate)<0&&(a=!1),i.endDate&&j(h,i.endDate)>0&&(a=!1),n.push({date:h,type:"lastMonth",day:h.getDate(),time:h.getTime(),valid:a})}var u=e.getMonth();for(l=0;l<40;l++)s=t(e).add(l,"days").toDate(),a=b(s.getTime()),i.startDate&&j(s,i.startDate)<0&&(a=!1),i.endDate&&j(s,i.endDate)>0&&(a=!1),n.push({date:s,type:s.getMonth()==u?"toMonth":"nextMonth",day:s.getDate(),time:s.getTime(),valid:a});for(var c=[],d=0;d<6&&"nextMonth"!=n[7*d].type;d++){for(c.push("<tr>"),h=0;h<7;h++){var f="monday"==i.startOfWeek?h+1:h;s=n[7*d+f];var p=t(s.time).format("L")==t(r).format("L");if(s.extraClass="",s.tooltip="",s.valid&&i.beforeShowDay&&"function"==typeof i.beforeShowDay){var m=i.beforeShowDay(t(s.time).toDate());s.valid=m[0],s.extraClass=m[1]||"",s.tooltip=m[2]||"",""!==s.tooltip&&(s.extraClass+=" has-tooltip ")}var g={time:s.time,"data-tooltip":s.tooltip,class:"day "+s.type+" "+s.extraClass+" "+(s.valid?"valid":"invalid")+" "+(p?"real-today":"")};0===h&&i.showWeekNumbers&&c.push('<td><div class="week-number" data-start-time="'+s.time+'">'+i.getWeekNumber(s.date)+"</div></td>"),c.push("<td "+G({},i.dayTdAttrs,s)+"><div "+G(g,i.dayDivAttrs,s)+">"+$(s.time,s.day)+"</div></td>")}c.push("</tr>")}return c.join("")}(s)),i[a]=s,w(),n.find(".day").off("click").click((function(t){y(e(this))})),n.find(".day").off("mouseenter").mouseenter((function(t){k(e(this))})),n.find(".day").off("mouseleave").mouseleave((function(e){n.find(".date-range-length-tip").hide(),i.singleDate&&D()})),n.find(".week-number").off("click").click((function(s){var a,r,o,l;a=e(this),l=parseInt(a.attr("data-start-time"),10),i.startWeek?(n.find(".week-number-selected").removeClass("week-number-selected"),r=new Date(l<i.startWeek?l:i.startWeek),o=new Date(l<i.startWeek?i.startWeek:l),i.startWeek=!1,i.start=t(r).day("monday"==i.startOfWeek?1:0).valueOf(),i.end=t(o).day("monday"==i.startOfWeek?7:6).valueOf()):(i.startWeek=l,a.addClass("week-number-selected"),r=new Date(l),i.start=t(r).day("monday"==i.startOfWeek?1:0).valueOf(),i.end=t(r).day("monday"==i.startOfWeek?7:6).valueOf()),w(),M(),S(),Y(),C()})),n.find(".month").off("change").change((function(t){x(e(this))})),n.find(".year").off("change").change((function(t){x(e(this))}))}function A(e,t,i){var n=[];i=i||function(e){return e};for(var s=e.minVisible;s<=e.maxVisible;s++)n.push({value:s,text:i(s),selected:s===t,disabled:s<e.minSelectable||s>e.maxSelectable});return n}function N(e,t){for(var i,n='<div class="select-wrapper"><select class="'+e+'" name="'+e+'">',s=0,a=t.length;s<a;s++){var r=t[s];n+='<option value="'+r.value+'"'+(r.selected?" selected":"")+(r.disabled?" disabled":"")+">"+r.text+"</option>",r.selected&&(i=r.text)}return n+="</select>"+i+"</div>"}function H(e,t){n.find("."+t).append("<div><span>"+K("Time")+': <span class="hour-val">00</span>:<span class="minute-val">00</span></span></div><div class="hour"><label>'+K("Hour")+': <input type="range" class="hour-range" name="hour" min="0" max="23"></label></div><div class="minute"><label>'+K("Minute")+': <input type="range" class="minute-range" name="minute" min="0" max="59"></label></div>'),p(t,e)}function E(e){return K("month-name")[e]}function W(e){return t(e).format(i.format)}function L(){Y();var e=parseInt(t(i.month1).format("YYYYMM")),s=parseInt(t(i.month2).format("YYYYMM")),a=Math.abs(e-s);a>1&&89!=a?n.addClass("has-gap").removeClass("no-gap").find(".gap").css("visibility","visible"):n.removeClass("has-gap").addClass("no-gap").find(".gap").css("visibility","hidden");var r=n.find("table.month1").height(),o=n.find("table.month2").height();n.find(".gap").height(Math.max(r,o)+10)}function z(){if(!i.alwaysOpen){var t=function(){e(o).data("date-picker-opened",!1),e(o).trigger("datepicker-closed",{relatedTarget:n})};i.customCloseAnimation?i.customCloseAnimation.call(n.get(0),t):e(n).slideUp(i.duration,t),e(o).trigger("datepicker-close",{relatedTarget:n})}}function R(){I(i.month1,"month1"),I(i.month2,"month2")}function F(e,i){var n=parseInt(t(e).format("YYYYMM"))-parseInt(t(i).format("YYYYMM"));return n>0?1:0===n?0:-1}function j(e,i){var n=parseInt(t(e).format("YYYYMMDD"))-parseInt(t(i).format("YYYYMMDD"));return n>0?1:0===n?0:-1}function V(e){return t(e).add(1,"months").toDate()}function U(e){return t(e).add(-1,"months").toDate()}function B(){var e=i.showWeekNumbers?"<th>"+K("week-number")+"</th>":"";return"monday"==i.startOfWeek?e+"<th>"+K("week-1")+"</th><th>"+K("week-2")+"</th><th>"+K("week-3")+"</th><th>"+K("week-4")+"</th><th>"+K("week-5")+"</th><th>"+K("week-6")+"</th><th>"+K("week-7")+"</th>":e+"<th>"+K("week-7")+"</th><th>"+K("week-1")+"</th><th>"+K("week-2")+"</th><th>"+K("week-3")+"</th><th>"+K("week-4")+"</th><th>"+K("week-5")+"</th><th>"+K("week-6")+"</th>"}function q(e){return e=t(e),!(!i.startDate||!e.endOf("month").isBefore(i.startDate))||!(!i.endDate||!e.startOf("month").isAfter(i.endDate))}function G(t,i,n){var s=e.extend(!0,{},t);e.each(i,(function(e,t){var i=t(n);for(var a in i)s.hasOwnProperty(a)?s[a]+=i[a]:s[a]=i[a]}));var a="";for(var r in s)s.hasOwnProperty(r)&&(a+=r+'="'+s[r]+'" ');return a}function $(e,t){return i.showDateFilter&&"function"==typeof i.showDateFilter?i.showDateFilter(e,t):t}function K(t){var i=t.toLowerCase(),n=t in a?a[t]:i in a?a[i]:null,s=e.dateRangePickerLanguages.default;return null==n&&(n=t in s?s[t]:i in s?s[i]:""),n}function Z(){var e=i.defaultTime?i.defaultTime:new Date;return i.lookBehind?(i.startDate&&F(e,i.startDate)<0&&(e=V(t(i.startDate).toDate())),i.endDate&&F(e,i.endDate)>0&&(e=t(i.endDate).toDate())):(i.startDate&&F(e,i.startDate)<0&&(e=t(i.startDate).toDate()),i.endDate&&F(V(e),i.endDate)>0&&(e=U(t(i.endDate).toDate()))),i.singleDate&&(i.startDate&&F(e,i.startDate)<0&&(e=t(i.startDate).toDate()),i.endDate&&F(e,i.endDate)>0&&(e=t(i.endDate).toDate())),e}function X(e){e||(e=Z()),i.lookBehind?(I(U(e),"month1"),I(e,"month2")):(I(e,"month1"),I(V(e),"month2")),i.singleDate&&I(e,"month1"),Y(),L()}function J(t){(function(t,i){return i.contains(t.target)||t.target==i||null!=i.childNodes&&e.inArray(t.target,i.childNodes)>=0})(t,o[0])||n.is(":visible")&&z()}}})?n.apply(t,s):n)||(e.exports=a)},function(e,t,i){!function(e){"use strict";function t(e,t,i){var n,s;return"m"===i?t?"Ð¼Ð¸Ð½ÑÑÐ°":"Ð¼Ð¸Ð½ÑÑÑ":e+" "+(n=+e,s={ss:t?"ÑÐµÐºÑÐ½Ð´Ð°_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´":"ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´",mm:t?"Ð¼Ð¸Ð½ÑÑÐ°_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ":"Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ",hh:"ÑÐ°Ñ_ÑÐ°ÑÐ°_ÑÐ°ÑÐ¾Ð²",dd:"Ð´ÐµÐ½Ñ_Ð´Ð½Ñ_Ð´Ð½ÐµÐ¹",MM:"Ð¼ÐµÑÑÑ_Ð¼ÐµÑÑÑÐ°_Ð¼ÐµÑÑÑÐµÐ²",yy:"Ð³Ð¾Ð´_Ð³Ð¾Ð´Ð°_Ð»ÐµÑ"}[i].split("_"),n%10==1&&n%100!=11?s[0]:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?s[1]:s[2])}var i=[/^ÑÐ½Ð²/i,/^ÑÐµÐ²/i,/^Ð¼Ð°Ñ/i,/^Ð°Ð¿Ñ/i,/^Ð¼Ð°[Ð¹Ñ]/i,/^Ð¸ÑÐ½/i,/^Ð¸ÑÐ»/i,/^Ð°Ð²Ð³/i,/^ÑÐµÐ½/i,/^Ð¾ÐºÑ/i,/^Ð½Ð¾Ñ/i,/^Ð´ÐµÐº/i];e.defineLocale("ru",{months:{format:"ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑÐ°_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑÐ°_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ".split("_"),standalone:"ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑ_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑ_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ".split("_")},monthsShort:{format:"ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°Ñ._Ð°Ð¿Ñ._Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.".split("_"),standalone:"ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°ÑÑ_Ð°Ð¿Ñ._Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.".split("_")},weekdays:{standalone:"Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ð°_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÐ°_ÑÑÐ±Ð±Ð¾ÑÐ°".split("_"),format:"Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ñ_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÑ_ÑÑÐ±Ð±Ð¾ÑÑ".split("_"),isFormat:/\[ ?[ÐÐ²] ?(?:Ð¿ÑÐ¾ÑÐ»ÑÑ|ÑÐ»ÐµÐ´ÑÑÑÑÑ|ÑÑÑ)? ?\] ?dddd/},weekdaysShort:"Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±".split("_"),weekdaysMin:"Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±".split("_"),monthsParse:i,longMonthsParse:i,shortMonthsParse:i,monthsRegex:/^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\.?)/i,monthsShortRegex:/^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\.?)/i,monthsStrictRegex:/^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|Ð¼Ð°ÑÑÐ°?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ»[ÑÑ]|Ð°Ð²Ð³ÑÑÑÐ°?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ])/i,monthsShortStrictRegex:/^(ÑÐ½Ð²\.|ÑÐµÐ²Ñ?\.|Ð¼Ð°Ñ[Ñ.]|Ð°Ð¿Ñ\.|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ.]|Ð¸ÑÐ»[ÑÑ.]|Ð°Ð²Ð³\.|ÑÐµÐ½Ñ?\.|Ð¾ÐºÑ\.|Ð½Ð¾ÑÐ±?\.|Ð´ÐµÐº\.)/i,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY Ð³.",LLL:"D MMMM YYYY Ð³., H:mm",LLLL:"dddd, D MMMM YYYY Ð³., H:mm"},calendar:{sameDay:"[Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ, Ð²] LT",nextDay:"[ÐÐ°Ð²ÑÑÐ°, Ð²] LT",lastDay:"[ÐÑÐµÑÐ°, Ð²] LT",nextWeek:function(e){if(e.week()===this.week())return 2===this.day()?"[ÐÐ¾] dddd, [Ð²] LT":"[Ð] dddd, [Ð²] LT";switch(this.day()){case 0:return"[Ð ÑÐ»ÐµÐ´ÑÑÑÐµÐµ] dddd, [Ð²] LT";case 1:case 2:case 4:return"[Ð ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¹] dddd, [Ð²] LT";case 3:case 5:case 6:return"[Ð ÑÐ»ÐµÐ´ÑÑÑÑÑ] dddd, [Ð²] LT"}},lastWeek:function(e){if(e.week()===this.week())return 2===this.day()?"[ÐÐ¾] dddd, [Ð²] LT":"[Ð] dddd, [Ð²] LT";switch(this.day()){case 0:return"[Ð Ð¿ÑÐ¾ÑÐ»Ð¾Ðµ] dddd, [Ð²] LT";case 1:case 2:case 4:return"[Ð Ð¿ÑÐ¾ÑÐ»ÑÐ¹] dddd, [Ð²] LT";case 3:case 5:case 6:return"[Ð Ð¿ÑÐ¾ÑÐ»ÑÑ] dddd, [Ð²] LT"}},sameElse:"L"},relativeTime:{future:"ÑÐµÑÐµÐ· %s",past:"%s Ð½Ð°Ð·Ð°Ð´",s:"Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ ÑÐµÐºÑÐ½Ð´",ss:t,m:t,mm:t,h:"ÑÐ°Ñ",hh:t,d:"Ð´ÐµÐ½Ñ",dd:t,M:"Ð¼ÐµÑÑÑ",MM:t,y:"Ð³Ð¾Ð´",yy:t},meridiemParse:/Ð½Ð¾ÑÐ¸|ÑÑÑÐ°|Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°/i,isPM:function(e){return/^(Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°)$/.test(e)},meridiem:function(e,t,i){return e<4?"Ð½Ð¾ÑÐ¸":e<12?"ÑÑÑÐ°":e<17?"Ð´Ð½Ñ":"Ð²ÐµÑÐµÑÐ°"},dayOfMonthOrdinalParse:/\d{1,2}-(Ð¹|Ð³Ð¾|Ñ)/,ordinal:function(e,t){switch(t){case"M":case"d":case"DDD":return e+"-Ð¹";case"D":return e+"-Ð³Ð¾";case"w":case"W":return e+"-Ñ";default:return e}},week:{dow:1,doy:4}})}(i(1))},function(e,t,i){(function(e){e(document).ready((function(){e(".dropdown__arrow").on("click",(function(){e(this).parent().parent().children(".dropdown-ul-wrap").slideToggle(200,"linear").parent().toggleClass("dropdown_open")})),e(".dropdown__link_clear").on("click",(function(){for(var t=e(this).parent().children("ul"),i=t.children(),n=0;n<i.length;n++)i.eq(n).children(".dropdown__num").text("0"),i.eq(n).children(".dropdown__button_minus").addClass("dropdown__button_not-active");t.parent().parent().find(".dropdown__field span").text("Ð¡ÐºÐ¾Ð»ÑÐºÐ¾ Ð³Ð¾ÑÑÐµÐ¹"),e(this).addClass("hidden")})),e(".dropdown__link_apply").on("click",(function(){e(this).parent().slideToggle(200,"linear").parent().toggleClass("dropdown_open")})),e(".dropdown__button").on("click",(function(){var t=e(this).parent().parent().parent().parent(),i=t.find(".dropdown__field span:first-child"),n="",s="",a=0,r=e(this).parent().find(".dropdown__num"),o=1*r.text(),l=t.find("ul");if(!e(this).hasClass("dropdown__button_not-active")){if(e(this).hasClass("dropdown__button_minus")?(o-=1,r.text(o),0==o&&e(this).addClass("dropdown__button_not-active"),98==o&&e(this).parent().find(".dropdown__button_plus").removeClass("dropdown__button_not-active")):(o+=1,r.text(o),99==o&&e(this).addClass("dropdown__button_not-active"),1==o&&e(this).parent().find(".dropdown__button_minus").removeClass("dropdown__button_not-active")),e(this).hasClass("dropdown__button_plus"))t.find(".dropdown__link_clear").removeClass("hidden");else{for(var h=0;h<l.children().length;h++)a+=1*l.children().eq(h).find(".dropdown__num").text();0==a&&t.find(".dropdown__link_clear").addClass("hidden")}t.hasClass("dropdown_guests")&&(n=function(){var e=1*l.children().eq(0).find(".dropdown__num").text()+1*l.children().eq(1).find(".dropdown__num").text(),t=1*l.children().eq(2).find(".dropdown__num").text();if(e>=5&&e<=20)e+=" Ð³Ð¾ÑÑÐµÐ¹";else if(e%10==1)e+=" Ð³Ð¾ÑÑÑ";else if(e%10>=2&&e%10<=4)e+=" Ð³Ð¾ÑÑÑ";else{if(0==e&&0==t)return e="Ð¡ÐºÐ¾Ð»ÑÐºÐ¾ Ð³Ð¾ÑÑÐµÐ¹";e+=" Ð³Ð¾ÑÑÐµÐ¹"}if(0==t)return e;t+=t%10==1?" Ð¼Ð»Ð°Ð´ÐµÐ½ÐµÑ":t%10>=2&&t%10<=4?" Ð¼Ð»Ð°Ð´ÐµÐ½ÑÐ°":" Ð¼Ð»Ð°Ð´ÐµÐ½ÑÐµÐ²";return e=e+", "+t}()),t.hasClass("dropdown_furniture")&&(n=function(){for(var e=0;e<3;e++)if(0!=(s=l.children().eq(e).find(".dropdown__num").text()))if(s%10==1)switch(e){case 0:n=n+s+" ÑÐ¿Ð°Ð»ÑÐ½Ñ, ";break;case 1:n=n+s+" ÐºÑÐ¾Ð²Ð°ÑÑ, ";break;case 2:n=n+s+" Ð²Ð°Ð½Ð½Ð°Ñ ÐºÐ¾Ð¼Ð½Ð°ÑÐ°, "}else if(s%10>=2&&s%10<=4)switch(e){case 0:n=n+s+" ÑÐ¿Ð°Ð»ÑÐ½Ð¸, ";break;case 1:n=n+s+" ÐºÑÐ¾Ð²Ð°ÑÐ¸, ";break;case 2:n=n+s+" Ð²Ð°Ð½Ð½ÑÐµ ÐºÐ¾Ð¼Ð½Ð°ÑÑ, "}else switch(e){case 0:n=n+s+" ÑÐ¿Ð°Ð»ÐµÐ½, ";break;case 1:n=n+s+" ÐºÑÐ¾Ð²Ð°ÑÐµÐ¹, ";break;case 2:n=n+s+" Ð²Ð°Ð½Ð½ÑÑ ÐºÐ¾Ð¼Ð½Ð°Ñ, "}return n=n.slice(0,n.length-2)}()),i.text(n)}}))}))}).call(this,i(0))},,,,function(e,t,i){var n,s,a;
/*! jQuery UI - v1.12.1 - 2019-07-21
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/draggable.js, widgets/droppable.js, widgets/resizable.js, widgets/selectable.js, widgets/sortable.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/selectmenu.js, widgets/slider.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */s=[i(0)],void 0===(a="function"==typeof(n=function(e){function t(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},e.extend(this._defaults,this.regional[""]),this.regional.en=e.extend(!0,{},this.regional[""]),this.regional["en-US"]=e.extend(!0,{},this.regional.en),this.dpDiv=i(e("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function i(t){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return t.on("mouseout",i,(function(){e(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&e(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&e(this).removeClass("ui-datepicker-next-hover")})).on("mouseover",i,n)}function n(){e.datepicker._isDisabledDatepicker(u.inline?u.dpDiv.parent()[0]:u.input[0])||(e(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),e(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&e(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&e(this).addClass("ui-datepicker-next-hover"))}function s(t,i){for(var n in e.extend(t,i),i)null==i[n]&&(t[n]=i[n]);return t}function a(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger("change")}}e.ui=e.ui||{},e.ui.version="1.12.1";var r=0,o=Array.prototype.slice;e.cleanData=function(t){return function(i){var n,s,a;for(a=0;null!=(s=i[a]);a++)try{(n=e._data(s,"events"))&&n.remove&&e(s).triggerHandler("remove")}catch(e){}t(i)}}(e.cleanData),e.widget=function(t,i,n){var s,a,r,o={},l=t.split(".")[0],h=l+"-"+(t=t.split(".")[1]);return n||(n=i,i=e.Widget),e.isArray(n)&&(n=e.extend.apply(null,[{}].concat(n))),e.expr[":"][h.toLowerCase()]=function(t){return!!e.data(t,h)},e[l]=e[l]||{},s=e[l][t],a=e[l][t]=function(e,t){return this._createWidget?void(arguments.length&&this._createWidget(e,t)):new a(e,t)},e.extend(a,s,{version:n.version,_proto:e.extend({},n),_childConstructors:[]}),(r=new i).options=e.widget.extend({},r.options),e.each(n,(function(t,n){return e.isFunction(n)?void(o[t]=function(){function e(){return i.prototype[t].apply(this,arguments)}function s(e){return i.prototype[t].apply(this,e)}return function(){var t,i=this._super,a=this._superApply;return this._super=e,this._superApply=s,t=n.apply(this,arguments),this._super=i,this._superApply=a,t}}()):void(o[t]=n)})),a.prototype=e.widget.extend(r,{widgetEventPrefix:s&&r.widgetEventPrefix||t},o,{constructor:a,namespace:l,widgetName:t,widgetFullName:h}),s?(e.each(s._childConstructors,(function(t,i){var n=i.prototype;e.widget(n.namespace+"."+n.widgetName,a,i._proto)})),delete s._childConstructors):i._childConstructors.push(a),e.widget.bridge(t,a),a},e.widget.extend=function(t){for(var i,n,s=o.call(arguments,1),a=0,r=s.length;r>a;a++)for(i in s[a])n=s[a][i],s[a].hasOwnProperty(i)&&void 0!==n&&(t[i]=e.isPlainObject(n)?e.isPlainObject(t[i])?e.widget.extend({},t[i],n):e.widget.extend({},n):n);return t},e.widget.bridge=function(t,i){var n=i.prototype.widgetFullName||t;e.fn[t]=function(s){var a="string"==typeof s,r=o.call(arguments,1),l=this;return a?this.length||"instance"!==s?this.each((function(){var i,a=e.data(this,n);return"instance"===s?(l=a,!1):a?e.isFunction(a[s])&&"_"!==s.charAt(0)?(i=a[s].apply(a,r))!==a&&void 0!==i?(l=i&&i.jquery?l.pushStack(i.get()):i,!1):void 0:e.error("no such method '"+s+"' for "+t+" widget instance"):e.error("cannot call methods on "+t+" prior to initialization; attempted to call method '"+s+"'")})):l=void 0:(r.length&&(s=e.widget.extend.apply(null,[s].concat(r))),this.each((function(){var t=e.data(this,n);t?(t.option(s||{}),t._init&&t._init()):e.data(this,n,new i(s,this))}))),l}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(t,i){i=e(i||this.defaultElement||this)[0],this.element=e(i),this.uuid=r++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=e(),this.hoverable=e(),this.focusable=e(),this.classesElementLookup={},i!==this&&(e.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===i&&this.destroy()}}),this.document=e(i.style?i.ownerDocument:i.document||i),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){var t=this;this._destroy(),e.each(this.classesElementLookup,(function(e,i){t._removeClass(i,e)})),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:e.noop,widget:function(){return this.element},option:function(t,i){var n,s,a,r=t;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof t)if(r={},n=t.split("."),t=n.shift(),n.length){for(s=r[t]=e.widget.extend({},this.options[t]),a=0;n.length-1>a;a++)s[n[a]]=s[n[a]]||{},s=s[n[a]];if(t=n.pop(),1===arguments.length)return void 0===s[t]?null:s[t];s[t]=i}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];r[t]=i}return this._setOptions(r),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return"classes"===e&&this._setOptionClasses(t),this.options[e]=t,"disabled"===e&&this._setOptionDisabled(t),this},_setOptionClasses:function(t){var i,n,s;for(i in t)s=this.classesElementLookup[i],t[i]!==this.options.classes[i]&&s&&s.length&&(n=e(s.get()),this._removeClass(s,i),n.addClass(this._classes({element:n,keys:i,classes:t,add:!0})))},_setOptionDisabled:function(e){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!e),e&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(t){function i(i,a){var r,o;for(o=0;i.length>o;o++)r=s.classesElementLookup[i[o]]||e(),r=t.add?e(e.unique(r.get().concat(t.element.get()))):e(r.not(t.element).get()),s.classesElementLookup[i[o]]=r,n.push(i[o]),a&&t.classes[i[o]]&&n.push(t.classes[i[o]])}var n=[],s=this;return t=e.extend({element:this.element,classes:this.options.classes||{}},t),this._on(t.element,{remove:"_untrackClassesElement"}),t.keys&&i(t.keys.match(/\S+/g)||[],!0),t.extra&&i(t.extra.match(/\S+/g)||[]),n.join(" ")},_untrackClassesElement:function(t){var i=this;e.each(i.classesElementLookup,(function(n,s){-1!==e.inArray(t.target,s)&&(i.classesElementLookup[n]=e(s.not(t.target).get()))}))},_removeClass:function(e,t,i){return this._toggleClass(e,t,i,!1)},_addClass:function(e,t,i){return this._toggleClass(e,t,i,!0)},_toggleClass:function(e,t,i,n){n="boolean"==typeof n?n:i;var s="string"==typeof e||null===e,a={extra:s?t:i,keys:s?e:t,element:s?this.element:e,add:n};return a.element.toggleClass(this._classes(a),n),this},_on:function(t,i,n){var s,a=this;"boolean"!=typeof t&&(n=i,i=t,t=!1),n?(i=s=e(i),this.bindings=this.bindings.add(i)):(n=i,i=this.element,s=this.widget()),e.each(n,(function(n,r){function o(){return t||!0!==a.options.disabled&&!e(this).hasClass("ui-state-disabled")?("string"==typeof r?a[r]:r).apply(a,arguments):void 0}"string"!=typeof r&&(o.guid=r.guid=r.guid||o.guid||e.guid++);var l=n.match(/^([\w:-]*)\s*(.*)$/),h=l[1]+a.eventNamespace,u=l[2];u?s.on(h,u,o):i.on(h,o)}))},_off:function(t,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.off(i).off(i),this.bindings=e(this.bindings.not(t).get()),this.focusable=e(this.focusable.not(t).get()),this.hoverable=e(this.hoverable.not(t).get())},_delay:function(e,t){var i=this;return setTimeout((function(){return("string"==typeof e?i[e]:e).apply(i,arguments)}),t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(e(t.currentTarget),null,"ui-state-hover")},mouseleave:function(t){this._removeClass(e(t.currentTarget),null,"ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){this._addClass(e(t.currentTarget),null,"ui-state-focus")},focusout:function(t){this._removeClass(e(t.currentTarget),null,"ui-state-focus")}})},_trigger:function(t,i,n){var s,a,r=this.options[t];if(n=n||{},(i=e.Event(i)).type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(s in a)s in i||(i[s]=a[s]);return this.element.trigger(i,n),!(e.isFunction(r)&&!1===r.apply(this.element[0],[i].concat(n))||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},(function(t,i){e.Widget.prototype["_"+t]=function(n,s,a){"string"==typeof s&&(s={effect:s});var r,o=s?!0===s||"number"==typeof s?i:s.effect||i:t;"number"==typeof(s=s||{})&&(s={duration:s}),r=!e.isEmptyObject(s),s.complete=a,s.delay&&n.delay(s.delay),r&&e.effects&&e.effects.effect[o]?n[t](s):o!==t&&n[o]?n[o](s.duration,s.easing,a):n.queue((function(i){e(this)[t](),a&&a.call(n[0]),i()}))}})),e.widget,function(){function t(e,t,i){return[parseFloat(e[0])*(c.test(e[0])?t/100:1),parseFloat(e[1])*(c.test(e[1])?i/100:1)]}function i(t,i){return parseInt(e.css(t,i),10)||0}function n(t){var i=t[0];return 9===i.nodeType?{width:t.width(),height:t.height(),offset:{top:0,left:0}}:e.isWindow(i)?{width:t.width(),height:t.height(),offset:{top:t.scrollTop(),left:t.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:t.outerWidth(),height:t.outerHeight(),offset:t.offset()}}var s,a=Math.max,r=Math.abs,o=/left|center|right/,l=/top|center|bottom/,h=/[\+\-]\d+(\.[\d]+)?%?/,u=/^\w+/,c=/%$/,d=e.fn.position;e.position={scrollbarWidth:function(){if(void 0!==s)return s;var t,i,n=e("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),a=n.children()[0];return e("body").append(n),t=a.offsetWidth,n.css("overflow","scroll"),t===(i=a.offsetWidth)&&(i=n[0].clientWidth),n.remove(),s=t-i},getScrollInfo:function(t){var i=t.isWindow||t.isDocument?"":t.element.css("overflow-x"),n=t.isWindow||t.isDocument?"":t.element.css("overflow-y"),s="scroll"===i||"auto"===i&&t.width<t.element[0].scrollWidth;return{width:"scroll"===n||"auto"===n&&t.height<t.element[0].scrollHeight?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var i=e(t||window),n=e.isWindow(i[0]),s=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:n,isDocument:s,offset:n||s?{left:0,top:0}:e(t).offset(),scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},e.fn.position=function(s){if(!s||!s.of)return d.apply(this,arguments);s=e.extend({},s);var c,f,p,m,g,v,_=e(s.of),y=e.position.getWithinInfo(s.within),b=e.position.getScrollInfo(y),w=(s.collision||"flip").split(" "),k={};return v=n(_),_[0].preventDefault&&(s.at="left top"),f=v.width,p=v.height,m=v.offset,g=e.extend({},m),e.each(["my","at"],(function(){var e,t,i=(s[this]||"").split(" ");1===i.length&&(i=o.test(i[0])?i.concat(["center"]):l.test(i[0])?["center"].concat(i):["center","center"]),i[0]=o.test(i[0])?i[0]:"center",i[1]=l.test(i[1])?i[1]:"center",e=h.exec(i[0]),t=h.exec(i[1]),k[this]=[e?e[0]:0,t?t[0]:0],s[this]=[u.exec(i[0])[0],u.exec(i[1])[0]]})),1===w.length&&(w[1]=w[0]),"right"===s.at[0]?g.left+=f:"center"===s.at[0]&&(g.left+=f/2),"bottom"===s.at[1]?g.top+=p:"center"===s.at[1]&&(g.top+=p/2),c=t(k.at,f,p),g.left+=c[0],g.top+=c[1],this.each((function(){var n,o,l=e(this),h=l.outerWidth(),u=l.outerHeight(),d=i(this,"marginLeft"),v=i(this,"marginTop"),D=h+d+i(this,"marginRight")+b.width,x=u+v+i(this,"marginBottom")+b.height,C=e.extend({},g),M=t(k.my,l.outerWidth(),l.outerHeight());"right"===s.my[0]?C.left-=h:"center"===s.my[0]&&(C.left-=h/2),"bottom"===s.my[1]?C.top-=u:"center"===s.my[1]&&(C.top-=u/2),C.left+=M[0],C.top+=M[1],n={marginLeft:d,marginTop:v},e.each(["left","top"],(function(t,i){e.ui.position[w[t]]&&e.ui.position[w[t]][i](C,{targetWidth:f,targetHeight:p,elemWidth:h,elemHeight:u,collisionPosition:n,collisionWidth:D,collisionHeight:x,offset:[c[0]+M[0],c[1]+M[1]],my:s.my,at:s.at,within:y,elem:l})})),s.using&&(o=function(e){var t=m.left-C.left,i=t+f-h,n=m.top-C.top,o=n+p-u,c={target:{element:_,left:m.left,top:m.top,width:f,height:p},element:{element:l,left:C.left,top:C.top,width:h,height:u},horizontal:0>i?"left":t>0?"right":"center",vertical:0>o?"top":n>0?"bottom":"middle"};h>f&&f>r(t+i)&&(c.horizontal="center"),u>p&&p>r(n+o)&&(c.vertical="middle"),c.important=a(r(t),r(i))>a(r(n),r(o))?"horizontal":"vertical",s.using.call(this,e,c)}),l.offset(e.extend(C,{using:o}))}))},e.ui.position={fit:{left:function(e,t){var i,n=t.within,s=n.isWindow?n.scrollLeft:n.offset.left,r=n.width,o=e.left-t.collisionPosition.marginLeft,l=s-o,h=o+t.collisionWidth-r-s;t.collisionWidth>r?l>0&&0>=h?(i=e.left+l+t.collisionWidth-r-s,e.left+=l-i):e.left=h>0&&0>=l?s:l>h?s+r-t.collisionWidth:s:l>0?e.left+=l:h>0?e.left-=h:e.left=a(e.left-o,e.left)},top:function(e,t){var i,n=t.within,s=n.isWindow?n.scrollTop:n.offset.top,r=t.within.height,o=e.top-t.collisionPosition.marginTop,l=s-o,h=o+t.collisionHeight-r-s;t.collisionHeight>r?l>0&&0>=h?(i=e.top+l+t.collisionHeight-r-s,e.top+=l-i):e.top=h>0&&0>=l?s:l>h?s+r-t.collisionHeight:s:l>0?e.top+=l:h>0?e.top-=h:e.top=a(e.top-o,e.top)}},flip:{left:function(e,t){var i,n,s=t.within,a=s.offset.left+s.scrollLeft,o=s.width,l=s.isWindow?s.scrollLeft:s.offset.left,h=e.left-t.collisionPosition.marginLeft,u=h-l,c=h+t.collisionWidth-o-l,d="left"===t.my[0]?-t.elemWidth:"right"===t.my[0]?t.elemWidth:0,f="left"===t.at[0]?t.targetWidth:"right"===t.at[0]?-t.targetWidth:0,p=-2*t.offset[0];0>u?(0>(i=e.left+d+f+p+t.collisionWidth-o-a)||r(u)>i)&&(e.left+=d+f+p):c>0&&((n=e.left-t.collisionPosition.marginLeft+d+f+p-l)>0||c>r(n))&&(e.left+=d+f+p)},top:function(e,t){var i,n,s=t.within,a=s.offset.top+s.scrollTop,o=s.height,l=s.isWindow?s.scrollTop:s.offset.top,h=e.top-t.collisionPosition.marginTop,u=h-l,c=h+t.collisionHeight-o-l,d="top"===t.my[1]?-t.elemHeight:"bottom"===t.my[1]?t.elemHeight:0,f="top"===t.at[1]?t.targetHeight:"bottom"===t.at[1]?-t.targetHeight:0,p=-2*t.offset[1];0>u?(0>(n=e.top+d+f+p+t.collisionHeight-o-a)||r(u)>n)&&(e.top+=d+f+p):c>0&&((i=e.top-t.collisionPosition.marginTop+d+f+p-l)>0||c>r(i))&&(e.top+=d+f+p)}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}}}(),e.ui.position,e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo((function(t){return function(i){return!!e.data(i,t)}})):function(t,i,n){return!!e.data(t,n[3])}}),e.fn.extend({disableSelection:function(){var e="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.on(e+".ui-disableSelection",(function(e){e.preventDefault()}))}}(),enableSelection:function(){return this.off(".ui-disableSelection")}}),e.ui.focusable=function(t,i){var n,s,a,r,o,l=t.nodeName.toLowerCase();return"area"===l?(s=(n=t.parentNode).name,!(!t.href||!s||"map"!==n.nodeName.toLowerCase())&&(a=e("img[usemap='#"+s+"']")).length>0&&a.is(":visible")):(/^(input|select|textarea|button|object)$/.test(l)?(r=!t.disabled)&&(o=e(t).closest("fieldset")[0])&&(r=!o.disabled):r="a"===l&&t.href||i,r&&e(t).is(":visible")&&function(e){for(var t=e.css("visibility");"inherit"===t;)t=(e=e.parent()).css("visibility");return"hidden"!==t}(e(t)))},e.extend(e.expr[":"],{focusable:function(t){return e.ui.focusable(t,null!=e.attr(t,"tabindex"))}}),e.ui.focusable,e.fn.form=function(){return"string"==typeof this[0].form?this.closest("form"):e(this[0].form)},e.ui.formResetMixin={_formResetHandler:function(){var t=e(this);setTimeout((function(){var i=t.data("ui-form-reset-instances");e.each(i,(function(){this.refresh()}))}))},_bindFormResetHandler:function(){if(this.form=this.element.form(),this.form.length){var e=this.form.data("ui-form-reset-instances")||[];e.length||this.form.on("reset.ui-form-reset",this._formResetHandler),e.push(this),this.form.data("ui-form-reset-instances",e)}},_unbindFormResetHandler:function(){if(this.form.length){var t=this.form.data("ui-form-reset-instances");t.splice(e.inArray(this,t),1),t.length?this.form.data("ui-form-reset-instances",t):this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")}}},"1.7"===e.fn.jquery.substring(0,3)&&(e.each(["Width","Height"],(function(t,i){function n(t,i,n,a){return e.each(s,(function(){i-=parseFloat(e.css(t,"padding"+this))||0,n&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),a&&(i-=parseFloat(e.css(t,"margin"+this))||0)})),i}var s="Width"===i?["Left","Right"]:["Top","Bottom"],a=i.toLowerCase(),r={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+i]=function(t){return void 0===t?r["inner"+i].call(this):this.each((function(){e(this).css(a,n(this,t)+"px")}))},e.fn["outer"+i]=function(t,s){return"number"!=typeof t?r["outer"+i].call(this,t):this.each((function(){e(this).css(a,n(this,t,!0,s)+"px")}))}})),e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},e.ui.escapeSelector=function(){var e=/([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;return function(t){return t.replace(e,"\\$1")}}(),e.fn.labels=function(){var t,i,n,s,a;return this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(s=this.eq(0).parents("label"),(n=this.attr("id"))&&(a=(t=this.eq(0).parents().last()).add(t.length?t.siblings():this.siblings()),i="label[for='"+e.ui.escapeSelector(n)+"']",s=s.add(a.find(i).addBack(i))),this.pushStack(s))},e.fn.scrollParent=function(t){var i=this.css("position"),n="absolute"===i,s=t?/(auto|scroll|hidden)/:/(auto|scroll)/,a=this.parents().filter((function(){var t=e(this);return(!n||"static"!==t.css("position"))&&s.test(t.css("overflow")+t.css("overflow-y")+t.css("overflow-x"))})).eq(0);return"fixed"!==i&&a.length?a:e(this[0].ownerDocument||document)},e.extend(e.expr[":"],{tabbable:function(t){var i=e.attr(t,"tabindex"),n=null!=i;return(!n||i>=0)&&e.ui.focusable(t,n)}}),e.fn.extend({uniqueId:function(){var e=0;return function(){return this.each((function(){this.id||(this.id="ui-id-"+ ++e)}))}}(),removeUniqueId:function(){return this.each((function(){/^ui-id-\d+$/.test(this.id)&&e(this).removeAttr("id")}))}}),e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());var l=!1;e(document).on("mouseup",(function(){l=!1})),e.widget("ui.mouse",{version:"1.12.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.on("mousedown."+this.widgetName,(function(e){return t._mouseDown(e)})).on("click."+this.widgetName,(function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0})),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(!l){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var i=this,n=1===t.which,s=!("string"!=typeof this.options.cancel||!t.target.nodeName)&&e(t.target).closest(this.options.cancel).length;return!(n&&!s&&this._mouseCapture(t)&&(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout((function(){i.mouseDelayMet=!0}),this.options.delay)),this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=!1!==this._mouseStart(t),!this._mouseStarted)?(t.preventDefault(),0):(!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return i._mouseMove(e)},this._mouseUpDelegate=function(e){return i._mouseUp(e)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),l=!0,0)))}},_mouseMove:function(t){if(this._mouseMoved){if(e.ui.ie&&(!document.documentMode||9>document.documentMode)&&!t.button)return this._mouseUp(t);if(!t.which)if(t.originalEvent.altKey||t.originalEvent.ctrlKey||t.originalEvent.metaKey||t.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(t)}return(t.which||t.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=!1!==this._mouseStart(this._mouseDownEvent,t),this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,l=!1,t.preventDefault()},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),e.ui.plugin={add:function(t,i,n){var s,a=e.ui[t].prototype;for(s in n)a.plugins[s]=a.plugins[s]||[],a.plugins[s].push([i,n[s]])},call:function(e,t,i,n){var s,a=e.plugins[t];if(a&&(n||e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType))for(s=0;a.length>s;s++)e.options[a[s][0]]&&a[s][1].apply(e.element,i)}},e.ui.safeActiveElement=function(e){var t;try{t=e.activeElement}catch(i){t=e.body}return t||(t=e.body),t.nodeName||(t=e.body),t},e.ui.safeBlur=function(t){t&&"body"!==t.nodeName.toLowerCase()&&e(t).trigger("blur")},e.widget("ui.draggable",e.ui.mouse,{version:"1.12.1",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass("ui-draggable"),this._setHandleClassName(),this._mouseInit()},_setOption:function(e,t){this._super(e,t),"handle"===e&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?void(this.destroyOnClear=!0):(this._removeHandleClassName(),void this._mouseDestroy())},_mouseCapture:function(t){var i=this.options;return!(this.helper||i.disabled||e(t.target).closest(".ui-resizable-handle").length>0||(this.handle=this._getHandle(t),!this.handle||(this._blurActiveElement(t),this._blockFrames(!0===i.iframeFix?"iframe":i.iframeFix),0)))},_blockFrames:function(t){this.iframeBlocks=this.document.find(t).map((function(){var t=e(this);return e("<div>").css("position","absolute").appendTo(t.parent()).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).offset(t.offset())[0]}))},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(t){var i=e.ui.safeActiveElement(this.document[0]);e(t.target).closest(i).length||e.ui.safeBlur(i)},_mouseStart:function(t){var i=this.options;return this.helper=this._createHelper(t),this._addClass(this.helper,"ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter((function(){return"fixed"===e(this).css("position")})).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(t),this.originalPosition=this.position=this._generatePosition(t,!1),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),!1===this._trigger("start",t)?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_refreshOffsets:function(e){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:e.pageX-this.offset.left,top:e.pageY-this.offset.top}},_mouseDrag:function(t,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(t,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var n=this._uiHash();if(!1===this._trigger("drag",t,n))return this._mouseUp(new e.Event("mouseup",t)),!1;this.position=n.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var i=this,n=!1;return e.ui.ddmanager&&!this.options.dropBehaviour&&(n=e.ui.ddmanager.drop(this,t)),this.dropped&&(n=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!n||"valid"===this.options.revert&&n||!0===this.options.revert||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)?e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),(function(){!1!==i._trigger("stop",t)&&i._clear()})):!1!==this._trigger("stop",t)&&this._clear(),!1},_mouseUp:function(t){return this._unblockFrames(),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),this.handleElement.is(t.target)&&this.element.trigger("focus"),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp(new e.Event("mouseup",{target:this.element[0]})):this._clear(),this},_getHandle:function(t){return!this.options.handle||!!e(t.target).closest(this.element.find(this.options.handle)).length},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,"ui-draggable-handle")},_removeHandleClassName:function(){this._removeClass(this.handleElement,"ui-draggable-handle")},_createHelper:function(t){var i=this.options,n=e.isFunction(i.helper),s=n?e(i.helper.apply(this.element[0],[t])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),n&&s[0]===this.element[0]&&this._setPositionRelative(),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_isRootNode:function(e){return/(html|body)/i.test(e.tagName)||e===this.document[0]},_getParentOffset:function(){var t=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var e=this.element.position(),t=this._isRootNode(this.scrollParent[0]);return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+(t?0:this.scrollParent.scrollTop()),left:e.left-(parseInt(this.helper.css("left"),10)||0)+(t?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,i,n,s=this.options,a=this.document[0];return this.relativeContainer=null,s.containment?"window"===s.containment?void(this.containment=[e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,e(window).scrollLeft()+e(window).width()-this.helperProportions.width-this.margins.left,e(window).scrollTop()+(e(window).height()||a.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):"document"===s.containment?void(this.containment=[0,0,e(a).width()-this.helperProportions.width-this.margins.left,(e(a).height()||a.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):s.containment.constructor===Array?void(this.containment=s.containment):("parent"===s.containment&&(s.containment=this.helper[0].parentNode),void((n=(i=e(s.containment))[0])&&(t=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(t?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(t?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i))):void(this.containment=null)},_convertPositionTo:function(e,t){t||(t=this.position);var i="absolute"===e?1:-1,n=this._isRootNode(this.scrollParent[0]);return{top:t.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:n?0:this.offset.scroll.top)*i,left:t.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:n?0:this.offset.scroll.left)*i}},_generatePosition:function(e,t){var i,n,s,a,r=this.options,o=this._isRootNode(this.scrollParent[0]),l=e.pageX,h=e.pageY;return o&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),t&&(this.containment&&(this.relativeContainer?(n=this.relativeContainer.offset(),i=[this.containment[0]+n.left,this.containment[1]+n.top,this.containment[2]+n.left,this.containment[3]+n.top]):i=this.containment,e.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),e.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),e.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),e.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),r.grid&&(s=r.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/r.grid[1])*r.grid[1]:this.originalPageY,h=i?s-this.offset.click.top>=i[1]||s-this.offset.click.top>i[3]?s:s-this.offset.click.top>=i[1]?s-r.grid[1]:s+r.grid[1]:s,a=r.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/r.grid[0])*r.grid[0]:this.originalPageX,l=i?a-this.offset.click.left>=i[0]||a-this.offset.click.left>i[2]?a:a-this.offset.click.left>=i[0]?a-r.grid[0]:a+r.grid[0]:a),"y"===r.axis&&(l=this.originalPageX),"x"===r.axis&&(h=this.originalPageY)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:o?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:o?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,"ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(t,i,n){return n=n||this._uiHash(),e.ui.plugin.call(this,t,[i,n,this],!0),/^(drag|start|stop)/.test(t)&&(this.positionAbs=this._convertPositionTo("absolute"),n.offset=this.positionAbs),e.Widget.prototype._trigger.call(this,t,i,n)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,i,n){var s=e.extend({},i,{item:n.element});n.sortables=[],e(n.options.connectToSortable).each((function(){var i=e(this).sortable("instance");i&&!i.options.disabled&&(n.sortables.push(i),i.refreshPositions(),i._trigger("activate",t,s))}))},stop:function(t,i,n){var s=e.extend({},i,{item:n.element});n.cancelHelperRemoval=!1,e.each(n.sortables,(function(){var e=this;e.isOver?(e.isOver=0,n.cancelHelperRemoval=!0,e.cancelHelperRemoval=!1,e._storedCSS={position:e.placeholder.css("position"),top:e.placeholder.css("top"),left:e.placeholder.css("left")},e._mouseStop(t),e.options.helper=e.options._helper):(e.cancelHelperRemoval=!0,e._trigger("deactivate",t,s))}))},drag:function(t,i,n){e.each(n.sortables,(function(){var s=!1,a=this;a.positionAbs=n.positionAbs,a.helperProportions=n.helperProportions,a.offset.click=n.offset.click,a._intersectsWith(a.containerCache)&&(s=!0,e.each(n.sortables,(function(){return this.positionAbs=n.positionAbs,this.helperProportions=n.helperProportions,this.offset.click=n.offset.click,this!==a&&this._intersectsWith(this.containerCache)&&e.contains(a.element[0],this.element[0])&&(s=!1),s}))),s?(a.isOver||(a.isOver=1,n._parent=i.helper.parent(),a.currentItem=i.helper.appendTo(a.element).data("ui-sortable-item",!0),a.options._helper=a.options.helper,a.options.helper=function(){return i.helper[0]},t.target=a.currentItem[0],a._mouseCapture(t,!0),a._mouseStart(t,!0,!0),a.offset.click.top=n.offset.click.top,a.offset.click.left=n.offset.click.left,a.offset.parent.left-=n.offset.parent.left-a.offset.parent.left,a.offset.parent.top-=n.offset.parent.top-a.offset.parent.top,n._trigger("toSortable",t),n.dropped=a.element,e.each(n.sortables,(function(){this.refreshPositions()})),n.currentItem=n.element,a.fromOutside=n),a.currentItem&&(a._mouseDrag(t),i.position=a.position)):a.isOver&&(a.isOver=0,a.cancelHelperRemoval=!0,a.options._revert=a.options.revert,a.options.revert=!1,a._trigger("out",t,a._uiHash(a)),a._mouseStop(t,!0),a.options.revert=a.options._revert,a.options.helper=a.options._helper,a.placeholder&&a.placeholder.remove(),i.helper.appendTo(n._parent),n._refreshOffsets(t),i.position=n._generatePosition(t,!0),n._trigger("fromSortable",t),n.dropped=!1,e.each(n.sortables,(function(){this.refreshPositions()})))}))}}),e.ui.plugin.add("draggable","cursor",{start:function(t,i,n){var s=e("body"),a=n.options;s.css("cursor")&&(a._cursor=s.css("cursor")),s.css("cursor",a.cursor)},stop:function(t,i,n){var s=n.options;s._cursor&&e("body").css("cursor",s._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,i,n){var s=e(i.helper),a=n.options;s.css("opacity")&&(a._opacity=s.css("opacity")),s.css("opacity",a.opacity)},stop:function(t,i,n){var s=n.options;s._opacity&&e(i.helper).css("opacity",s._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(e,t,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(t,i,n){var s=n.options,a=!1,r=n.scrollParentNotHidden[0],o=n.document[0];r!==o&&"HTML"!==r.tagName?(s.axis&&"x"===s.axis||(n.overflowOffset.top+r.offsetHeight-t.pageY<s.scrollSensitivity?r.scrollTop=a=r.scrollTop+s.scrollSpeed:t.pageY-n.overflowOffset.top<s.scrollSensitivity&&(r.scrollTop=a=r.scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(n.overflowOffset.left+r.offsetWidth-t.pageX<s.scrollSensitivity?r.scrollLeft=a=r.scrollLeft+s.scrollSpeed:t.pageX-n.overflowOffset.left<s.scrollSensitivity&&(r.scrollLeft=a=r.scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(t.pageY-e(o).scrollTop()<s.scrollSensitivity?a=e(o).scrollTop(e(o).scrollTop()-s.scrollSpeed):e(window).height()-(t.pageY-e(o).scrollTop())<s.scrollSensitivity&&(a=e(o).scrollTop(e(o).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(t.pageX-e(o).scrollLeft()<s.scrollSensitivity?a=e(o).scrollLeft(e(o).scrollLeft()-s.scrollSpeed):e(window).width()-(t.pageX-e(o).scrollLeft())<s.scrollSensitivity&&(a=e(o).scrollLeft(e(o).scrollLeft()+s.scrollSpeed)))),!1!==a&&e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(n,t)}}),e.ui.plugin.add("draggable","snap",{start:function(t,i,n){var s=n.options;n.snapElements=[],e(s.snap.constructor!==String?s.snap.items||":data(ui-draggable)":s.snap).each((function(){var t=e(this),i=t.offset();this!==n.element[0]&&n.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:i.top,left:i.left})}))},drag:function(t,i,n){var s,a,r,o,l,h,u,c,d,f,p=n.options,m=p.snapTolerance,g=i.offset.left,v=g+n.helperProportions.width,_=i.offset.top,y=_+n.helperProportions.height;for(d=n.snapElements.length-1;d>=0;d--)h=(l=n.snapElements[d].left-n.margins.left)+n.snapElements[d].width,c=(u=n.snapElements[d].top-n.margins.top)+n.snapElements[d].height,l-m>v||g>h+m||u-m>y||_>c+m||!e.contains(n.snapElements[d].item.ownerDocument,n.snapElements[d].item)?(n.snapElements[d].snapping&&n.options.snap.release&&n.options.snap.release.call(n.element,t,e.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=!1):("inner"!==p.snapMode&&(s=m>=Math.abs(u-y),a=m>=Math.abs(c-_),r=m>=Math.abs(l-v),o=m>=Math.abs(h-g),s&&(i.position.top=n._convertPositionTo("relative",{top:u-n.helperProportions.height,left:0}).top),a&&(i.position.top=n._convertPositionTo("relative",{top:c,left:0}).top),r&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l-n.helperProportions.width}).left),o&&(i.position.left=n._convertPositionTo("relative",{top:0,left:h}).left)),f=s||a||r||o,"outer"!==p.snapMode&&(s=m>=Math.abs(u-_),a=m>=Math.abs(c-y),r=m>=Math.abs(l-g),o=m>=Math.abs(h-v),s&&(i.position.top=n._convertPositionTo("relative",{top:u,left:0}).top),a&&(i.position.top=n._convertPositionTo("relative",{top:c-n.helperProportions.height,left:0}).top),r&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l}).left),o&&(i.position.left=n._convertPositionTo("relative",{top:0,left:h-n.helperProportions.width}).left)),!n.snapElements[d].snapping&&(s||a||r||o||f)&&n.options.snap.snap&&n.options.snap.snap.call(n.element,t,e.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=s||a||r||o||f)}}),e.ui.plugin.add("draggable","stack",{start:function(t,i,n){var s,a=n.options,r=e.makeArray(e(a.stack)).sort((function(t,i){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(i).css("zIndex"),10)||0)}));r.length&&(s=parseInt(e(r[0]).css("zIndex"),10)||0,e(r).each((function(t){e(this).css("zIndex",s+t)})),this.css("zIndex",s+r.length))}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,i,n){var s=e(i.helper),a=n.options;s.css("zIndex")&&(a._zIndex=s.css("zIndex")),s.css("zIndex",a.zIndex)},stop:function(t,i,n){var s=n.options;s._zIndex&&e(i.helper).css("zIndex",s._zIndex)}}),e.ui.draggable,e.widget("ui.droppable",{version:"1.12.1",widgetEventPrefix:"drop",options:{accept:"*",addClasses:!0,greedy:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var t,i=this.options,n=i.accept;this.isover=!1,this.isout=!0,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions=function(){return arguments.length?void(t=arguments[0]):t||(t={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight})},this._addToManager(i.scope),i.addClasses&&this._addClass("ui-droppable")},_addToManager:function(t){e.ui.ddmanager.droppables[t]=e.ui.ddmanager.droppables[t]||[],e.ui.ddmanager.droppables[t].push(this)},_splice:function(e){for(var t=0;e.length>t;t++)e[t]===this&&e.splice(t,1)},_destroy:function(){var t=e.ui.ddmanager.droppables[this.options.scope];this._splice(t)},_setOption:function(t,i){if("accept"===t)this.accept=e.isFunction(i)?i:function(e){return e.is(i)};else if("scope"===t){var n=e.ui.ddmanager.droppables[this.options.scope];this._splice(n),this._addToManager(i)}this._super(t,i)},_activate:function(t){var i=e.ui.ddmanager.current;this._addActiveClass(),i&&this._trigger("activate",t,this.ui(i))},_deactivate:function(t){var i=e.ui.ddmanager.current;this._removeActiveClass(),i&&this._trigger("deactivate",t,this.ui(i))},_over:function(t){var i=e.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._addHoverClass(),this._trigger("over",t,this.ui(i)))},_out:function(t){var i=e.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeHoverClass(),this._trigger("out",t,this.ui(i)))},_drop:function(t,i){var n=i||e.ui.ddmanager.current,s=!1;return!(!n||(n.currentItem||n.element)[0]===this.element[0])&&(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each((function(){var i=e(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===n.options.scope&&i.accept.call(i.element[0],n.currentItem||n.element)&&h(n,e.extend(i,{offset:i.element.offset()}),i.options.tolerance,t)?(s=!0,!1):void 0})),!s&&!!this.accept.call(this.element[0],n.currentItem||n.element)&&(this._removeActiveClass(),this._removeHoverClass(),this._trigger("drop",t,this.ui(n)),this.element))},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}},_addHoverClass:function(){this._addClass("ui-droppable-hover")},_removeHoverClass:function(){this._removeClass("ui-droppable-hover")},_addActiveClass:function(){this._addClass("ui-droppable-active")},_removeActiveClass:function(){this._removeClass("ui-droppable-active")}});var h=e.ui.intersect=function(){function e(e,t,i){return e>=t&&t+i>e}return function(t,i,n,s){if(!i.offset)return!1;var a=(t.positionAbs||t.position.absolute).left+t.margins.left,r=(t.positionAbs||t.position.absolute).top+t.margins.top,o=a+t.helperProportions.width,l=r+t.helperProportions.height,h=i.offset.left,u=i.offset.top,c=h+i.proportions().width,d=u+i.proportions().height;switch(n){case"fit":return a>=h&&c>=o&&r>=u&&d>=l;case"intersect":return a+t.helperProportions.width/2>h&&c>o-t.helperProportions.width/2&&r+t.helperProportions.height/2>u&&d>l-t.helperProportions.height/2;case"pointer":return e(s.pageY,u,i.proportions().height)&&e(s.pageX,h,i.proportions().width);case"touch":return(r>=u&&d>=r||l>=u&&d>=l||u>r&&l>d)&&(a>=h&&c>=a||o>=h&&c>=o||h>a&&o>c);default:return!1}}}();e.ui.ddmanager={current:null,droppables:{default:[]},prepareOffsets:function(t,i){var n,s,a=e.ui.ddmanager.droppables[t.options.scope]||[],r=i?i.type:null,o=(t.currentItem||t.element).find(":data(ui-droppable)").addBack();e:for(n=0;a.length>n;n++)if(!(a[n].options.disabled||t&&!a[n].accept.call(a[n].element[0],t.currentItem||t.element))){for(s=0;o.length>s;s++)if(o[s]===a[n].element[0]){a[n].proportions().height=0;continue e}a[n].visible="none"!==a[n].element.css("display"),a[n].visible&&("mousedown"===r&&a[n]._activate.call(a[n],i),a[n].offset=a[n].element.offset(),a[n].proportions({width:a[n].element[0].offsetWidth,height:a[n].element[0].offsetHeight}))}},drop:function(t,i){var n=!1;return e.each((e.ui.ddmanager.droppables[t.options.scope]||[]).slice(),(function(){this.options&&(!this.options.disabled&&this.visible&&h(t,this,this.options.tolerance,i)&&(n=this._drop.call(this,i)||n),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))})),n},dragStart:function(t,i){t.element.parentsUntil("body").on("scroll.droppable",(function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,i)}))},drag:function(t,i){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,i),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],(function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var n,s,a,r=h(t,this,this.options.tolerance,i),o=!r&&this.isover?"isout":r&&!this.isover?"isover":null;o&&(this.options.greedy&&(s=this.options.scope,(a=this.element.parents(":data(ui-droppable)").filter((function(){return e(this).droppable("instance").options.scope===s}))).length&&((n=e(a[0]).droppable("instance")).greedyChild="isover"===o)),n&&"isover"===o&&(n.isover=!1,n.isout=!0,n._out.call(n,i)),this[o]=!0,this["isout"===o?"isover":"isout"]=!1,this["isover"===o?"_over":"_out"].call(this,i),n&&"isout"===o&&(n.isout=!1,n.isover=!0,n._over.call(n,i)))}}))},dragStop:function(t,i){t.element.parentsUntil("body").off("scroll.droppable"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,i)}},!1!==e.uiBackCompat&&e.widget("ui.droppable",e.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass)},_removeActiveClass:function(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass)},_addHoverClass:function(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass)},_removeHoverClass:function(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass)}}),e.ui.droppable,e.widget("ui.resizable",e.ui.mouse,{version:"1.12.1",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,classes:{"ui-resizable-se":"ui-icon ui-icon-gripsmall-diagonal-se"},containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(e){return parseFloat(e)||0},_isNumber:function(e){return!isNaN(parseFloat(e))},_hasScroll:function(t,i){if("hidden"===e(t).css("overflow"))return!1;var n=i&&"left"===i?"scrollLeft":"scrollTop",s=!1;return t[n]>0||(t[n]=1,s=t[n]>0,t[n]=0,s)},_create:function(){var t,i=this.options,n=this;this._addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,t={marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom"),marginLeft:this.originalElement.css("marginLeft")},this.element.css(t),this.originalElement.css("margin",0),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css(t),this._proportionallyResize()),this._setupHandles(),i.autoHide&&e(this.element).on("mouseenter",(function(){i.disabled||(n._removeClass("ui-resizable-autohide"),n._handles.show())})).on("mouseleave",(function(){i.disabled||n.resizing||(n._addClass("ui-resizable-autohide"),n._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t,i=function(t){e(t).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),t=this.element,this.originalElement.css({position:t.css("position"),width:t.outerWidth(),height:t.outerHeight(),top:t.css("top"),left:t.css("left")}).insertAfter(t),t.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_setOption:function(e,t){switch(this._super(e,t),e){case"handles":this._removeHandles(),this._setupHandles()}},_setupHandles:function(){var t,i,n,s,a,r=this.options,o=this;if(this.handles=r.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=e(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),n=this.handles.split(","),this.handles={},i=0;n.length>i;i++)s="ui-resizable-"+(t=e.trim(n[i])),a=e("<div>"),this._addClass(a,"ui-resizable-handle "+s),a.css({zIndex:r.zIndex}),this.handles[t]=".ui-resizable-"+t,this.element.append(a);this._renderAxis=function(t){var i,n,s,a;for(i in t=t||this.element,this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=e(this.handles[i]),this._on(this.handles[i],{mousedown:o._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(n=e(this.handles[i],this.element),a=/sw|ne|nw|se|n|s/.test(i)?n.outerHeight():n.outerWidth(),s=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),t.css(s,a),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.on("mouseover",(function(){o.resizing||(this.className&&(a=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),o.axis=a&&a[1]?a[1]:"se")})),r.autoHide&&(this._handles.hide(),this._addClass("ui-resizable-autohide"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(t){var i,n,s=!1;for(i in this.handles)((n=e(this.handles[i])[0])===t.target||e.contains(n,t.target))&&(s=!0);return!this.options.disabled&&s},_mouseStart:function(t){var i,n,s,a=this.options,r=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),n=this._num(this.helper.css("top")),a.containment&&(i+=e(a.containment).scrollLeft()||0,n+=e(a.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:r.width(),height:r.height()},this.originalSize=this._helper?{width:r.outerWidth(),height:r.outerHeight()}:{width:r.width(),height:r.height()},this.sizeDiff={width:r.outerWidth()-r.width(),height:r.outerHeight()-r.height()},this.originalPosition={left:i,top:n},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio="number"==typeof a.aspectRatio?a.aspectRatio:this.originalSize.width/this.originalSize.height||1,s=e(".ui-resizable-"+this.axis).css("cursor"),e("body").css("cursor","auto"===s?this.axis+"-resize":s),this._addClass("ui-resizable-resizing"),this._propagate("start",t),!0},_mouseDrag:function(t){var i,n,s=this.originalMousePosition,a=this.axis,r=t.pageX-s.left||0,o=t.pageY-s.top||0,l=this._change[a];return this._updatePrevProperties(),!!l&&(i=l.apply(this,[t,r,o]),this._updateVirtualBoundaries(t.shiftKey),(this._aspectRatio||t.shiftKey)&&(i=this._updateRatio(i,t)),i=this._respectSize(i,t),this._updateCache(i),this._propagate("resize",t),n=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),e.isEmptyObject(n)||(this._updatePrevProperties(),this._trigger("resize",t,this.ui()),this._applyChanges()),!1)},_mouseStop:function(t){this.resizing=!1;var i,n,s,a,r,o,l,h=this.options,u=this;return this._helper&&(s=(n=(i=this._proportionallyResizeElements).length&&/textarea/i.test(i[0].nodeName))&&this._hasScroll(i[0],"left")?0:u.sizeDiff.height,a=n?0:u.sizeDiff.width,r={width:u.helper.width()-a,height:u.helper.height()-s},o=parseFloat(u.element.css("left"))+(u.position.left-u.originalPosition.left)||null,l=parseFloat(u.element.css("top"))+(u.position.top-u.originalPosition.top)||null,h.animate||this.element.css(e.extend(r,{top:l,left:o})),u.helper.height(u.size.height),u.helper.width(u.size.width),this._helper&&!h.animate&&this._proportionallyResize()),e("body").css("cursor","auto"),this._removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var e={};return this.position.top!==this.prevPosition.top&&(e.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(e.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(e.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(e.height=this.size.height+"px"),this.helper.css(e),e},_updateVirtualBoundaries:function(e){var t,i,n,s,a,r=this.options;a={minWidth:this._isNumber(r.minWidth)?r.minWidth:0,maxWidth:this._isNumber(r.maxWidth)?r.maxWidth:1/0,minHeight:this._isNumber(r.minHeight)?r.minHeight:0,maxHeight:this._isNumber(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||e)&&(t=a.minHeight*this.aspectRatio,n=a.minWidth/this.aspectRatio,i=a.maxHeight*this.aspectRatio,s=a.maxWidth/this.aspectRatio,t>a.minWidth&&(a.minWidth=t),n>a.minHeight&&(a.minHeight=n),a.maxWidth>i&&(a.maxWidth=i),a.maxHeight>s&&(a.maxHeight=s)),this._vBoundaries=a},_updateCache:function(e){this.offset=this.helper.offset(),this._isNumber(e.left)&&(this.position.left=e.left),this._isNumber(e.top)&&(this.position.top=e.top),this._isNumber(e.height)&&(this.size.height=e.height),this._isNumber(e.width)&&(this.size.width=e.width)},_updateRatio:function(e){var t=this.position,i=this.size,n=this.axis;return this._isNumber(e.height)?e.width=e.height*this.aspectRatio:this._isNumber(e.width)&&(e.height=e.width/this.aspectRatio),"sw"===n&&(e.left=t.left+(i.width-e.width),e.top=null),"nw"===n&&(e.top=t.top+(i.height-e.height),e.left=t.left+(i.width-e.width)),e},_respectSize:function(e){var t=this._vBoundaries,i=this.axis,n=this._isNumber(e.width)&&t.maxWidth&&t.maxWidth<e.width,s=this._isNumber(e.height)&&t.maxHeight&&t.maxHeight<e.height,a=this._isNumber(e.width)&&t.minWidth&&t.minWidth>e.width,r=this._isNumber(e.height)&&t.minHeight&&t.minHeight>e.height,o=this.originalPosition.left+this.originalSize.width,l=this.originalPosition.top+this.originalSize.height,h=/sw|nw|w/.test(i),u=/nw|ne|n/.test(i);return a&&(e.width=t.minWidth),r&&(e.height=t.minHeight),n&&(e.width=t.maxWidth),s&&(e.height=t.maxHeight),a&&h&&(e.left=o-t.minWidth),n&&h&&(e.left=o-t.maxWidth),r&&u&&(e.top=l-t.minHeight),s&&u&&(e.top=l-t.maxHeight),e.width||e.height||e.left||!e.top?e.width||e.height||e.top||!e.left||(e.left=null):e.top=null,e},_getPaddingPlusBorderDimensions:function(e){for(var t=0,i=[],n=[e.css("borderTopWidth"),e.css("borderRightWidth"),e.css("borderBottomWidth"),e.css("borderLeftWidth")],s=[e.css("paddingTop"),e.css("paddingRight"),e.css("paddingBottom"),e.css("paddingLeft")];4>t;t++)i[t]=parseFloat(n[t])||0,i[t]+=parseFloat(s[t])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var e,t=0,i=this.helper||this.element;this._proportionallyResizeElements.length>t;t++)e=this._proportionallyResizeElements[t],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(e)),e.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var t=this.element,i=this.options;this.elementOffset=t.offset(),this._helper?(this.helper=this.helper||e("<div style='overflow:hidden;'></div>"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(e,t){return{width:this.originalSize.width+t}},w:function(e,t){var i=this.originalSize;return{left:this.originalPosition.left+t,width:i.width-t}},n:function(e,t,i){var n=this.originalSize;return{top:this.originalPosition.top+i,height:n.height-i}},s:function(e,t,i){return{height:this.originalSize.height+i}},se:function(t,i,n){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,i,n]))},sw:function(t,i,n){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,i,n]))},ne:function(t,i,n){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,i,n]))},nw:function(t,i,n){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,i,n]))}},_propagate:function(t,i){e.ui.plugin.call(this,t,[i,this.ui()]),"resize"!==t&&this._trigger(t,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","animate",{stop:function(t){var i=e(this).resizable("instance"),n=i.options,s=i._proportionallyResizeElements,a=s.length&&/textarea/i.test(s[0].nodeName),r=a&&i._hasScroll(s[0],"left")?0:i.sizeDiff.height,o=a?0:i.sizeDiff.width,l={width:i.size.width-o,height:i.size.height-r},h=parseFloat(i.element.css("left"))+(i.position.left-i.originalPosition.left)||null,u=parseFloat(i.element.css("top"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(e.extend(l,u&&h?{top:u,left:h}:{}),{duration:n.animateDuration,easing:n.animateEasing,step:function(){var n={width:parseFloat(i.element.css("width")),height:parseFloat(i.element.css("height")),top:parseFloat(i.element.css("top")),left:parseFloat(i.element.css("left"))};s&&s.length&&e(s[0]).css({width:n.width,height:n.height}),i._updateCache(n),i._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(){var t,i,n,s,a,r,o,l=e(this).resizable("instance"),h=l.options,u=l.element,c=h.containment,d=c instanceof e?c.get(0):/parent/.test(c)?u.parent().get(0):c;d&&(l.containerElement=e(d),/document/.test(c)||c===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}):(t=e(d),i=[],e(["Top","Right","Left","Bottom"]).each((function(e,n){i[e]=l._num(t.css("padding"+n))})),l.containerOffset=t.offset(),l.containerPosition=t.position(),l.containerSize={height:t.innerHeight()-i[3],width:t.innerWidth()-i[1]},n=l.containerOffset,s=l.containerSize.height,a=l.containerSize.width,r=l._hasScroll(d,"left")?d.scrollWidth:a,o=l._hasScroll(d)?d.scrollHeight:s,l.parentData={element:d,left:n.left,top:n.top,width:r,height:o}))},resize:function(t){var i,n,s,a,r=e(this).resizable("instance"),o=r.options,l=r.containerOffset,h=r.position,u=r._aspectRatio||t.shiftKey,c={top:0,left:0},d=r.containerElement,f=!0;d[0]!==document&&/static/.test(d.css("position"))&&(c=l),h.left<(r._helper?l.left:0)&&(r.size.width=r.size.width+(r._helper?r.position.left-l.left:r.position.left-c.left),u&&(r.size.height=r.size.width/r.aspectRatio,f=!1),r.position.left=o.helper?l.left:0),h.top<(r._helper?l.top:0)&&(r.size.height=r.size.height+(r._helper?r.position.top-l.top:r.position.top),u&&(r.size.width=r.size.height*r.aspectRatio,f=!1),r.position.top=r._helper?l.top:0),s=r.containerElement.get(0)===r.element.parent().get(0),a=/relative|absolute/.test(r.containerElement.css("position")),s&&a?(r.offset.left=r.parentData.left+r.position.left,r.offset.top=r.parentData.top+r.position.top):(r.offset.left=r.element.offset().left,r.offset.top=r.element.offset().top),i=Math.abs(r.sizeDiff.width+(r._helper?r.offset.left-c.left:r.offset.left-l.left)),n=Math.abs(r.sizeDiff.height+(r._helper?r.offset.top-c.top:r.offset.top-l.top)),i+r.size.width>=r.parentData.width&&(r.size.width=r.parentData.width-i,u&&(r.size.height=r.size.width/r.aspectRatio,f=!1)),n+r.size.height>=r.parentData.height&&(r.size.height=r.parentData.height-n,u&&(r.size.width=r.size.height*r.aspectRatio,f=!1)),f||(r.position.left=r.prevPosition.left,r.position.top=r.prevPosition.top,r.size.width=r.prevSize.width,r.size.height=r.prevSize.height)},stop:function(){var t=e(this).resizable("instance"),i=t.options,n=t.containerOffset,s=t.containerPosition,a=t.containerElement,r=e(t.helper),o=r.offset(),l=r.outerWidth()-t.sizeDiff.width,h=r.outerHeight()-t.sizeDiff.height;t._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:o.left-s.left-n.left,width:l,height:h}),t._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:o.left-s.left-n.left,width:l,height:h})}}),e.ui.plugin.add("resizable","alsoResize",{start:function(){var t=e(this).resizable("instance").options;e(t.alsoResize).each((function(){var t=e(this);t.data("ui-resizable-alsoresize",{width:parseFloat(t.width()),height:parseFloat(t.height()),left:parseFloat(t.css("left")),top:parseFloat(t.css("top"))})}))},resize:function(t,i){var n=e(this).resizable("instance"),s=n.options,a=n.originalSize,r=n.originalPosition,o={height:n.size.height-a.height||0,width:n.size.width-a.width||0,top:n.position.top-r.top||0,left:n.position.left-r.left||0};e(s.alsoResize).each((function(){var t=e(this),n=e(this).data("ui-resizable-alsoresize"),s={},a=t.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(a,(function(e,t){var i=(n[t]||0)+(o[t]||0);i&&i>=0&&(s[t]=i||null)})),t.css(s)}))},stop:function(){e(this).removeData("ui-resizable-alsoresize")}}),e.ui.plugin.add("resizable","ghost",{start:function(){var t=e(this).resizable("instance"),i=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:"block",position:"relative",height:i.height,width:i.width,margin:0,left:0,top:0}),t._addClass(t.ghost,"ui-resizable-ghost"),!1!==e.uiBackCompat&&"string"==typeof t.options.ghost&&t.ghost.addClass(this.options.ghost),t.ghost.appendTo(t.helper)},resize:function(){var t=e(this).resizable("instance");t.ghost&&t.ghost.css({position:"relative",height:t.size.height,width:t.size.width})},stop:function(){var t=e(this).resizable("instance");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(){var t,i=e(this).resizable("instance"),n=i.options,s=i.size,a=i.originalSize,r=i.originalPosition,o=i.axis,l="number"==typeof n.grid?[n.grid,n.grid]:n.grid,h=l[0]||1,u=l[1]||1,c=Math.round((s.width-a.width)/h)*h,d=Math.round((s.height-a.height)/u)*u,f=a.width+c,p=a.height+d,m=n.maxWidth&&f>n.maxWidth,g=n.maxHeight&&p>n.maxHeight,v=n.minWidth&&n.minWidth>f,_=n.minHeight&&n.minHeight>p;n.grid=l,v&&(f+=h),_&&(p+=u),m&&(f-=h),g&&(p-=u),/^(se|s|e)$/.test(o)?(i.size.width=f,i.size.height=p):/^(ne)$/.test(o)?(i.size.width=f,i.size.height=p,i.position.top=r.top-d):/^(sw)$/.test(o)?(i.size.width=f,i.size.height=p,i.position.left=r.left-c):((0>=p-u||0>=f-h)&&(t=i._getPaddingPlusBorderDimensions(this)),p-u>0?(i.size.height=p,i.position.top=r.top-d):(p=u-t.height,i.size.height=p,i.position.top=r.top+a.height-p),f-h>0?(i.size.width=f,i.position.left=r.left-c):(f=h-t.width,i.size.width=f,i.position.left=r.left+a.width-f))}}),e.ui.resizable,e.widget("ui.selectable",e.ui.mouse,{version:"1.12.1",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var t=this;this._addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){t.elementPos=e(t.element[0]).offset(),t.selectees=e(t.options.filter,t.element[0]),t._addClass(t.selectees,"ui-selectee"),t.selectees.each((function(){var i=e(this),n=i.offset(),s={left:n.left-t.elementPos.left,top:n.top-t.elementPos.top};e.data(this,"selectable-item",{element:this,$element:i,left:s.left,top:s.top,right:s.left+i.outerWidth(),bottom:s.top+i.outerHeight(),startselected:!1,selected:i.hasClass("ui-selected"),selecting:i.hasClass("ui-selecting"),unselecting:i.hasClass("ui-unselecting")})}))},this.refresh(),this._mouseInit(),this.helper=e("<div>"),this._addClass(this.helper,"ui-selectable-helper")},_destroy:function(){this.selectees.removeData("selectable-item"),this._mouseDestroy()},_mouseStart:function(t){var i=this,n=this.options;this.opos=[t.pageX,t.pageY],this.elementPos=e(this.element[0]).offset(),this.options.disabled||(this.selectees=e(n.filter,this.element[0]),this._trigger("start",t),e(n.appendTo).append(this.helper),this.helper.css({left:t.pageX,top:t.pageY,width:0,height:0}),n.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each((function(){var n=e.data(this,"selectable-item");n.startselected=!0,t.metaKey||t.ctrlKey||(i._removeClass(n.$element,"ui-selected"),n.selected=!1,i._addClass(n.$element,"ui-unselecting"),n.unselecting=!0,i._trigger("unselecting",t,{unselecting:n.element}))})),e(t.target).parents().addBack().each((function(){var n,s=e.data(this,"selectable-item");return s?(n=!t.metaKey&&!t.ctrlKey||!s.$element.hasClass("ui-selected"),i._removeClass(s.$element,n?"ui-unselecting":"ui-selected")._addClass(s.$element,n?"ui-selecting":"ui-unselecting"),s.unselecting=!n,s.selecting=n,s.selected=n,n?i._trigger("selecting",t,{selecting:s.element}):i._trigger("unselecting",t,{unselecting:s.element}),!1):void 0})))},_mouseDrag:function(t){if(this.dragged=!0,!this.options.disabled){var i,n=this,s=this.options,a=this.opos[0],r=this.opos[1],o=t.pageX,l=t.pageY;return a>o&&(i=o,o=a,a=i),r>l&&(i=l,l=r,r=i),this.helper.css({left:a,top:r,width:o-a,height:l-r}),this.selectees.each((function(){var i=e.data(this,"selectable-item"),h=!1,u={};i&&i.element!==n.element[0]&&(u.left=i.left+n.elementPos.left,u.right=i.right+n.elementPos.left,u.top=i.top+n.elementPos.top,u.bottom=i.bottom+n.elementPos.top,"touch"===s.tolerance?h=!(u.left>o||a>u.right||u.top>l||r>u.bottom):"fit"===s.tolerance&&(h=u.left>a&&o>u.right&&u.top>r&&l>u.bottom),h?(i.selected&&(n._removeClass(i.$element,"ui-selected"),i.selected=!1),i.unselecting&&(n._removeClass(i.$element,"ui-unselecting"),i.unselecting=!1),i.selecting||(n._addClass(i.$element,"ui-selecting"),i.selecting=!0,n._trigger("selecting",t,{selecting:i.element}))):(i.selecting&&((t.metaKey||t.ctrlKey)&&i.startselected?(n._removeClass(i.$element,"ui-selecting"),i.selecting=!1,n._addClass(i.$element,"ui-selected"),i.selected=!0):(n._removeClass(i.$element,"ui-selecting"),i.selecting=!1,i.startselected&&(n._addClass(i.$element,"ui-unselecting"),i.unselecting=!0),n._trigger("unselecting",t,{unselecting:i.element}))),i.selected&&(t.metaKey||t.ctrlKey||i.startselected||(n._removeClass(i.$element,"ui-selected"),i.selected=!1,n._addClass(i.$element,"ui-unselecting"),i.unselecting=!0,n._trigger("unselecting",t,{unselecting:i.element})))))})),!1}},_mouseStop:function(t){var i=this;return this.dragged=!1,e(".ui-unselecting",this.element[0]).each((function(){var n=e.data(this,"selectable-item");i._removeClass(n.$element,"ui-unselecting"),n.unselecting=!1,n.startselected=!1,i._trigger("unselected",t,{unselected:n.element})})),e(".ui-selecting",this.element[0]).each((function(){var n=e.data(this,"selectable-item");i._removeClass(n.$element,"ui-selecting")._addClass(n.$element,"ui-selected"),n.selecting=!1,n.selected=!0,n.startselected=!0,i._trigger("selected",t,{selected:n.element})})),this._trigger("stop",t),this.helper.remove(),!1}}),e.widget("ui.sortable",e.ui.mouse,{version:"1.12.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(e,t,i){return e>=t&&t+i>e},_isFloating:function(e){return/left|right/.test(e.css("float"))||/inline|table-cell/.test(e.css("display"))},_create:function(){this.containerCache={},this._addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(e,t){this._super(e,t),"handle"===e&&this._setHandleClassName()},_setHandleClassName:function(){var t=this;this._removeClass(this.element.find(".ui-sortable-handle"),"ui-sortable-handle"),e.each(this.items,(function(){t._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,"ui-sortable-handle")}))},_destroy:function(){this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(t,i){var n=null,s=!1,a=this;return!(this.reverting||this.options.disabled||"static"===this.options.type||(this._refreshItems(t),e(t.target).parents().each((function(){return e.data(this,a.widgetName+"-item")===a?(n=e(this),!1):void 0})),e.data(t.target,a.widgetName+"-item")===a&&(n=e(t.target)),!n||this.options.handle&&!i&&(e(this.options.handle,n).find("*").addBack().each((function(){this===t.target&&(s=!0)})),!s)||(this.currentItem=n,this._removeCurrentsFromItems(),0)))},_mouseStart:function(t,i,n){var s,a,r=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,r.cursorAt&&this._adjustOffsetFromHelper(r.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),r.containment&&this._setContainment(),r.cursor&&"auto"!==r.cursor&&(a=this.document.find("body"),this.storedCursor=a.css("cursor"),a.css("cursor",r.cursor),this.storedStylesheet=e("<style>*{ cursor: "+r.cursor+" !important; }</style>").appendTo(a)),r.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",r.opacity)),r.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",r.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!n)for(s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!r.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this._addClass(this.helper,"ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){var i,n,s,a,r=this.options,o=!1;for(this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<r.scrollSensitivity?this.scrollParent[0].scrollTop=o=this.scrollParent[0].scrollTop+r.scrollSpeed:t.pageY-this.overflowOffset.top<r.scrollSensitivity&&(this.scrollParent[0].scrollTop=o=this.scrollParent[0].scrollTop-r.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<r.scrollSensitivity?this.scrollParent[0].scrollLeft=o=this.scrollParent[0].scrollLeft+r.scrollSpeed:t.pageX-this.overflowOffset.left<r.scrollSensitivity&&(this.scrollParent[0].scrollLeft=o=this.scrollParent[0].scrollLeft-r.scrollSpeed)):(t.pageY-this.document.scrollTop()<r.scrollSensitivity?o=this.document.scrollTop(this.document.scrollTop()-r.scrollSpeed):this.window.height()-(t.pageY-this.document.scrollTop())<r.scrollSensitivity&&(o=this.document.scrollTop(this.document.scrollTop()+r.scrollSpeed)),t.pageX-this.document.scrollLeft()<r.scrollSensitivity?o=this.document.scrollLeft(this.document.scrollLeft()-r.scrollSpeed):this.window.width()-(t.pageX-this.document.scrollLeft())<r.scrollSensitivity&&(o=this.document.scrollLeft(this.document.scrollLeft()+r.scrollSpeed))),!1!==o&&e.ui.ddmanager&&!r.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(s=(n=this.items[i]).item[0],(a=this._intersectsWithPointer(n))&&n.instance===this.currentContainer&&s!==this.currentItem[0]&&this.placeholder[1===a?"next":"prev"]()[0]!==s&&!e.contains(this.placeholder[0],s)&&("semi-dynamic"!==this.options.type||!e.contains(this.element[0],s))){if(this.direction=1===a?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(n))break;this._rearrange(t,n),this._trigger("change",t,this._uiHash());break}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,i){if(t){if(e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t),this.options.revert){var n=this,s=this.placeholder.offset(),a=this.options.axis,r={};a&&"x"!==a||(r.left=s.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),a&&"y"!==a||(r.top=s.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,e(this.helper).animate(r,parseInt(this.options.revert,10)||500,(function(){n._clear(t)}))}else this._clear(t,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp(new e.Event("mouseup",{target:null})),"original"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var i=this._getItemsAsjQuery(t&&t.connected),n=[];return t=t||{},e(i).each((function(){var i=(e(t.item||this).attr(t.attribute||"id")||"").match(t.expression||/(.+)[\-=_](.+)/);i&&n.push((t.key||i[1]+"[]")+"="+(t.key&&t.expression?i[1]:i[2]))})),!n.length&&t.key&&n.push(t.key+"="),n.join("&")},toArray:function(t){var i=this._getItemsAsjQuery(t&&t.connected),n=[];return t=t||{},i.each((function(){n.push(e(t.item||this).attr(t.attribute||"id")||"")})),n},_intersectsWith:function(e){var t=this.positionAbs.left,i=t+this.helperProportions.width,n=this.positionAbs.top,s=n+this.helperProportions.height,a=e.left,r=a+e.width,o=e.top,l=o+e.height,h=this.offset.click.top,u=this.offset.click.left,c="x"===this.options.axis||n+h>o&&l>n+h,d="y"===this.options.axis||t+u>a&&r>t+u,f=c&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>e[this.floating?"width":"height"]?f:t+this.helperProportions.width/2>a&&r>i-this.helperProportions.width/2&&n+this.helperProportions.height/2>o&&l>s-this.helperProportions.height/2},_intersectsWithPointer:function(e){var t,i,n="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,e.top,e.height),s="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,e.left,e.width);return!(!n||!s)&&(t=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?"right"===i||"down"===t?2:1:t&&("down"===t?2:1))},_intersectsWithSides:function(e){var t=this._isOverAxis(this.positionAbs.top+this.offset.click.top,e.top+e.height/2,e.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,e.left+e.width/2,e.width),n=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?"right"===s&&i||"left"===s&&!i:n&&("down"===n&&t||"up"===n&&!t)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return 0!==e&&(e>0?"down":"up")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return 0!==e&&(e>0?"right":"left")},refresh:function(e){return this._refreshItems(e),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor===String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){function i(){o.push(this)}var n,s,a,r,o=[],l=[],h=this._connectWith();if(h&&t)for(n=h.length-1;n>=0;n--)for(s=(a=e(h[n],this.document[0])).length-1;s>=0;s--)(r=e.data(a[s],this.widgetFullName))&&r!==this&&!r.options.disabled&&l.push([e.isFunction(r.options.items)?r.options.items.call(r.element):e(r.options.items,r.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),r]);for(l.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),n=l.length-1;n>=0;n--)l[n][0].each(i);return e(o)},_removeCurrentsFromItems:function(){var t=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=e.grep(this.items,(function(e){for(var i=0;t.length>i;i++)if(t[i]===e.item[0])return!1;return!0}))},_refreshItems:function(t){this.items=[],this.containers=[this];var i,n,s,a,r,o,l,h,u=this.items,c=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=(s=e(d[i],this.document[0])).length-1;n>=0;n--)(a=e.data(s[n],this.widgetFullName))&&a!==this&&!a.options.disabled&&(c.push([e.isFunction(a.options.items)?a.options.items.call(a.element[0],t,{item:this.currentItem}):e(a.options.items,a.element),a]),this.containers.push(a));for(i=c.length-1;i>=0;i--)for(r=c[i][1],n=0,h=(o=c[i][0]).length;h>n;n++)(l=e(o[n])).data(this.widgetName+"-item",r),u.push({item:l,instance:r,width:0,height:0,left:0,top:0})},refreshPositions:function(t){var i,n,s,a;for(this.floating=!!this.items.length&&("x"===this.options.axis||this._isFloating(this.items[0].item)),this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset()),i=this.items.length-1;i>=0;i--)(n=this.items[i]).instance!==this.currentContainer&&this.currentContainer&&n.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?e(this.options.toleranceElement,n.item):n.item,t||(n.width=s.outerWidth(),n.height=s.outerHeight()),a=s.offset(),n.left=a.left,n.top=a.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)a=this.containers[i].element.offset(),this.containers[i].containerCache.left=a.left,this.containers[i].containerCache.top=a.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(t){var i,n=(t=t||this).options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,n.placeholder={element:function(){var n=t.currentItem[0].nodeName.toLowerCase(),s=e("<"+n+">",t.document[0]);return t._addClass(s,"ui-sortable-placeholder",i||t.currentItem[0].className)._removeClass(s,"ui-sortable-helper"),"tbody"===n?t._createTrPlaceholder(t.currentItem.find("tr").eq(0),e("<tr>",t.document[0]).appendTo(s)):"tr"===n?t._createTrPlaceholder(t.currentItem,s):"img"===n&&s.attr("src",t.currentItem.attr("src")),i||s.css("visibility","hidden"),s},update:function(e,s){(!i||n.forcePlaceholderSize)&&(s.height()||s.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css("paddingTop")||0,10)-parseInt(t.currentItem.css("paddingBottom")||0,10)),s.width()||s.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css("paddingLeft")||0,10)-parseInt(t.currentItem.css("paddingRight")||0,10)))}}),t.placeholder=e(n.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),n.placeholder.update(t,t.placeholder)},_createTrPlaceholder:function(t,i){var n=this;t.children().each((function(){e("<td>&#160;</td>",n.document[0]).attr("colspan",e(this).attr("colspan")||1).appendTo(i)}))},_contactContainers:function(t){var i,n,s,a,r,o,l,h,u,c,d=null,f=null;for(i=this.containers.length-1;i>=0;i--)if(!e.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&e.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],f=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",t,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[f].containerCache.over||(this.containers[f]._trigger("over",t,this._uiHash(this)),this.containers[f].containerCache.over=1);else{for(s=1e4,a=null,r=(u=d.floating||this._isFloating(this.currentItem))?"left":"top",o=u?"width":"height",c=u?"pageX":"pageY",n=this.items.length-1;n>=0;n--)e.contains(this.containers[f].element[0],this.items[n].item[0])&&this.items[n].item[0]!==this.currentItem[0]&&(l=this.items[n].item.offset()[r],h=!1,t[c]-l>this.items[n][o]/2&&(h=!0),s>Math.abs(t[c]-l)&&(s=Math.abs(t[c]-l),a=this.items[n],this.direction=h?"up":"down"));if(!a&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[f])return void(this.currentContainer.containerCache.over||(this.containers[f]._trigger("over",t,this._uiHash()),this.currentContainer.containerCache.over=1));a?this._rearrange(t,a,null,!0):this._rearrange(t,null,this.containers[f].element,!0),this._trigger("change",t,this._uiHash()),this.containers[f]._trigger("change",t,this._uiHash(this)),this.currentContainer=this.containers[f],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[f]._trigger("over",t,this._uiHash(this)),this.containers[f].containerCache.over=1}},_createHelper:function(t){var i=this.options,n=e.isFunction(i.helper)?e(i.helper.apply(this.element[0],[t,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return n.parents("body").length||e("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(n[0]),n[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!n[0].style.width||i.forceHelperSize)&&n.width(this.currentItem.width()),(!n[0].style.height||i.forceHelperSize)&&n.height(this.currentItem.height()),n},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&e.ui.ie)&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,i,n,s=this.options;"parent"===s.containment&&(s.containment=this.helper[0].parentNode),("document"===s.containment||"window"===s.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===s.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===s.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(t=e(s.containment)[0],i=e(s.containment).offset(),n="hidden"!==e(t).css("overflow"),this.containment=[i.left+(parseInt(e(t).css("borderLeftWidth"),10)||0)+(parseInt(e(t).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(e(t).css("borderTopWidth"),10)||0)+(parseInt(e(t).css("paddingTop"),10)||0)-this.margins.top,i.left+(n?Math.max(t.scrollWidth,t.offsetWidth):t.offsetWidth)-(parseInt(e(t).css("borderLeftWidth"),10)||0)-(parseInt(e(t).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(n?Math.max(t.scrollHeight,t.offsetHeight):t.offsetHeight)-(parseInt(e(t).css("borderTopWidth"),10)||0)-(parseInt(e(t).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(t,i){i||(i=this.position);var n="absolute"===t?1:-1,s="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(s[0].tagName);return{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():a?0:s.scrollTop())*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():a?0:s.scrollLeft())*n}},_generatePosition:function(t){var i,n,s=this.options,a=t.pageX,r=t.pageY,o="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(o[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(a=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(r=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(a=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(r=this.containment[3]+this.offset.click.top)),s.grid&&(i=this.originalPageY+Math.round((r-this.originalPageY)/s.grid[1])*s.grid[1],r=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-s.grid[1]:i+s.grid[1]:i,n=this.originalPageX+Math.round((a-this.originalPageX)/s.grid[0])*s.grid[0],a=this.containment?n-this.offset.click.left>=this.containment[0]&&n-this.offset.click.left<=this.containment[2]?n:n-this.offset.click.left>=this.containment[0]?n-s.grid[0]:n+s.grid[0]:n)),{top:r-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():l?0:o.scrollTop()),left:a-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:o.scrollLeft())}},_rearrange:function(e,t,i,n){i?i[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var s=this.counter;this._delay((function(){s===this.counter&&this.refreshPositions(!n)}))},_clear:function(e,t){function i(e,t,i){return function(n){i._trigger(e,n,t._uiHash(t))}}this.reverting=!1;var n,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(n in this._storedCSS)("auto"===this._storedCSS[n]||"static"===this._storedCSS[n])&&(this._storedCSS[n]="");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!t&&s.push((function(e){this._trigger("receive",e,this._uiHash(this.fromOutside))})),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||t||s.push((function(e){this._trigger("update",e,this._uiHash())})),this!==this.currentContainer&&(t||(s.push((function(e){this._trigger("remove",e,this._uiHash())})),s.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer)))),n=this.containers.length-1;n>=0;n--)t||s.push(i("deactivate",this,this.containers[n])),this.containers[n].containerCache.over&&(s.push(i("out",this,this.containers[n])),this.containers[n].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,t||this._trigger("beforeStop",e,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!t){for(n=0;s.length>n;n++)s[n].call(this,e);this._trigger("stop",e,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){!1===e.Widget.prototype._trigger.apply(this,arguments)&&this.cancel()},_uiHash:function(t){var i=t||this;return{helper:i.helper,placeholder:i.placeholder||e([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:t?t.element:null}}}),e.widget("ui.accordion",{version:"1.12.1",options:{active:0,animate:{},classes:{"ui-accordion-header":"ui-corner-top","ui-accordion-header-collapsed":"ui-corner-all","ui-accordion-content":"ui-corner-bottom"},collapsible:!1,event:"click",header:"> li > :first-child, > :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var t=this.options;this.prevShow=this.prevHide=e(),this._addClass("ui-accordion","ui-widget ui-helper-reset"),this.element.attr("role","tablist"),t.collapsible||!1!==t.active&&null!=t.active||(t.active=0),this._processPanels(),0>t.active&&(t.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():e()}},_createIcons:function(){var t,i,n=this.options.icons;n&&(t=e("<span>"),this._addClass(t,"ui-accordion-header-icon","ui-icon "+n.header),t.prependTo(this.headers),i=this.active.children(".ui-accordion-header-icon"),this._removeClass(i,n.header)._addClass(i,null,n.activeHeader)._addClass(this.headers,"ui-accordion-icons"))},_destroyIcons:function(){this._removeClass(this.headers,"ui-accordion-icons"),this.headers.children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeAttr("role"),this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),this._destroyIcons(),e=this.headers.next().css("display","").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&e.css("height","")},_setOption:function(e,t){return"active"===e?void this._activate(t):("event"===e&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),"collapsible"!==e||t||!1!==this.options.active||this._activate(0),void("icons"===e&&(this._destroyIcons(),t&&this._createIcons())))},_setOptionDisabled:function(e){this._super(e),this.element.attr("aria-disabled",e),this._toggleClass(null,"ui-state-disabled",!!e),this._toggleClass(this.headers.add(this.headers.next()),null,"ui-state-disabled",!!e)},_keydown:function(t){if(!t.altKey&&!t.ctrlKey){var i=e.ui.keyCode,n=this.headers.length,s=this.headers.index(t.target),a=!1;switch(t.keyCode){case i.RIGHT:case i.DOWN:a=this.headers[(s+1)%n];break;case i.LEFT:case i.UP:a=this.headers[(s-1+n)%n];break;case i.SPACE:case i.ENTER:this._eventHandler(t);break;case i.HOME:a=this.headers[0];break;case i.END:a=this.headers[n-1]}a&&(e(t.target).attr("tabIndex",-1),e(a).attr("tabIndex",0),e(a).trigger("focus"),t.preventDefault())}},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().trigger("focus")},refresh:function(){var t=this.options;this._processPanels(),!1===t.active&&!0===t.collapsible||!this.headers.length?(t.active=!1,this.active=e()):!1===t.active?this._activate(0):this.active.length&&!e.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(t.active=!1,this.active=e()):this._activate(Math.max(0,t.active-1)):t.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var e=this.headers,t=this.panels;this.headers=this.element.find(this.options.header),this._addClass(this.headers,"ui-accordion-header ui-accordion-header-collapsed","ui-state-default"),this.panels=this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),this._addClass(this.panels,"ui-accordion-content","ui-helper-reset ui-widget-content"),t&&(this._off(e.not(this.headers)),this._off(t.not(this.panels)))},_refresh:function(){var t,i=this.options,n=i.heightStyle,s=this.element.parent();this.active=this._findActive(i.active),this._addClass(this.active,"ui-accordion-header-active","ui-state-active")._removeClass(this.active,"ui-accordion-header-collapsed"),this._addClass(this.active.next(),"ui-accordion-content-active"),this.active.next().show(),this.headers.attr("role","tab").each((function(){var t=e(this),i=t.uniqueId().attr("id"),n=t.next(),s=n.uniqueId().attr("id");t.attr("aria-controls",s),n.attr("aria-labelledby",i)})).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===n?(t=s.height(),this.element.siblings(":visible").each((function(){var i=e(this),n=i.css("position");"absolute"!==n&&"fixed"!==n&&(t-=i.outerHeight(!0))})),this.headers.each((function(){t-=e(this).outerHeight(!0)})),this.headers.next().each((function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))})).css("overflow","auto")):"auto"===n&&(t=0,this.headers.next().each((function(){var i=e(this).is(":visible");i||e(this).show(),t=Math.max(t,e(this).css("height","").height()),i||e(this).hide()})).height(t))},_activate:function(t){var i=this._findActive(t)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return"number"==typeof t?this.headers.eq(t):e()},_setupEvents:function(t){var i={keydown:"_keydown"};t&&e.each(t.split(" "),(function(e,t){i[t]="_eventHandler"})),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(t){var i,n,s=this.options,a=this.active,r=e(t.currentTarget),o=r[0]===a[0],l=o&&s.collapsible,h=l?e():r.next(),u=a.next(),c={oldHeader:a,oldPanel:u,newHeader:l?e():r,newPanel:h};t.preventDefault(),o&&!s.collapsible||!1===this._trigger("beforeActivate",t,c)||(s.active=!l&&this.headers.index(r),this.active=o?e():r,this._toggle(c),this._removeClass(a,"ui-accordion-header-active","ui-state-active"),s.icons&&(i=a.children(".ui-accordion-header-icon"),this._removeClass(i,null,s.icons.activeHeader)._addClass(i,null,s.icons.header)),o||(this._removeClass(r,"ui-accordion-header-collapsed")._addClass(r,"ui-accordion-header-active","ui-state-active"),s.icons&&(n=r.children(".ui-accordion-header-icon"),this._removeClass(n,null,s.icons.header)._addClass(n,null,s.icons.activeHeader)),this._addClass(r.next(),"ui-accordion-content-active")))},_toggle:function(t){var i=t.newPanel,n=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=n,this.options.animate?this._animate(i,n,t):(n.hide(),i.show(),this._toggleComplete(t)),n.attr({"aria-hidden":"true"}),n.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&n.length?n.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter((function(){return 0===parseInt(e(this).attr("tabIndex"),10)})).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(e,t,i){var n,s,a,r=this,o=0,l=e.css("box-sizing"),h=e.length&&(!t.length||e.index()<t.index()),u=this.options.animate||{},c=h&&u.down||u,d=function(){r._toggleComplete(i)};return"number"==typeof c&&(a=c),"string"==typeof c&&(s=c),s=s||c.easing||u.easing,a=a||c.duration||u.duration,t.length?e.length?(n=e.show().outerHeight(),t.animate(this.hideProps,{duration:a,easing:s,step:function(e,t){t.now=Math.round(e)}}),void e.hide().animate(this.showProps,{duration:a,easing:s,complete:d,step:function(e,i){i.now=Math.round(e),"height"!==i.prop?"content-box"===l&&(o+=i.now):"content"!==r.options.heightStyle&&(i.now=Math.round(n-t.outerHeight()-o),o=0)}})):t.animate(this.hideProps,a,s,d):e.animate(this.showProps,a,s,d)},_toggleComplete:function(e){var t=e.oldPanel,i=t.prev();this._removeClass(t,"ui-accordion-content-active"),this._removeClass(i,"ui-accordion-header-active")._addClass(i,"ui-accordion-header-collapsed"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.widget("ui.menu",{version:"1.12.1",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-caret-1-e"},items:"> *",menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass("ui-menu","ui-widget ui-widget-content"),this._on({"mousedown .ui-menu-item":function(e){e.preventDefault()},"click .ui-menu-item":function(t){var i=e(t.target),n=e(e.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(t),t.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(t):!this.element.is(":focus")&&n.closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){if(!this.previousFilter){var i=e(t.target).closest(".ui-menu-item"),n=e(t.currentTarget);i[0]===n[0]&&(this._removeClass(n.siblings().children(".ui-state-active"),null,"ui-state-active"),this.focus(t,n))}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var i=this.active||this.element.find(this.options.items).eq(0);t||this.focus(e,i)},blur:function(t){this._delay((function(){!e.contains(this.element[0],e.ui.safeActiveElement(this.document[0]))&&this.collapseAll(t)}))},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(e){this._closeOnDocumentClick(e)&&this.collapseAll(e),this.mouseHandled=!1}})},_destroy:function(){var t=this.element.find(".ui-menu-item").removeAttr("role aria-disabled").children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),t.children().each((function(){var t=e(this);t.data("ui-menu-submenu-caret")&&t.remove()}))},_keydown:function(t){var i,n,s,a,r=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:r=!1,n=this.previousFilter||"",a=!1,s=t.keyCode>=96&&105>=t.keyCode?""+(t.keyCode-96):String.fromCharCode(t.keyCode),clearTimeout(this.filterTimer),s===n?a=!0:s=n+s,i=this._filterMenuItems(s),(i=a&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i).length||(s=String.fromCharCode(t.keyCode),i=this._filterMenuItems(s)),i.length?(this.focus(t,i),this.previousFilter=s,this.filterTimer=this._delay((function(){delete this.previousFilter}),1e3)):delete this.previousFilter}r&&t.preventDefault()},_activate:function(e){this.active&&!this.active.is(".ui-state-disabled")&&(this.active.children("[aria-haspopup='true']").length?this.expand(e):this.select(e))},refresh:function(){var t,i,n,s,a=this,r=this.options.icons.submenu,o=this.element.find(this.options.menus);this._toggleClass("ui-menu-icons",null,!!this.element.find(".ui-icon").length),i=o.filter(":not(.ui-menu)").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each((function(){var t=e(this),i=t.prev(),n=e("<span>").data("ui-menu-submenu-caret",!0);a._addClass(n,"ui-menu-icon","ui-icon "+r),i.attr("aria-haspopup","true").prepend(n),t.attr("aria-labelledby",i.attr("id"))})),this._addClass(i,"ui-menu","ui-widget ui-widget-content ui-front"),(t=o.add(this.element).find(this.options.items)).not(".ui-menu-item").each((function(){var t=e(this);a._isDivider(t)&&a._addClass(t,"ui-menu-divider","ui-widget-content")})),s=(n=t.not(".ui-menu-item, .ui-menu-divider")).children().not(".ui-menu").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(n,"ui-menu-item")._addClass(s,"ui-menu-item-wrapper"),t.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(e,t){if("icons"===e){var i=this.element.find(".ui-menu-icon");this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,t.submenu)}this._super(e,t)},_setOptionDisabled:function(e){this._super(e),this.element.attr("aria-disabled",e+""),this._toggleClass(null,"ui-state-disabled",!!e)},focus:function(e,t){var i,n,s;this.blur(e,e&&"focus"===e.type),this._scrollIntoView(t),this.active=t.first(),n=this.active.children(".ui-menu-item-wrapper"),this._addClass(n,null,"ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",n.attr("id")),s=this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),this._addClass(s,null,"ui-state-active"),e&&"keydown"===e.type?this._close():this.timer=this._delay((function(){this._close()}),this.delay),(i=t.children(".ui-menu")).length&&e&&/^mouse/.test(e.type)&&this._startOpening(i),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var i,n,s,a,r,o;this._hasScroll()&&(i=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,n=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,s=t.offset().top-this.activeMenu.offset().top-i-n,a=this.activeMenu.scrollTop(),r=this.activeMenu.height(),o=t.outerHeight(),0>s?this.activeMenu.scrollTop(a+s):s+o>r&&this.activeMenu.scrollTop(a+s-r+o))},blur:function(e,t){t||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(".ui-menu-item-wrapper"),null,"ui-state-active"),this._trigger("blur",e,{item:this.active}),this.active=null)},_startOpening:function(e){clearTimeout(this.timer),"true"===e.attr("aria-hidden")&&(this.timer=this._delay((function(){this._close(),this._open(e)}),this.delay))},_open:function(t){var i=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(t,i){clearTimeout(this.timer),this.timer=this._delay((function(){var n=i?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));n.length||(n=this.element),this._close(n),this.blur(t),this._removeClass(n.find(".ui-state-active"),null,"ui-state-active"),this.activeMenu=n}),this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false")},_closeOnDocumentClick:function(t){return!e(t.target).closest(".ui-menu").length},_isDivider:function(e){return!/[^\-\u2014\u2013\s]/.test(e.text())},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();t&&t.length&&(this._open(t.parent()),this._delay((function(){this.focus(e,t)})))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,i){var n;this.active&&(n="first"===e||"last"===e?this.active["first"===e?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[e+"All"](".ui-menu-item").eq(0)),n&&n.length&&this.active||(n=this.activeMenu.find(this.options.items)[t]()),this.focus(i,n)},nextPage:function(t){var i,n,s;return this.active?void(this.isLastItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.nextAll(".ui-menu-item").each((function(){return 0>(i=e(this)).offset().top-n-s})),this.focus(t,i)):this.focus(t,this.activeMenu.find(this.options.items)[this.active?"last":"first"]()))):void this.next(t)},previousPage:function(t){var i,n,s;return this.active?void(this.isFirstItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.prevAll(".ui-menu-item").each((function(){return(i=e(this)).offset().top-n+s>0})),this.focus(t,i)):this.focus(t,this.activeMenu.find(this.options.items).first()))):void this.next(t)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,i)},_filterMenuItems:function(t){var i=t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),n=RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter((function(){return n.test(e.trim(e(this).children(".ui-menu-item-wrapper").text()))}))}}),e.widget("ui.autocomplete",{version:"1.12.1",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var t,i,n,s=this.element[0].nodeName.toLowerCase(),a="textarea"===s,r="input"===s;this.isMultiLine=a||!r&&this._isContentEditable(this.element),this.valueMethod=this.element[a||r?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function(s){if(this.element.prop("readOnly"))return t=!0,n=!0,void(i=!0);t=!1,n=!1,i=!1;var a=e.ui.keyCode;switch(s.keyCode){case a.PAGE_UP:t=!0,this._move("previousPage",s);break;case a.PAGE_DOWN:t=!0,this._move("nextPage",s);break;case a.UP:t=!0,this._keyEvent("previous",s);break;case a.DOWN:t=!0,this._keyEvent("next",s);break;case a.ENTER:this.menu.active&&(t=!0,s.preventDefault(),this.menu.select(s));break;case a.TAB:this.menu.active&&this.menu.select(s);break;case a.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(s),s.preventDefault());break;default:i=!0,this._searchTimeout(s)}},keypress:function(n){if(t)return t=!1,void((!this.isMultiLine||this.menu.element.is(":visible"))&&n.preventDefault());if(!i){var s=e.ui.keyCode;switch(n.keyCode){case s.PAGE_UP:this._move("previousPage",n);break;case s.PAGE_DOWN:this._move("nextPage",n);break;case s.UP:this._keyEvent("previous",n);break;case s.DOWN:this._keyEvent("next",n)}}},input:function(e){return n?(n=!1,void e.preventDefault()):void this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){return this.cancelBlur?void delete this.cancelBlur:(clearTimeout(this.searching),this.close(e),void this._change(e))}}),this._initSource(),this.menu=e("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay((function(){delete this.cancelBlur,this.element[0]!==e.ui.safeActiveElement(this.document[0])&&this.element.trigger("focus")}))},menufocus:function(t,i){var n,s;return this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type))?(this.menu.blur(),void this.document.one("mousemove",(function(){e(t.target).trigger(t.originalEvent)}))):(s=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",t,{item:s})&&t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(s.value),void((n=i.item.attr("aria-label")||s.value)&&e.trim(n).length&&(this.liveRegion.children().hide(),e("<div>").text(n).appendTo(this.liveRegion))))},menuselect:function(t,i){var n=i.item.data("ui-autocomplete-item"),s=this.previous;this.element[0]!==e.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=s,this._delay((function(){this.previous=s,this.selectedItem=n}))),!1!==this._trigger("select",t,{item:n})&&this._value(n.value),this.term=this._value(),this.close(t),this.selectedItem=n}}),this.liveRegion=e("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),"source"===e&&this._initSource(),"appendTo"===e&&this.menu.element.appendTo(this._appendTo()),"disabled"===e&&t&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(t){var i=this.menu.element[0];return t.target===this.element[0]||t.target===i||e.contains(i,t.target)},_closeOnClickOutside:function(e){this._isEventTargetInWidget(e)||this.close()},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front, dialog")),t.length||(t=this.document[0].body),t},_initSource:function(){var t,i,n=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(i,n){n(e.ui.autocomplete.filter(t,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(t,s){n.xhr&&n.xhr.abort(),n.xhr=e.ajax({url:i,data:t,dataType:"json",success:function(e){s(e)},error:function(){s([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay((function(){var t=this.term===this._value(),i=this.menu.element.is(":visible"),n=e.altKey||e.ctrlKey||e.metaKey||e.shiftKey;(!t||t&&!i&&!n)&&(this.selectedItem=null,this.search(null,e))}),this.options.delay)},search:function(e,t){return e=null!=e?e:this._value(),this.term=this._value(),e.length<this.options.minLength?this.close(t):!1!==this._trigger("search",t)?this._search(e):void 0},_search:function(e){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var t=++this.requestIndex;return e.proxy((function(e){t===this.requestIndex&&this.__response(e),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading")}),this)},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,(function(t){return"string"==typeof t?{label:t,value:t}:e.extend({},t,{label:t.label||t.value,value:t.value||t.label})}))},_suggest:function(t){var i=this.menu.element.empty();this._renderMenu(i,t),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"})},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,i){var n=this;e.each(i,(function(e,i){n._renderItemData(t,i)}))},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,i){return e("<li>").append(e("<div>").text(i.label)).appendTo(t)},_move:function(e,t){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[e](t):void this.search(null,t)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(e,t),t.preventDefault())},_isContentEditable:function(e){if(!e.length)return!1;var t=e.prop("contentEditable");return"inherit"===t?this._isContentEditable(e.parent()):"true"===t}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,i){var n=RegExp(e.ui.autocomplete.escapeRegex(i),"i");return e.grep(t,(function(e){return n.test(e.label||e.value||e)}))}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(t){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=t&&t.length?this.options.messages.results(t.length):this.options.messages.noResults,this.liveRegion.children().hide(),e("<div>").text(i).appendTo(this.liveRegion))}}),e.ui.autocomplete;var u,c=/ui-corner-([a-z]){2,6}/g;e.widget("ui.controlgroup",{version:"1.12.1",defaultElement:"<div>",options:{direction:"horizontal",disabled:null,onlyVisible:!0,items:{button:"input[type=button], input[type=submit], input[type=reset], button, a",controlgroupLabel:".ui-controlgroup-label",checkboxradio:"input[type='checkbox'], input[type='radio']",selectmenu:"select",spinner:".ui-spinner-input"}},_create:function(){this._enhance()},_enhance:function(){this.element.attr("role","toolbar"),this.refresh()},_destroy:function(){this._callChildMethod("destroy"),this.childWidgets.removeData("ui-controlgroup-data"),this.element.removeAttr("role"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()},_initWidgets:function(){var t=this,i=[];e.each(this.options.items,(function(n,s){var a,r={};return s?"controlgroupLabel"===n?((a=t.element.find(s)).each((function(){var t=e(this);t.children(".ui-controlgroup-label-contents").length||t.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")})),t._addClass(a,null,"ui-widget ui-widget-content ui-state-default"),void(i=i.concat(a.get()))):void(e.fn[n]&&(r=t["_"+n+"Options"]?t["_"+n+"Options"]("middle"):{classes:{}},t.element.find(s).each((function(){var s=e(this),a=s[n]("instance"),o=e.widget.extend({},r);if("button"!==n||!s.parent(".ui-spinner").length){a||(a=s[n]()[n]("instance")),a&&(o.classes=t._resolveClassesValues(o.classes,a)),s[n](o);var l=s[n]("widget");e.data(l[0],"ui-controlgroup-data",a||s[n]("instance")),i.push(l[0])}})))):void 0})),this.childWidgets=e(e.unique(i)),this._addClass(this.childWidgets,"ui-controlgroup-item")},_callChildMethod:function(t){this.childWidgets.each((function(){var i=e(this).data("ui-controlgroup-data");i&&i[t]&&i[t]()}))},_updateCornerClass:function(e,t){var i=this._buildSimpleOptions(t,"label").classes.label;this._removeClass(e,null,"ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"),this._addClass(e,null,i)},_buildSimpleOptions:function(e,t){var i="vertical"===this.options.direction,n={classes:{}};return n.classes[t]={middle:"",first:"ui-corner-"+(i?"top":"left"),last:"ui-corner-"+(i?"bottom":"right"),only:"ui-corner-all"}[e],n},_spinnerOptions:function(e){var t=this._buildSimpleOptions(e,"ui-spinner");return t.classes["ui-spinner-up"]="",t.classes["ui-spinner-down"]="",t},_buttonOptions:function(e){return this._buildSimpleOptions(e,"ui-button")},_checkboxradioOptions:function(e){return this._buildSimpleOptions(e,"ui-checkboxradio-label")},_selectmenuOptions:function(e){var t="vertical"===this.options.direction;return{width:!!t&&"auto",classes:{middle:{"ui-selectmenu-button-open":"","ui-selectmenu-button-closed":""},first:{"ui-selectmenu-button-open":"ui-corner-"+(t?"top":"tl"),"ui-selectmenu-button-closed":"ui-corner-"+(t?"top":"left")},last:{"ui-selectmenu-button-open":t?"":"ui-corner-tr","ui-selectmenu-button-closed":"ui-corner-"+(t?"bottom":"right")},only:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"}}[e]}},_resolveClassesValues:function(t,i){var n={};return e.each(t,(function(s){var a=i.options.classes[s]||"";a=e.trim(a.replace(c,"")),n[s]=(a+" "+t[s]).replace(/\s+/g," ")})),n},_setOption:function(e,t){return"direction"===e&&this._removeClass("ui-controlgroup-"+this.options.direction),this._super(e,t),"disabled"===e?void this._callChildMethod(t?"disable":"enable"):void this.refresh()},refresh:function(){var t,i=this;this._addClass("ui-controlgroup ui-controlgroup-"+this.options.direction),"horizontal"===this.options.direction&&this._addClass(null,"ui-helper-clearfix"),this._initWidgets(),t=this.childWidgets,this.options.onlyVisible&&(t=t.filter(":visible")),t.length&&(e.each(["first","last"],(function(e,n){var s=t[n]().data("ui-controlgroup-data");if(s&&i["_"+s.widgetName+"Options"]){var a=i["_"+s.widgetName+"Options"](1===t.length?"only":n);a.classes=i._resolveClassesValues(a.classes,s),s.element[s.widgetName](a)}else i._updateCornerClass(t[n](),n)})),this._callChildMethod("refresh"))}}),e.widget("ui.checkboxradio",[e.ui.formResetMixin,{version:"1.12.1",options:{disabled:null,label:null,icon:!0,classes:{"ui-checkboxradio-label":"ui-corner-all","ui-checkboxradio-icon":"ui-corner-all"}},_getCreateOptions:function(){var t,i,n=this,s=this._super()||{};return this._readType(),i=this.element.labels(),this.label=e(i[i.length-1]),this.label.length||e.error("No label found for checkboxradio widget"),this.originalLabel="",this.label.contents().not(this.element[0]).each((function(){n.originalLabel+=3===this.nodeType?e(this).text():this.outerHTML})),this.originalLabel&&(s.label=this.originalLabel),null!=(t=this.element[0].disabled)&&(s.disabled=t),s},_create:function(){var e=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption("disabled",this.options.disabled),this._addClass("ui-checkboxradio","ui-helper-hidden-accessible"),this._addClass(this.label,"ui-checkboxradio-label","ui-button ui-widget"),"radio"===this.type&&this._addClass(this.label,"ui-checkboxradio-radio-label"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),e&&(this._addClass(this.label,"ui-checkboxradio-checked","ui-state-active"),this.icon&&this._addClass(this.icon,null,"ui-state-hover")),this._on({change:"_toggleClasses",focus:function(){this._addClass(this.label,null,"ui-state-focus ui-visual-focus")},blur:function(){this._removeClass(this.label,null,"ui-state-focus ui-visual-focus")}})},_readType:function(){var t=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,"input"===t&&/radio|checkbox/.test(this.type)||e.error("Can't create checkboxradio on element.nodeName="+t+" and element.type="+this.type)},_enhance:function(){this._updateIcon(this.element[0].checked)},widget:function(){return this.label},_getRadioGroup:function(){var t=this.element[0].name,i="input[name='"+e.ui.escapeSelector(t)+"']";return t?(this.form.length?e(this.form[0].elements).filter(i):e(i).filter((function(){return 0===e(this).form().length}))).not(this.element):e([])},_toggleClasses:function(){var t=this.element[0].checked;this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),this.options.icon&&"checkbox"===this.type&&this._toggleClass(this.icon,null,"ui-icon-check ui-state-checked",t)._toggleClass(this.icon,null,"ui-icon-blank",!t),"radio"===this.type&&this._getRadioGroup().each((function(){var t=e(this).checkboxradio("instance");t&&t._removeClass(t.label,"ui-checkboxradio-checked","ui-state-active")}))},_destroy:function(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove())},_setOption:function(e,t){return"label"!==e||t?(this._super(e,t),"disabled"===e?(this._toggleClass(this.label,null,"ui-state-disabled",t),void(this.element[0].disabled=t)):void this.refresh()):void 0},_updateIcon:function(t){var i="ui-icon ui-icon-background ";this.options.icon?(this.icon||(this.icon=e("<span>"),this.iconSpace=e("<span> </span>"),this._addClass(this.iconSpace,"ui-checkboxradio-icon-space")),"checkbox"===this.type?(i+=t?"ui-icon-check ui-state-checked":"ui-icon-blank",this._removeClass(this.icon,null,t?"ui-icon-blank":"ui-icon-check")):i+="ui-icon-blank",this._addClass(this.icon,"ui-checkboxradio-icon",i),t||this._removeClass(this.icon,null,"ui-icon-check ui-state-checked"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon)},_updateLabel:function(){var e=this.label.contents().not(this.element[0]);this.icon&&(e=e.not(this.icon[0])),this.iconSpace&&(e=e.not(this.iconSpace[0])),e.remove(),this.label.append(this.options.label)},refresh:function(){var e=this.element[0].checked,t=this.element[0].disabled;this._updateIcon(e),this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",e),null!==this.options.label&&this._updateLabel(),t!==this.options.disabled&&this._setOptions({disabled:t})}}]),e.ui.checkboxradio,e.widget("ui.button",{version:"1.12.1",defaultElement:"<button>",options:{classes:{"ui-button":"ui-corner-all"},disabled:null,icon:null,iconPosition:"beginning",label:null,showLabel:!0},_getCreateOptions:function(){var e,t=this._super()||{};return this.isInput=this.element.is("input"),null!=(e=this.element[0].disabled)&&(t.disabled=e),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(t.label=this.originalLabel),t},_create:function(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr("title"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass("ui-button","ui-widget"),this._setOption("disabled",this.options.disabled),this._enhance(),this.element.is("a")&&this._on({keyup:function(t){t.keyCode===e.ui.keyCode.SPACE&&(t.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger("click"))}})},_enhance:function(){this.element.is("button")||this.element.attr("role","button"),this.options.icon&&(this._updateIcon("icon",this.options.icon),this._updateTooltip())},_updateTooltip:function(){this.title=this.element.attr("title"),this.options.showLabel||this.title||this.element.attr("title",this.options.label)},_updateIcon:function(t,i){var n="iconPosition"!==t,s=n?this.options.iconPosition:i,a="top"===s||"bottom"===s;this.icon?n&&this._removeClass(this.icon,null,this.options.icon):(this.icon=e("<span>"),this._addClass(this.icon,"ui-button-icon","ui-icon"),this.options.showLabel||this._addClass("ui-button-icon-only")),n&&this._addClass(this.icon,null,i),this._attachIcon(s),a?(this._addClass(this.icon,null,"ui-widget-icon-block"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=e("<span> </span>"),this._addClass(this.iconSpace,"ui-button-icon-space")),this._removeClass(this.icon,null,"ui-wiget-icon-block"),this._attachIconSpace(s))},_destroy:function(){this.element.removeAttr("role"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr("title")},_attachIconSpace:function(e){this.icon[/^(?:end|bottom)/.test(e)?"before":"after"](this.iconSpace)},_attachIcon:function(e){this.element[/^(?:end|bottom)/.test(e)?"append":"prepend"](this.icon)},_setOptions:function(e){var t=void 0===e.showLabel?this.options.showLabel:e.showLabel,i=void 0===e.icon?this.options.icon:e.icon;t||i||(e.showLabel=!0),this._super(e)},_setOption:function(e,t){"icon"===e&&(t?this._updateIcon(e,t):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),"iconPosition"===e&&this._updateIcon(e,t),"showLabel"===e&&(this._toggleClass("ui-button-icon-only",null,!t),this._updateTooltip()),"label"===e&&(this.isInput?this.element.val(t):(this.element.html(t),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(e,t),"disabled"===e&&(this._toggleClass(null,"ui-state-disabled",t),this.element[0].disabled=t,t&&this.element.blur())},refresh:function(){var e=this.element.is("input, button")?this.element[0].disabled:this.element.hasClass("ui-button-disabled");e!==this.options.disabled&&this._setOptions({disabled:e}),this._updateTooltip()}}),!1!==e.uiBackCompat&&(e.widget("ui.button",e.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition="end"),this._super()},_setOption:function(e,t){return"text"===e?void this._super("showLabel",t):("showLabel"===e&&(this.options.text=t),"icon"===e&&(this.options.icons.primary=t),"icons"===e&&(t.primary?(this._super("icon",t.primary),this._super("iconPosition","beginning")):t.secondary&&(this._super("icon",t.secondary),this._super("iconPosition","end"))),void this._superApply(arguments))}}),e.fn.button=function(t){return function(){return!this.length||this.length&&"INPUT"!==this[0].tagName||this.length&&"INPUT"===this[0].tagName&&"checkbox"!==this.attr("type")&&"radio"!==this.attr("type")?t.apply(this,arguments):(e.ui.checkboxradio||e.error("Checkboxradio widget missing"),0===arguments.length?this.checkboxradio({icon:!1}):this.checkboxradio.apply(this,arguments))}}(e.fn.button),e.fn.buttonset=function(){return e.ui.controlgroup||e.error("Controlgroup widget missing"),"option"===arguments[0]&&"items"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],"items.button",arguments[2]]):"option"===arguments[0]&&"items"===arguments[1]?this.controlgroup.apply(this,[arguments[0],"items.button"]):("object"==typeof arguments[0]&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments))}),e.ui.button,e.extend(e.ui,{datepicker:{version:"1.12.1"}}),e.extend(t.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return s(this._defaults,e||{}),this},_attachDatepicker:function(t,i){var n,s,a;s="div"===(n=t.nodeName.toLowerCase())||"span"===n,t.id||(this.uuid+=1,t.id="dp"+this.uuid),(a=this._newInst(e(t),s)).settings=e.extend({},i||{}),"input"===n?this._connectDatepicker(t,a):s&&this._inlineDatepicker(t,a)},_newInst:function(t,n){return{id:t[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1"),input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:n,dpDiv:n?i(e("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(t,i){var n=e(t);i.append=e([]),i.trigger=e([]),n.hasClass(this.markerClassName)||(this._attachments(n,i),n.addClass(this.markerClassName).on("keydown",this._doKeyDown).on("keypress",this._doKeyPress).on("keyup",this._doKeyUp),this._autoSize(i),e.data(t,"datepicker",i),i.settings.disabled&&this._disableDatepicker(t))},_attachments:function(t,i){var n,s,a,r=this._get(i,"appendText"),o=this._get(i,"isRTL");i.append&&i.append.remove(),r&&(i.append=e("<span class='"+this._appendClass+"'>"+r+"</span>"),t[o?"before":"after"](i.append)),t.off("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),("focus"===(n=this._get(i,"showOn"))||"both"===n)&&t.on("focus",this._showDatepicker),("button"===n||"both"===n)&&(s=this._get(i,"buttonText"),a=this._get(i,"buttonImage"),i.trigger=e(this._get(i,"buttonImageOnly")?e("<img/>").addClass(this._triggerClass).attr({src:a,alt:s,title:s}):e("<button type='button'></button>").addClass(this._triggerClass).html(a?e("<img/>").attr({src:a,alt:s,title:s}):s)),t[o?"before":"after"](i.trigger),i.trigger.on("click",(function(){return e.datepicker._datepickerShowing&&e.datepicker._lastInput===t[0]?e.datepicker._hideDatepicker():e.datepicker._datepickerShowing&&e.datepicker._lastInput!==t[0]?(e.datepicker._hideDatepicker(),e.datepicker._showDatepicker(t[0])):e.datepicker._showDatepicker(t[0]),!1})))},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t,i,n,s,a=new Date(2009,11,20),r=this._get(e,"dateFormat");r.match(/[DM]/)&&(t=function(e){for(i=0,n=0,s=0;e.length>s;s++)e[s].length>i&&(i=e[s].length,n=s);return n},a.setMonth(t(this._get(e,r.match(/MM/)?"monthNames":"monthNamesShort"))),a.setDate(t(this._get(e,r.match(/DD/)?"dayNames":"dayNamesShort"))+20-a.getDay())),e.input.attr("size",this._formatDate(e,a).length)}},_inlineDatepicker:function(t,i){var n=e(t);n.hasClass(this.markerClassName)||(n.addClass(this.markerClassName).append(i.dpDiv),e.data(t,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(t),i.dpDiv.css("display","block"))},_dialogDatepicker:function(t,i,n,a,r){var o,l,h,u,c,d=this._dialogInst;return d||(this.uuid+=1,o="dp"+this.uuid,this._dialogInput=e("<input type='text' id='"+o+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.on("keydown",this._doKeyDown),e("body").append(this._dialogInput),(d=this._dialogInst=this._newInst(this._dialogInput,!1)).settings={},e.data(this._dialogInput[0],"datepicker",d)),s(d.settings,a||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=r?r.length?r:[r.pageX,r.pageY]:null,this._pos||(l=document.documentElement.clientWidth,h=document.documentElement.clientHeight,u=document.documentElement.scrollLeft||document.body.scrollLeft,c=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+u,h/2-150+c]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),e.blockUI&&e.blockUI(this.dpDiv),e.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(t){var i,n=e(t),s=e.data(t,"datepicker");n.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),e.removeData(t,"datepicker"),"input"===i?(s.append.remove(),s.trigger.remove(),n.removeClass(this.markerClassName).off("focus",this._showDatepicker).off("keydown",this._doKeyDown).off("keypress",this._doKeyPress).off("keyup",this._doKeyUp)):("div"===i||"span"===i)&&n.removeClass(this.markerClassName).empty(),u===s&&(u=null))},_enableDatepicker:function(t){var i,n,s=e(t),a=e.data(t,"datepicker");s.hasClass(this.markerClassName)&&("input"===(i=t.nodeName.toLowerCase())?(t.disabled=!1,a.trigger.filter("button").each((function(){this.disabled=!1})).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&((n=s.children("."+this._inlineClass)).children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=e.map(this._disabledInputs,(function(e){return e===t?null:e})))},_disableDatepicker:function(t){var i,n,s=e(t),a=e.data(t,"datepicker");s.hasClass(this.markerClassName)&&("input"===(i=t.nodeName.toLowerCase())?(t.disabled=!0,a.trigger.filter("button").each((function(){this.disabled=!0})).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&((n=s.children("."+this._inlineClass)).children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=e.map(this._disabledInputs,(function(e){return e===t?null:e})),this._disabledInputs[this._disabledInputs.length]=t)},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]===e)return!0;return!1},_getInst:function(t){try{return e.data(t,"datepicker")}catch(e){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(t,i,n){var a,r,o,l,h=this._getInst(t);return 2===arguments.length&&"string"==typeof i?"defaults"===i?e.extend({},e.datepicker._defaults):h?"all"===i?e.extend({},h.settings):this._get(h,i):null:(a=i||{},"string"==typeof i&&((a={})[i]=n),void(h&&(this._curInst===h&&this._hideDatepicker(),r=this._getDateDatepicker(t,!0),o=this._getMinMaxDate(h,"min"),l=this._getMinMaxDate(h,"max"),s(h.settings,a),null!==o&&void 0!==a.dateFormat&&void 0===a.minDate&&(h.settings.minDate=this._formatDate(h,o)),null!==l&&void 0!==a.dateFormat&&void 0===a.maxDate&&(h.settings.maxDate=this._formatDate(h,l)),"disabled"in a&&(a.disabled?this._disableDatepicker(t):this._enableDatepicker(t)),this._attachments(e(t),h),this._autoSize(h),this._setDate(h,r),this._updateAlternate(h),this._updateDatepicker(h))))},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(t){var i,n,s,a=e.datepicker._getInst(t.target),r=!0,o=a.dpDiv.is(".ui-datepicker-rtl");if(a._keyEvent=!0,e.datepicker._datepickerShowing)switch(t.keyCode){case 9:e.datepicker._hideDatepicker(),r=!1;break;case 13:return(s=e("td."+e.datepicker._dayOverClass+":not(."+e.datepicker._currentClass+")",a.dpDiv))[0]&&e.datepicker._selectDay(t.target,a.selectedMonth,a.selectedYear,s[0]),(i=e.datepicker._get(a,"onSelect"))?(n=e.datepicker._formatDate(a),i.apply(a.input?a.input[0]:null,[n,a])):e.datepicker._hideDatepicker(),!1;case 27:e.datepicker._hideDatepicker();break;case 33:e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(a,"stepBigMonths"):-e.datepicker._get(a,"stepMonths"),"M");break;case 34:e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(a,"stepBigMonths"):+e.datepicker._get(a,"stepMonths"),"M");break;case 35:(t.ctrlKey||t.metaKey)&&e.datepicker._clearDate(t.target),r=t.ctrlKey||t.metaKey;break;case 36:(t.ctrlKey||t.metaKey)&&e.datepicker._gotoToday(t.target),r=t.ctrlKey||t.metaKey;break;case 37:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,o?1:-1,"D"),r=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(a,"stepBigMonths"):-e.datepicker._get(a,"stepMonths"),"M");break;case 38:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,-7,"D"),r=t.ctrlKey||t.metaKey;break;case 39:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,o?-1:1,"D"),r=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(a,"stepBigMonths"):+e.datepicker._get(a,"stepMonths"),"M");break;case 40:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,7,"D"),r=t.ctrlKey||t.metaKey;break;default:r=!1}else 36===t.keyCode&&t.ctrlKey?e.datepicker._showDatepicker(this):r=!1;r&&(t.preventDefault(),t.stopPropagation())},_doKeyPress:function(t){var i,n,s=e.datepicker._getInst(t.target);return e.datepicker._get(s,"constrainInput")?(i=e.datepicker._possibleChars(e.datepicker._get(s,"dateFormat")),n=String.fromCharCode(null==t.charCode?t.keyCode:t.charCode),t.ctrlKey||t.metaKey||" ">n||!i||i.indexOf(n)>-1):void 0},_doKeyUp:function(t){var i=e.datepicker._getInst(t.target);if(i.input.val()!==i.lastVal)try{e.datepicker.parseDate(e.datepicker._get(i,"dateFormat"),i.input?i.input.val():null,e.datepicker._getFormatConfig(i))&&(e.datepicker._setDateFromField(i),e.datepicker._updateAlternate(i),e.datepicker._updateDatepicker(i))}catch(e){}return!0},_showDatepicker:function(t){var i,n,a,r,o,l,h;"input"!==(t=t.target||t).nodeName.toLowerCase()&&(t=e("input",t.parentNode)[0]),e.datepicker._isDisabledDatepicker(t)||e.datepicker._lastInput===t||(i=e.datepicker._getInst(t),e.datepicker._curInst&&e.datepicker._curInst!==i&&(e.datepicker._curInst.dpDiv.stop(!0,!0),i&&e.datepicker._datepickerShowing&&e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),!1!==(a=(n=e.datepicker._get(i,"beforeShow"))?n.apply(t,[t,i]):{})&&(s(i.settings,a),i.lastVal=null,e.datepicker._lastInput=t,e.datepicker._setDateFromField(i),e.datepicker._inDialog&&(t.value=""),e.datepicker._pos||(e.datepicker._pos=e.datepicker._findPos(t),e.datepicker._pos[1]+=t.offsetHeight),r=!1,e(t).parents().each((function(){return!(r|="fixed"===e(this).css("position"))})),o={left:e.datepicker._pos[0],top:e.datepicker._pos[1]},e.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),e.datepicker._updateDatepicker(i),o=e.datepicker._checkOffset(i,o,r),i.dpDiv.css({position:e.datepicker._inDialog&&e.blockUI?"static":r?"fixed":"absolute",display:"none",left:o.left+"px",top:o.top+"px"}),i.inline||(l=e.datepicker._get(i,"showAnim"),h=e.datepicker._get(i,"duration"),i.dpDiv.css("z-index",function(e){for(var t,i;e.length&&e[0]!==document;){if(("absolute"===(t=e.css("position"))||"relative"===t||"fixed"===t)&&(i=parseInt(e.css("zIndex"),10),!isNaN(i)&&0!==i))return i;e=e.parent()}return 0}(e(t))+1),e.datepicker._datepickerShowing=!0,e.effects&&e.effects.effect[l]?i.dpDiv.show(l,e.datepicker._get(i,"showOptions"),h):i.dpDiv[l||"show"](l?h:null),e.datepicker._shouldFocusInput(i)&&i.input.trigger("focus"),e.datepicker._curInst=i)))},_updateDatepicker:function(t){this.maxRows=4,u=t,t.dpDiv.empty().append(this._generateHTML(t)),this._attachHandlers(t);var i,s=this._getNumberOfMonths(t),a=s[1],r=t.dpDiv.find("."+this._dayOverClass+" a");r.length>0&&n.apply(r.get(0)),t.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),a>1&&t.dpDiv.addClass("ui-datepicker-multi-"+a).css("width",17*a+"em"),t.dpDiv[(1!==s[0]||1!==s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),t.dpDiv[(this._get(t,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),t===e.datepicker._curInst&&e.datepicker._datepickerShowing&&e.datepicker._shouldFocusInput(t)&&t.input.trigger("focus"),t.yearshtml&&(i=t.yearshtml,setTimeout((function(){i===t.yearshtml&&t.yearshtml&&t.dpDiv.find("select.ui-datepicker-year:first").replaceWith(t.yearshtml),i=t.yearshtml=null}),0))},_shouldFocusInput:function(e){return e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&!e.input.is(":focus")},_checkOffset:function(t,i,n){var s=t.dpDiv.outerWidth(),a=t.dpDiv.outerHeight(),r=t.input?t.input.outerWidth():0,o=t.input?t.input.outerHeight():0,l=document.documentElement.clientWidth+(n?0:e(document).scrollLeft()),h=document.documentElement.clientHeight+(n?0:e(document).scrollTop());return i.left-=this._get(t,"isRTL")?s-r:0,i.left-=n&&i.left===t.input.offset().left?e(document).scrollLeft():0,i.top-=n&&i.top===t.input.offset().top+o?e(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>l&&l>s?Math.abs(i.left+s-l):0),i.top-=Math.min(i.top,i.top+a>h&&h>a?Math.abs(a+o):0),i},_findPos:function(t){for(var i,n=this._getInst(t),s=this._get(n,"isRTL");t&&("hidden"===t.type||1!==t.nodeType||e.expr.filters.hidden(t));)t=t[s?"previousSibling":"nextSibling"];return[(i=e(t).offset()).left,i.top]},_hideDatepicker:function(t){var i,n,s,a,r=this._curInst;!r||t&&r!==e.data(t,"datepicker")||this._datepickerShowing&&(i=this._get(r,"showAnim"),n=this._get(r,"duration"),s=function(){e.datepicker._tidyDialog(r)},e.effects&&(e.effects.effect[i]||e.effects[i])?r.dpDiv.hide(i,e.datepicker._get(r,"showOptions"),n,s):r.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?n:null,s),i||s(),this._datepickerShowing=!1,(a=this._get(r,"onClose"))&&a.apply(r.input?r.input[0]:null,[r.input?r.input.val():"",r]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),e.blockUI&&(e.unblockUI(),e("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")},_checkExternalClick:function(t){if(e.datepicker._curInst){var i=e(t.target),n=e.datepicker._getInst(i[0]);(i[0].id!==e.datepicker._mainDivId&&0===i.parents("#"+e.datepicker._mainDivId).length&&!i.hasClass(e.datepicker.markerClassName)&&!i.closest("."+e.datepicker._triggerClass).length&&e.datepicker._datepickerShowing&&(!e.datepicker._inDialog||!e.blockUI)||i.hasClass(e.datepicker.markerClassName)&&e.datepicker._curInst!==n)&&e.datepicker._hideDatepicker()}},_adjustDate:function(t,i,n){var s=e(t),a=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(a,i+("M"===n?this._get(a,"showCurrentAtPos"):0),n),this._updateDatepicker(a))},_gotoToday:function(t){var i,n=e(t),s=this._getInst(n[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(n)},_selectMonthYear:function(t,i,n){var s=e(t),a=this._getInst(s[0]);a["selected"+("M"===n?"Month":"Year")]=a["draw"+("M"===n?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(a),this._adjustDate(s)},_selectDay:function(t,i,n,s){var a,r=e(t);e(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(r[0])||((a=this._getInst(r[0])).selectedDay=a.currentDay=e("a",s).html(),a.selectedMonth=a.currentMonth=i,a.selectedYear=a.currentYear=n,this._selectDate(t,this._formatDate(a,a.currentDay,a.currentMonth,a.currentYear)))},_clearDate:function(t){var i=e(t);this._selectDate(i,"")},_selectDate:function(t,i){var n,s=e(t),a=this._getInst(s[0]);i=null!=i?i:this._formatDate(a),a.input&&a.input.val(i),this._updateAlternate(a),(n=this._get(a,"onSelect"))?n.apply(a.input?a.input[0]:null,[i,a]):a.input&&a.input.trigger("change"),a.inline?this._updateDatepicker(a):(this._hideDatepicker(),this._lastInput=a.input[0],"object"!=typeof a.input[0]&&a.input.trigger("focus"),this._lastInput=null)},_updateAlternate:function(t){var i,n,s,a=this._get(t,"altField");a&&(i=this._get(t,"altFormat")||this._get(t,"dateFormat"),n=this._getDate(t),s=this.formatDate(i,n,this._getFormatConfig(t)),e(a).val(s))},noWeekends:function(e){var t=e.getDay();return[t>0&&6>t,""]},iso8601Week:function(e){var t,i=new Date(e.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),t=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((t-i)/864e5)/7)+1},parseDate:function(t,i,n){if(null==t||null==i)throw"Invalid arguments";if(""==(i="object"==typeof i?""+i:i+""))return null;var s,a,r,o,l=0,h=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff,u="string"!=typeof h?h:(new Date).getFullYear()%100+parseInt(h,10),c=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,d=(n?n.dayNames:null)||this._defaults.dayNames,f=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,p=(n?n.monthNames:null)||this._defaults.monthNames,m=-1,g=-1,v=-1,_=-1,y=!1,b=function(e){var i=t.length>s+1&&t.charAt(s+1)===e;return i&&s++,i},w=function(e){var t=b(e),n="@"===e?14:"!"===e?20:"y"===e&&t?4:"o"===e?3:2,s=RegExp("^\\d{"+("y"===e?n:1)+","+n+"}"),a=i.substring(l).match(s);if(!a)throw"Missing number at position "+l;return l+=a[0].length,parseInt(a[0],10)},k=function(t,n,s){var a=-1,r=e.map(b(t)?s:n,(function(e,t){return[[t,e]]})).sort((function(e,t){return-(e[1].length-t[1].length)}));if(e.each(r,(function(e,t){var n=t[1];return i.substr(l,n.length).toLowerCase()===n.toLowerCase()?(a=t[0],l+=n.length,!1):void 0})),-1!==a)return a+1;throw"Unknown name at position "+l},D=function(){if(i.charAt(l)!==t.charAt(s))throw"Unexpected literal at position "+l;l++};for(s=0;t.length>s;s++)if(y)"'"!==t.charAt(s)||b("'")?D():y=!1;else switch(t.charAt(s)){case"d":v=w("d");break;case"D":k("D",c,d);break;case"o":_=w("o");break;case"m":g=w("m");break;case"M":g=k("M",f,p);break;case"y":m=w("y");break;case"@":m=(o=new Date(w("@"))).getFullYear(),g=o.getMonth()+1,v=o.getDate();break;case"!":m=(o=new Date((w("!")-this._ticksTo1970)/1e4)).getFullYear(),g=o.getMonth()+1,v=o.getDate();break;case"'":b("'")?D():y=!0;break;default:D()}if(i.length>l&&(r=i.substr(l),!/^\s+/.test(r)))throw"Extra/unparsed characters found in date: "+r;if(-1===m?m=(new Date).getFullYear():100>m&&(m+=(new Date).getFullYear()-(new Date).getFullYear()%100+(u>=m?0:-100)),_>-1)for(g=1,v=_;!((a=this._getDaysInMonth(m,g-1))>=v);)g++,v-=a;if((o=this._daylightSavingAdjust(new Date(m,g-1,v))).getFullYear()!==m||o.getMonth()+1!==g||o.getDate()!==v)throw"Invalid date";return o},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864e9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(e,t,i){if(!t)return"";var n,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,a=(i?i.dayNames:null)||this._defaults.dayNames,r=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,o=(i?i.monthNames:null)||this._defaults.monthNames,l=function(t){var i=e.length>n+1&&e.charAt(n+1)===t;return i&&n++,i},h=function(e,t,i){var n=""+t;if(l(e))for(;i>n.length;)n="0"+n;return n},u=function(e,t,i,n){return l(e)?n[t]:i[t]},c="",d=!1;if(t)for(n=0;e.length>n;n++)if(d)"'"!==e.charAt(n)||l("'")?c+=e.charAt(n):d=!1;else switch(e.charAt(n)){case"d":c+=h("d",t.getDate(),2);break;case"D":c+=u("D",t.getDay(),s,a);break;case"o":c+=h("o",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case"m":c+=h("m",t.getMonth()+1,2);break;case"M":c+=u("M",t.getMonth(),r,o);break;case"y":c+=l("y")?t.getFullYear():(10>t.getFullYear()%100?"0":"")+t.getFullYear()%100;break;case"@":c+=t.getTime();break;case"!":c+=1e4*t.getTime()+this._ticksTo1970;break;case"'":l("'")?c+="'":d=!0;break;default:c+=e.charAt(n)}return c},_possibleChars:function(e){var t,i="",n=!1,s=function(i){var n=e.length>t+1&&e.charAt(t+1)===i;return n&&t++,n};for(t=0;e.length>t;t++)if(n)"'"!==e.charAt(t)||s("'")?i+=e.charAt(t):n=!1;else switch(e.charAt(t)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":s("'")?i+="'":n=!0;break;default:i+=e.charAt(t)}return i},_get:function(e,t){return void 0!==e.settings[t]?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()!==e.lastVal){var i=this._get(e,"dateFormat"),n=e.lastVal=e.input?e.input.val():null,s=this._getDefaultDate(e),a=s,r=this._getFormatConfig(e);try{a=this.parseDate(i,n,r)||s}catch(e){n=t?"":n}e.selectedDay=a.getDate(),e.drawMonth=e.selectedMonth=a.getMonth(),e.drawYear=e.selectedYear=a.getFullYear(),e.currentDay=n?a.getDate():0,e.currentMonth=n?a.getMonth():0,e.currentYear=n?a.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(t,i,n){var s=null==i||""===i?n:"string"==typeof i?function(i){try{return e.datepicker.parseDate(e.datepicker._get(t,"dateFormat"),i,e.datepicker._getFormatConfig(t))}catch(e){}for(var n=(i.toLowerCase().match(/^c/)?e.datepicker._getDate(t):null)||new Date,s=n.getFullYear(),a=n.getMonth(),r=n.getDate(),o=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,l=o.exec(i);l;){switch(l[2]||"d"){case"d":case"D":r+=parseInt(l[1],10);break;case"w":case"W":r+=7*parseInt(l[1],10);break;case"m":case"M":a+=parseInt(l[1],10),r=Math.min(r,e.datepicker._getDaysInMonth(s,a));break;case"y":case"Y":s+=parseInt(l[1],10),r=Math.min(r,e.datepicker._getDaysInMonth(s,a))}l=o.exec(i)}return new Date(s,a,r)}(i):"number"==typeof i?isNaN(i)?n:function(e){var t=new Date;return t.setDate(t.getDate()+e),t}(i):new Date(i.getTime());return(s=s&&"Invalid Date"==""+s?n:s)&&(s.setHours(0),s.setMinutes(0),s.setSeconds(0),s.setMilliseconds(0)),this._daylightSavingAdjust(s)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var n=!t,s=e.selectedMonth,a=e.selectedYear,r=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=r.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=r.getMonth(),e.drawYear=e.selectedYear=e.currentYear=r.getFullYear(),s===e.selectedMonth&&a===e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(n?"":this._formatDate(e))},_getDate:function(e){return!e.currentYear||e.input&&""===e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay))},_attachHandlers:function(t){var i=this._get(t,"stepMonths"),n="#"+t.id.replace(/\\\\/g,"\\");t.dpDiv.find("[data-handler]").map((function(){var t={prev:function(){e.datepicker._adjustDate(n,-i,"M")},next:function(){e.datepicker._adjustDate(n,+i,"M")},hide:function(){e.datepicker._hideDatepicker()},today:function(){e.datepicker._gotoToday(n)},selectDay:function(){return e.datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return e.datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return e.datepicker._selectMonthYear(n,this,"Y"),!1}};e(this).on(this.getAttribute("data-event"),t[this.getAttribute("data-handler")])}))},_generateHTML:function(e){var t,i,n,s,a,r,o,l,h,u,c,d,f,p,m,g,v,_,y,b,w,k,D,x,C,M,S,T,P,O,Y,I,A,N,H,E,W,L,z,R=new Date,F=this._daylightSavingAdjust(new Date(R.getFullYear(),R.getMonth(),R.getDate())),j=this._get(e,"isRTL"),V=this._get(e,"showButtonPanel"),U=this._get(e,"hideIfNoPrevNext"),B=this._get(e,"navigationAsDateFormat"),q=this._getNumberOfMonths(e),G=this._get(e,"showCurrentAtPos"),$=this._get(e,"stepMonths"),K=1!==q[0]||1!==q[1],Z=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),X=this._getMinMaxDate(e,"min"),J=this._getMinMaxDate(e,"max"),Q=e.drawMonth-G,ee=e.drawYear;if(0>Q&&(Q+=12,ee--),J)for(t=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-q[0]*q[1]+1,J.getDate())),t=X&&X>t?X:t;this._daylightSavingAdjust(new Date(ee,Q,1))>t;)0>--Q&&(Q=11,ee--);for(e.drawMonth=Q,e.drawYear=ee,i=this._get(e,"prevText"),i=B?this.formatDate(i,this._daylightSavingAdjust(new Date(ee,Q-$,1)),this._getFormatConfig(e)):i,n=this._canAdjustMonth(e,-1,ee,Q)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"e":"w")+"'>"+i+"</span></a>":U?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"e":"w")+"'>"+i+"</span></a>",s=this._get(e,"nextText"),s=B?this.formatDate(s,this._daylightSavingAdjust(new Date(ee,Q+$,1)),this._getFormatConfig(e)):s,a=this._canAdjustMonth(e,1,ee,Q)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"w":"e")+"'>"+s+"</span></a>":U?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"w":"e")+"'>"+s+"</span></a>",r=this._get(e,"currentText"),o=this._get(e,"gotoCurrent")&&e.currentDay?Z:F,r=B?this.formatDate(r,o,this._getFormatConfig(e)):r,l=e.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(e,"closeText")+"</button>",h=V?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(j?l:"")+(this._isInRange(e,o)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+r+"</button>":"")+(j?"":l)+"</div>":"",u=parseInt(this._get(e,"firstDay"),10),u=isNaN(u)?0:u,c=this._get(e,"showWeek"),d=this._get(e,"dayNames"),f=this._get(e,"dayNamesMin"),p=this._get(e,"monthNames"),m=this._get(e,"monthNamesShort"),g=this._get(e,"beforeShowDay"),v=this._get(e,"showOtherMonths"),_=this._get(e,"selectOtherMonths"),y=this._getDefaultDate(e),b="",k=0;q[0]>k;k++){for(D="",this.maxRows=4,x=0;q[1]>x;x++){if(C=this._daylightSavingAdjust(new Date(ee,Q,e.selectedDay)),M=" ui-corner-all",S="",K){if(S+="<div class='ui-datepicker-group",q[1]>1)switch(x){case 0:S+=" ui-datepicker-group-first",M=" ui-corner-"+(j?"right":"left");break;case q[1]-1:S+=" ui-datepicker-group-last",M=" ui-corner-"+(j?"left":"right");break;default:S+=" ui-datepicker-group-middle",M=""}S+="'>"}for(S+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+M+"'>"+(/all|left/.test(M)&&0===k?j?a:n:"")+(/all|right/.test(M)&&0===k?j?n:a:"")+this._generateMonthYearHeader(e,Q,ee,X,J,k>0||x>0,p,m)+"</div><table class='ui-datepicker-calendar'><thead><tr>",T=c?"<th class='ui-datepicker-week-col'>"+this._get(e,"weekHeader")+"</th>":"",w=0;7>w;w++)T+="<th scope='col'"+((w+u+6)%7>=5?" class='ui-datepicker-week-end'":"")+"><span title='"+d[P=(w+u)%7]+"'>"+f[P]+"</span></th>";for(S+=T+"</tr></thead><tbody>",O=this._getDaysInMonth(ee,Q),ee===e.selectedYear&&Q===e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,O)),Y=(this._getFirstDayOfMonth(ee,Q)-u+7)%7,I=Math.ceil((Y+O)/7),A=K&&this.maxRows>I?this.maxRows:I,this.maxRows=A,N=this._daylightSavingAdjust(new Date(ee,Q,1-Y)),H=0;A>H;H++){for(S+="<tr>",E=c?"<td class='ui-datepicker-week-col'>"+this._get(e,"calculateWeek")(N)+"</td>":"",w=0;7>w;w++)W=g?g.apply(e.input?e.input[0]:null,[N]):[!0,""],z=(L=N.getMonth()!==Q)&&!_||!W[0]||X&&X>N||J&&N>J,E+="<td class='"+((w+u+6)%7>=5?" ui-datepicker-week-end":"")+(L?" ui-datepicker-other-month":"")+(N.getTime()===C.getTime()&&Q===e.selectedMonth&&e._keyEvent||y.getTime()===N.getTime()&&y.getTime()===C.getTime()?" "+this._dayOverClass:"")+(z?" "+this._unselectableClass+" ui-state-disabled":"")+(L&&!v?"":" "+W[1]+(N.getTime()===Z.getTime()?" "+this._currentClass:"")+(N.getTime()===F.getTime()?" ui-datepicker-today":""))+"'"+(L&&!v||!W[2]?"":" title='"+W[2].replace(/'/g,"&#39;")+"'")+(z?"":" data-handler='selectDay' data-event='click' data-month='"+N.getMonth()+"' data-year='"+N.getFullYear()+"'")+">"+(L&&!v?"&#xa0;":z?"<span class='ui-state-default'>"+N.getDate()+"</span>":"<a class='ui-state-default"+(N.getTime()===F.getTime()?" ui-state-highlight":"")+(N.getTime()===Z.getTime()?" ui-state-active":"")+(L?" ui-priority-secondary":"")+"' href='#'>"+N.getDate()+"</a>")+"</td>",N.setDate(N.getDate()+1),N=this._daylightSavingAdjust(N);S+=E+"</tr>"}++Q>11&&(Q=0,ee++),D+=S+="</tbody></table>"+(K?"</div>"+(q[0]>0&&x===q[1]-1?"<div class='ui-datepicker-row-break'></div>":""):"")}b+=D}return b+=h,e._keyEvent=!1,b},_generateMonthYearHeader:function(e,t,i,n,s,a,r,o){var l,h,u,c,d,f,p,m,g=this._get(e,"changeMonth"),v=this._get(e,"changeYear"),_=this._get(e,"showMonthAfterYear"),y="<div class='ui-datepicker-title'>",b="";if(a||!g)b+="<span class='ui-datepicker-month'>"+r[t]+"</span>";else{for(l=n&&n.getFullYear()===i,h=s&&s.getFullYear()===i,b+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",u=0;12>u;u++)(!l||u>=n.getMonth())&&(!h||s.getMonth()>=u)&&(b+="<option value='"+u+"'"+(u===t?" selected='selected'":"")+">"+o[u]+"</option>");b+="</select>"}if(_||(y+=b+(!a&&g&&v?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",a||!v)y+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(c=this._get(e,"yearRange").split(":"),d=(new Date).getFullYear(),p=(f=function(e){var t=e.match(/c[+\-].*/)?i+parseInt(e.substring(1),10):e.match(/[+\-].*/)?d+parseInt(e,10):parseInt(e,10);return isNaN(t)?d:t})(c[0]),m=Math.max(p,f(c[1]||"")),p=n?Math.max(p,n.getFullYear()):p,m=s?Math.min(m,s.getFullYear()):m,e.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";m>=p;p++)e.yearshtml+="<option value='"+p+"'"+(p===i?" selected='selected'":"")+">"+p+"</option>";e.yearshtml+="</select>",y+=e.yearshtml,e.yearshtml=null}return y+=this._get(e,"yearSuffix"),_&&(y+=(!a&&g&&v?"":"&#xa0;")+b),y+"</div>"},_adjustInstDate:function(e,t,i){var n=e.selectedYear+("Y"===i?t:0),s=e.selectedMonth+("M"===i?t:0),a=Math.min(e.selectedDay,this._getDaysInMonth(n,s))+("D"===i?t:0),r=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(n,s,a)));e.selectedDay=r.getDate(),e.drawMonth=e.selectedMonth=r.getMonth(),e.drawYear=e.selectedYear=r.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),n=this._getMinMaxDate(e,"max"),s=i&&i>t?i:t;return n&&s>n?n:s},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,n){var s=this._getNumberOfMonths(e),a=this._daylightSavingAdjust(new Date(i,n+(0>t?t:s[0]*s[1]),1));return 0>t&&a.setDate(this._getDaysInMonth(a.getFullYear(),a.getMonth())),this._isInRange(e,a)},_isInRange:function(e,t){var i,n,s=this._getMinMaxDate(e,"min"),a=this._getMinMaxDate(e,"max"),r=null,o=null,l=this._get(e,"yearRange");return l&&(i=l.split(":"),n=(new Date).getFullYear(),r=parseInt(i[0],10),o=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(r+=n),i[1].match(/[+\-].*/)&&(o+=n)),(!s||t.getTime()>=s.getTime())&&(!a||t.getTime()<=a.getTime())&&(!r||t.getFullYear()>=r)&&(!o||o>=t.getFullYear())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return{shortYearCutoff:t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,n){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var s=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(n,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),s,this._getFormatConfig(e))}}),e.fn.datepicker=function(t){if(!this.length)return this;e.datepicker.initialized||(e(document).on("mousedown",e.datepicker._checkExternalClick),e.datepicker.initialized=!0),0===e("#"+e.datepicker._mainDivId).length&&e("body").append(e.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof t||"isDisabled"!==t&&"getDate"!==t&&"widget"!==t?"option"===t&&2===arguments.length&&"string"==typeof arguments[1]?e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this[0]].concat(i)):this.each((function(){"string"==typeof t?e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this].concat(i)):e.datepicker._attachDatepicker(this,t)})):e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this[0]].concat(i))},e.datepicker=new t,e.datepicker.initialized=!1,e.datepicker.uuid=(new Date).getTime(),e.datepicker.version="1.12.1",e.datepicker,e.widget("ui.dialog",{version:"1.12.1",options:{appendTo:"body",autoOpen:!0,buttons:[],classes:{"ui-dialog":"ui-corner-all","ui-dialog-titlebar":"ui-corner-all"},closeOnEscape:!0,closeText:"Close",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var i=e(this).css(t).offset().top;0>i&&e(this).css("top",t.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr("title").appendTo(this.uiDialog),this._addClass("ui-dialog-content","ui-widget-content"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&e.fn.draggable&&this._makeDraggable(),this.options.resizable&&e.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var t=this.options.appendTo;return t&&(t.jquery||t.nodeType)?e(t):this.document.find(t||"body").eq(0)},_destroy:function(){var e,t=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),(e=t.parent.children().eq(t.index)).length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},disable:e.noop,enable:e.noop,close:function(t){var i=this;this._isOpen&&!1!==this._trigger("beforeClose",t)&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(":focusable").trigger("focus").length||e.ui.safeBlur(e.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,(function(){i._trigger("close",t)})))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(t,i){var n=!1,s=this.uiDialog.siblings(".ui-front:visible").map((function(){return+e(this).css("z-index")})).get(),a=Math.max.apply(null,s);return a>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",a+1),n=!0),n&&!i&&this._trigger("focus",t),n},open:function(){var t=this;return this._isOpen?void(this._moveToTop()&&this._focusTabbable()):(this._isOpen=!0,this.opener=e(e.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,(function(){t._focusTabbable(),t._trigger("focus")})),this._makeFocusTarget(),void this._trigger("open"))},_focusTabbable:function(){var e=this._focusedElement;e||(e=this.element.find("[autofocus]")),e.length||(e=this.element.find(":tabbable")),e.length||(e=this.uiDialogButtonPane.find(":tabbable")),e.length||(e=this.uiDialogTitlebarClose.filter(":tabbable")),e.length||(e=this.uiDialog),e.eq(0).trigger("focus")},_keepFocus:function(t){function i(){var t=e.ui.safeActiveElement(this.document[0]);this.uiDialog[0]===t||e.contains(this.uiDialog[0],t)||this._focusTabbable()}t.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=e("<div>").hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,"ui-dialog","ui-widget ui-widget-content ui-front"),this._on(this.uiDialog,{keydown:function(t){if(this.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE)return t.preventDefault(),void this.close(t);if(t.keyCode===e.ui.keyCode.TAB&&!t.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),n=i.filter(":first"),s=i.filter(":last");t.target!==s[0]&&t.target!==this.uiDialog[0]||t.shiftKey?t.target!==n[0]&&t.target!==this.uiDialog[0]||!t.shiftKey||(this._delay((function(){s.trigger("focus")})),t.preventDefault()):(this._delay((function(){n.trigger("focus")})),t.preventDefault())}},mousedown:function(e){this._moveToTop(e)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var t;this.uiDialogTitlebar=e("<div>"),this._addClass(this.uiDialogTitlebar,"ui-dialog-titlebar","ui-widget-header ui-helper-clearfix"),this._on(this.uiDialogTitlebar,{mousedown:function(t){e(t.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.trigger("focus")}}),this.uiDialogTitlebarClose=e("<button type='button'></button>").button({label:e("<a>").text(this.options.closeText).html(),icon:"ui-icon-closethick",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,"ui-dialog-titlebar-close"),this._on(this.uiDialogTitlebarClose,{click:function(e){e.preventDefault(),this.close(e)}}),t=e("<span>").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(t,"ui-dialog-title"),this._title(t),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({"aria-labelledby":t.attr("id")})},_title:function(e){this.options.title?e.text(this.options.title):e.html("&#160;")},_createButtonPane:function(){this.uiDialogButtonPane=e("<div>"),this._addClass(this.uiDialogButtonPane,"ui-dialog-buttonpane","ui-widget-content ui-helper-clearfix"),this.uiButtonSet=e("<div>").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,"ui-dialog-buttonset"),this._createButtons()},_createButtons:function(){var t=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),e.isEmptyObject(i)||e.isArray(i)&&!i.length?void this._removeClass(this.uiDialog,"ui-dialog-buttons"):(e.each(i,(function(i,n){var s,a;n=e.isFunction(n)?{click:n,text:i}:n,n=e.extend({type:"button"},n),s=n.click,a={icon:n.icon,iconPosition:n.iconPosition,showLabel:n.showLabel,icons:n.icons,text:n.text},delete n.click,delete n.icon,delete n.iconPosition,delete n.showLabel,delete n.icons,"boolean"==typeof n.text&&delete n.text,e("<button></button>",n).button(a).appendTo(t.uiButtonSet).on("click",(function(){s.apply(t.element[0],arguments)}))})),this._addClass(this.uiDialog,"ui-dialog-buttons"),void this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){function t(e){return{position:e.position,offset:e.offset}}var i=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,s){i._addClass(e(this),"ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",n,t(s))},drag:function(e,n){i._trigger("drag",e,t(n))},stop:function(s,a){var r=a.offset.left-i.document.scrollLeft(),o=a.offset.top-i.document.scrollTop();n.position={my:"left top",at:"left"+(r>=0?"+":"")+r+" top"+(o>=0?"+":"")+o,of:i.window},i._removeClass(e(this),"ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",s,t(a))}})},_makeResizable:function(){function t(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}var i=this,n=this.options,s=n.resizable,a=this.uiDialog.css("position"),r="string"==typeof s?s:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:n.maxWidth,maxHeight:n.maxHeight,minWidth:n.minWidth,minHeight:this._minHeight(),handles:r,start:function(n,s){i._addClass(e(this),"ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",n,t(s))},resize:function(e,n){i._trigger("resize",e,t(n))},stop:function(s,a){var r=i.uiDialog.offset(),o=r.left-i.document.scrollLeft(),l=r.top-i.document.scrollTop();n.height=i.uiDialog.height(),n.width=i.uiDialog.width(),n.position={my:"left top",at:"left"+(o>=0?"+":"")+o+" top"+(l>=0?"+":"")+l,of:i.window},i._removeClass(e(this),"ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",s,t(a))}}).css("position",a)},_trackFocus:function(){this._on(this.widget(),{focusin:function(t){this._makeFocusTarget(),this._focusedElement=e(t.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var t=this._trackingInstances(),i=e.inArray(this,t);-1!==i&&t.splice(i,1)},_trackingInstances:function(){var e=this.document.data("ui-dialog-instances");return e||(e=[],this.document.data("ui-dialog-instances",e)),e},_minHeight:function(){var e=this.options;return"auto"===e.height?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(){var e=this.uiDialog.is(":visible");e||this.uiDialog.show(),this.uiDialog.position(this.options.position),e||this.uiDialog.hide()},_setOptions:function(t){var i=this,n=!1,s={};e.each(t,(function(e,t){i._setOption(e,t),e in i.sizeRelatedOptions&&(n=!0),e in i.resizableRelatedOptions&&(s[e]=t)})),n&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(t,i){var n,s,a=this.uiDialog;"disabled"!==t&&(this._super(t,i),"appendTo"===t&&this.uiDialog.appendTo(this._appendTo()),"buttons"===t&&this._createButtons(),"closeText"===t&&this.uiDialogTitlebarClose.button({label:e("<a>").text(""+this.options.closeText).html()}),"draggable"===t&&((n=a.is(":data(ui-draggable)"))&&!i&&a.draggable("destroy"),!n&&i&&this._makeDraggable()),"position"===t&&this._position(),"resizable"===t&&((s=a.is(":data(ui-resizable)"))&&!i&&a.resizable("destroy"),s&&"string"==typeof i&&a.resizable("option","handles",i),s||!1===i||this._makeResizable()),"title"===t&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var e,t,i,n=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),n.minWidth>n.width&&(n.width=n.minWidth),e=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),t=Math.max(0,n.minHeight-e),i="number"==typeof n.maxHeight?Math.max(0,n.maxHeight-e):"none","auto"===n.height?this.element.css({minHeight:t,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,n.height-e)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map((function(){var t=e(this);return e("<div>").css({position:"absolute",width:t.outerWidth(),height:t.outerHeight()}).appendTo(t.parent()).offset(t.offset())[0]}))},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(t){return!!e(t.target).closest(".ui-dialog").length||!!e(t.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var t=!0;this._delay((function(){t=!1})),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(e){t||this._allowInteraction(e)||(e.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=e("<div>").appendTo(this._appendTo()),this._addClass(this.overlay,null,"ui-widget-overlay ui-front"),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var e=this.document.data("ui-dialog-overlays")-1;e?this.document.data("ui-dialog-overlays",e):(this._off(this.document,"focusin"),this.document.removeData("ui-dialog-overlays")),this.overlay.remove(),this.overlay=null}}}),!1!==e.uiBackCompat&&e.widget("ui.dialog",e.ui.dialog,{options:{dialogClass:""},_createWrapper:function(){this._super(),this.uiDialog.addClass(this.options.dialogClass)},_setOption:function(e,t){"dialogClass"===e&&this.uiDialog.removeClass(this.options.dialogClass).addClass(t),this._superApply(arguments)}}),e.ui.dialog,e.widget("ui.progressbar",{version:"1.12.1",options:{classes:{"ui-progressbar":"ui-corner-all","ui-progressbar-value":"ui-corner-left","ui-progressbar-complete":"ui-corner-right"},max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:"progressbar","aria-valuemin":this.min}),this._addClass("ui-progressbar","ui-widget ui-widget-content"),this.valueDiv=e("<div>").appendTo(this.element),this._addClass(this.valueDiv,"ui-progressbar-value","ui-widget-header"),this._refreshValue()},_destroy:function(){this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),this.valueDiv.remove()},value:function(e){return void 0===e?this.options.value:(this.options.value=this._constrainedValue(e),void this._refreshValue())},_constrainedValue:function(e){return void 0===e&&(e=this.options.value),this.indeterminate=!1===e,"number"!=typeof e&&(e=0),!this.indeterminate&&Math.min(this.options.max,Math.max(this.min,e))},_setOptions:function(e){var t=e.value;delete e.value,this._super(e),this.options.value=this._constrainedValue(t),this._refreshValue()},_setOption:function(e,t){"max"===e&&(t=Math.max(this.min,t)),this._super(e,t)},_setOptionDisabled:function(e){this._super(e),this.element.attr("aria-disabled",e),this._toggleClass(null,"ui-state-disabled",!!e)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var t=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||t>this.min).width(i.toFixed(0)+"%"),this._toggleClass(this.valueDiv,"ui-progressbar-complete",null,t===this.options.max)._toggleClass("ui-progressbar-indeterminate",null,this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=e("<div>").appendTo(this.valueDiv),this._addClass(this.overlayDiv,"ui-progressbar-overlay"))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":t}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==t&&(this.oldValue=t,this._trigger("change")),t===this.options.max&&this._trigger("complete")}}),e.widget("ui.selectmenu",[e.ui.formResetMixin,{version:"1.12.1",defaultElement:"<select>",options:{appendTo:null,classes:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"},disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function(){var t=this.element.uniqueId().attr("id");this.ids={element:t,button:t+"-button",menu:t+"-menu"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=e()},_drawButton:function(){var t,i=this,n=this._parseOption(this.element.find("option:selected"),this.element[0].selectedIndex);this.labels=this.element.labels().attr("for",this.ids.button),this._on(this.labels,{click:function(e){this.button.focus(),e.preventDefault()}}),this.element.hide(),this.button=e("<span>",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true",title:this.element.attr("title")}).insertAfter(this.element),this._addClass(this.button,"ui-selectmenu-button ui-selectmenu-button-closed","ui-button ui-widget"),t=e("<span>").appendTo(this.button),this._addClass(t,"ui-selectmenu-icon","ui-icon "+this.options.icons.button),this.buttonItem=this._renderButtonItem(n).appendTo(this.button),!1!==this.options.width&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",(function(){i._rendered||i._refreshMenu()}))},_drawMenu:function(){var t=this;this.menu=e("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=e("<div>").append(this.menu),this._addClass(this.menuWrap,"ui-selectmenu-menu","ui-front"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{"ui-menu":"ui-corner-bottom"},role:"listbox",select:function(e,i){e.preventDefault(),t._setSelection(),t._select(i.item.data("ui-selectmenu-item"),e)},focus:function(e,i){var n=i.item.data("ui-selectmenu-item");null!=t.focusIndex&&n.index!==t.focusIndex&&(t._trigger("focus",e,{item:n}),t.isOpen||t._select(n,e)),t.focusIndex=n.index,t.button.attr("aria-activedescendant",t.menuItems.eq(n.index).attr("id"))}}).menu("instance"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item")||{})),null===this.options.width&&this._resizeButton()},_refreshMenu:function(){var e,t=this.element.find("option");this.menu.empty(),this._parseOptions(t),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),this._rendered=!0,t.length&&(e=this._getSelectedItem(),this.menuInstance.focus(null,e),this._setAria(e.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(e){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(".ui-state-active"),null,"ui-state-active"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",e)))},_position:function(){this.menuWrap.position(e.extend({of:this.button},this.options.position))},close:function(e){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",e))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderButtonItem:function(t){var i=e("<span>");return this._setText(i,t.label),this._addClass(i,"ui-selectmenu-text"),i},_renderMenu:function(t,i){var n=this,s="";e.each(i,(function(i,a){var r;a.optgroup!==s&&(r=e("<li>",{text:a.optgroup}),n._addClass(r,"ui-selectmenu-optgroup","ui-menu-divider"+(a.element.parent("optgroup").prop("disabled")?" ui-state-disabled":"")),r.appendTo(t),s=a.optgroup),n._renderItemData(t,a)}))},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-selectmenu-item",t)},_renderItem:function(t,i){var n=e("<li>"),s=e("<div>",{title:i.element.attr("title")});return i.disabled&&this._addClass(n,null,"ui-state-disabled"),this._setText(s,i.label),n.append(s).appendTo(t)},_setText:function(e,t){t?e.text(t):e.html("&#160;")},_move:function(e,t){var i,n,s=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent("li"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent("li"),s+=":not(.ui-state-disabled)"),(n="first"===e||"last"===e?i["first"===e?"prevAll":"nextAll"](s).eq(-1):i[e+"All"](s).eq(0)).length&&this.menuInstance.focus(t,n)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex).parent("li")},_toggle:function(e){this[this.isOpen?"close":"open"](e)},_setSelection:function(){var e;this.range&&(window.getSelection?((e=window.getSelection()).removeAllRanges(),e.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(t){this.isOpen&&(e(t.target).closest(".ui-selectmenu-menu, #"+e.ui.escapeSelector(this.ids.button)).length||this.close(t))}},_buttonEvents:{mousedown:function(){var e;window.getSelection?(e=window.getSelection()).rangeCount&&(this.range=e.getRangeAt(0)):this.range=document.selection.createRange()},click:function(e){this._setSelection(),this._toggle(e)},keydown:function(t){var i=!0;switch(t.keyCode){case e.ui.keyCode.TAB:case e.ui.keyCode.ESCAPE:this.close(t),i=!1;break;case e.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(t);break;case e.ui.keyCode.UP:t.altKey?this._toggle(t):this._move("prev",t);break;case e.ui.keyCode.DOWN:t.altKey?this._toggle(t):this._move("next",t);break;case e.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(t):this._toggle(t);break;case e.ui.keyCode.LEFT:this._move("prev",t);break;case e.ui.keyCode.RIGHT:this._move("next",t);break;case e.ui.keyCode.HOME:case e.ui.keyCode.PAGE_UP:this._move("first",t);break;case e.ui.keyCode.END:case e.ui.keyCode.PAGE_DOWN:this._move("last",t);break;default:this.menu.trigger(t),i=!1}i&&t.preventDefault()}},_selectFocusedItem:function(e){var t=this.menuItems.eq(this.focusIndex).parent("li");t.hasClass("ui-state-disabled")||this._select(t.data("ui-selectmenu-item"),e)},_select:function(e,t){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=e.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(e)),this._setAria(e),this._trigger("select",t,{item:e}),e.index!==i&&this._trigger("change",t,{item:e}),this.close(t)},_setAria:function(e){var t=this.menuItems.eq(e.index).attr("id");this.button.attr({"aria-labelledby":t,"aria-activedescendant":t}),this.menu.attr("aria-activedescendant",t)},_setOption:function(e,t){if("icons"===e){var i=this.button.find("span.ui-icon");this._removeClass(i,null,this.options.icons.button)._addClass(i,null,t.button)}this._super(e,t),"appendTo"===e&&this.menuWrap.appendTo(this._appendTo()),"width"===e&&this._resizeButton()},_setOptionDisabled:function(e){this._super(e),this.menuInstance.option("disabled",e),this.button.attr("aria-disabled",e),this._toggleClass(this.button,null,"ui-state-disabled",e),this.element.prop("disabled",e),e?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front, dialog")),t.length||(t=this.document[0].body),t},_toggleAttr:function(){this.button.attr("aria-expanded",this.isOpen),this._removeClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"closed":"open"))._addClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"open":"closed"))._toggleClass(this.menuWrap,"ui-selectmenu-open",null,this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var e=this.options.width;return!1===e?void this.button.css("width",""):(null===e&&(e=this.element.show().outerWidth(),this.element.hide()),void this.button.outerWidth(e))},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){var e=this._super();return e.disabled=this.element.prop("disabled"),e},_parseOptions:function(t){var i=this,n=[];t.each((function(t,s){n.push(i._parseOption(e(s),t))})),this.items=n},_parseOption:function(e,t){var i=e.parent("optgroup");return{element:e,index:t,value:e.val(),label:e.text(),optgroup:i.attr("label")||"",disabled:i.prop("disabled")||e.prop("disabled")}},_destroy:function(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr("for",this.ids.element)}}]),e.widget("ui.slider",e.ui.mouse,{version:"1.12.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var t,i,n=this.options,s=this.element.find(".ui-slider-handle"),a=[];for(i=n.values&&n.values.length||1,s.length>i&&(s.slice(i).remove(),s=s.slice(0,i)),t=s.length;i>t;t++)a.push("<span tabindex='0'></span>");this.handles=s.add(e(a.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each((function(t){e(this).data("ui-slider-handle-index",t).attr("tabIndex",0)}))},_createRange:function(){var t=this.options;t.range?(!0===t.range&&(t.values?t.values.length&&2!==t.values.length?t.values=[t.values[0],t.values[0]]:e.isArray(t.values)&&(t.values=t.values.slice(0)):t.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=e("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),("min"===t.range||"max"===t.range)&&this._addClass(this.range,"ui-slider-range-"+t.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(t){var i,n,s,a,r,o,l,h=this,u=this.options;return!u.disabled&&(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:t.pageX,y:t.pageY},n=this._normValueFromMouse(i),s=this._valueMax()-this._valueMin()+1,this.handles.each((function(t){var i=Math.abs(n-h.values(t));(s>i||s===i&&(t===h._lastChangedValue||h.values(t)===u.min))&&(s=i,a=e(this),r=t)})),!1!==this._start(t,r)&&(this._mouseSliding=!0,this._handleIndex=r,this._addClass(a,null,"ui-state-active"),a.trigger("focus"),o=a.offset(),l=!e(t.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=l?{left:0,top:0}:{left:t.pageX-o.left-a.width()/2,top:t.pageY-o.top-a.height()/2-(parseInt(a.css("borderTopWidth"),10)||0)-(parseInt(a.css("borderBottomWidth"),10)||0)+(parseInt(a.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,r,n),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},i=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,i),!1},_mouseStop:function(e){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,i,n,s,a;return"horizontal"===this.orientation?(t=this.elementSize.width,i=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,i=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),(n=i/t)>1&&(n=1),0>n&&(n=0),"vertical"===this.orientation&&(n=1-n),s=this._valueMax()-this._valueMin(),a=this._valueMin()+n*s,this._trimAlignValue(a)},_uiHash:function(e,t,i){var n={handle:this.handles[e],handleIndex:e,value:void 0!==t?t:this.value()};return this._hasMultipleValues()&&(n.value=void 0!==t?t:this.values(e),n.values=i||this.values()),n},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(e,t){return this._trigger("start",e,this._uiHash(t))},_slide:function(e,t,i){var n,s=this.value(),a=this.values();this._hasMultipleValues()&&(n=this.values(t?0:1),s=this.values(t),2===this.options.values.length&&!0===this.options.range&&(i=0===t?Math.min(n,i):Math.max(n,i)),a[t]=i),i!==s&&!1!==this._trigger("slide",e,this._uiHash(t,i,a))&&(this._hasMultipleValues()?this.values(t,i):this.value(i))},_stop:function(e,t){this._trigger("stop",e,this._uiHash(t))},_change:function(e,t){this._keySliding||this._mouseSliding||(this._lastChangedValue=t,this._trigger("change",e,this._uiHash(t)))},value:function(e){return arguments.length?(this.options.value=this._trimAlignValue(e),this._refreshValue(),void this._change(null,0)):this._value()},values:function(t,i){var n,s,a;if(arguments.length>1)return this.options.values[t]=this._trimAlignValue(i),this._refreshValue(),void this._change(null,t);if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this._hasMultipleValues()?this._values(t):this.value();for(n=this.options.values,s=arguments[0],a=0;n.length>a;a+=1)n[a]=this._trimAlignValue(s[a]),this._change(null,a);this._refreshValue()},_setOption:function(t,i){var n,s=0;switch("range"===t&&!0===this.options.range&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),e.isArray(this.options.values)&&(s=this.options.values.length),this._super(t,i),t){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(i),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),n=s-1;n>=0;n--)this._change(null,n);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(e){this._super(e),this._toggleClass(null,"ui-state-disabled",!!e)},_value:function(){var e=this.options.value;return this._trimAlignValue(e)},_values:function(e){var t,i,n;if(arguments.length)return t=this.options.values[e],this._trimAlignValue(t);if(this._hasMultipleValues()){for(i=this.options.values.slice(),n=0;i.length>n;n+=1)i[n]=this._trimAlignValue(i[n]);return i}return[]},_trimAlignValue:function(e){if(this._valueMin()>=e)return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,i=(e-this._valueMin())%t,n=e-i;return 2*Math.abs(i)>=t&&(n+=i>0?t:-t),parseFloat(n.toFixed(5))},_calculateNewMax:function(){var e=this.options.max,t=this._valueMin(),i=this.options.step;(e=Math.round((e-t)/i)*i+t)>this.options.max&&(e-=i),this.max=parseFloat(e.toFixed(this._precision()))},_precision:function(){var e=this._precisionOf(this.options.step);return null!==this.options.min&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=""+e,i=t.indexOf(".");return-1===i?0:t.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(e){"vertical"===e&&this.range.css({width:"",left:""}),"horizontal"===e&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var t,i,n,s,a,r=this.options.range,o=this.options,l=this,h=!this._animateOff&&o.animate,u={};this._hasMultipleValues()?this.handles.each((function(n){i=(l.values(n)-l._valueMin())/(l._valueMax()-l._valueMin())*100,u["horizontal"===l.orientation?"left":"bottom"]=i+"%",e(this).stop(1,1)[h?"animate":"css"](u,o.animate),!0===l.options.range&&("horizontal"===l.orientation?(0===n&&l.range.stop(1,1)[h?"animate":"css"]({left:i+"%"},o.animate),1===n&&l.range[h?"animate":"css"]({width:i-t+"%"},{queue:!1,duration:o.animate})):(0===n&&l.range.stop(1,1)[h?"animate":"css"]({bottom:i+"%"},o.animate),1===n&&l.range[h?"animate":"css"]({height:i-t+"%"},{queue:!1,duration:o.animate}))),t=i})):(n=this.value(),s=this._valueMin(),a=this._valueMax(),i=a!==s?(n-s)/(a-s)*100:0,u["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[h?"animate":"css"](u,o.animate),"min"===r&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:i+"%"},o.animate),"max"===r&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:100-i+"%"},o.animate),"min"===r&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:i+"%"},o.animate),"max"===r&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:100-i+"%"},o.animate))},_handleEvents:{keydown:function(t){var i,n,s,a=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(t.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(e(t.target),null,"ui-state-active"),!1===this._start(t,a)))return}switch(s=this.options.step,i=n=this._hasMultipleValues()?this.values(a):this.value(),t.keyCode){case e.ui.keyCode.HOME:n=this._valueMin();break;case e.ui.keyCode.END:n=this._valueMax();break;case e.ui.keyCode.PAGE_UP:n=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.PAGE_DOWN:n=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;n=this._trimAlignValue(i+s);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;n=this._trimAlignValue(i-s)}this._slide(t,a,n)},keyup:function(t){var i=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,i),this._change(t,i),this._removeClass(e(t.target),null,"ui-state-active"))}}}),e.widget("ui.spinner",{version:"1.12.1",defaultElement:"<input>",widgetEventPrefix:"spin",options:{classes:{"ui-spinner":"ui-corner-all","ui-spinner-down":"ui-corner-br","ui-spinner-up":"ui-corner-tr"},culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var t=this._super(),i=this.element;return e.each(["min","max","step"],(function(e,n){var s=i.attr(n);null!=s&&s.length&&(t[n]=s)})),t},_events:{keydown:function(e){this._start(e)&&this._keydown(e)&&e.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(e){return this.cancelBlur?void delete this.cancelBlur:(this._stop(),this._refresh(),void(this.previous!==this.element.val()&&this._trigger("change",e)))},mousewheel:function(e,t){if(t){if(!this.spinning&&!this._start(e))return!1;this._spin((t>0?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay((function(){this.spinning&&this._stop(e)}),100),e.preventDefault()}},"mousedown .ui-spinner-button":function(t){function i(){this.element[0]===e.ui.safeActiveElement(this.document[0])||(this.element.trigger("focus"),this.previous=n,this._delay((function(){this.previous=n})))}var n;n=this.element[0]===e.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),t.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay((function(){delete this.cancelBlur,i.call(this)})),!1!==this._start(t)&&this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(t){return e(t.currentTarget).hasClass("ui-state-active")?!1!==this._start(t)&&void this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t):void 0},"mouseleave .ui-spinner-button":"_stop"},_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap("<span>").parent().append("<a></a><a></a>")},_draw:function(){this._enhance(),this._addClass(this.uiSpinner,"ui-spinner","ui-widget ui-widget-content"),this._addClass("ui-spinner-input"),this.element.attr("role","spinbutton"),this.buttons=this.uiSpinner.children("a").attr("tabIndex",-1).attr("aria-hidden",!0).button({classes:{"ui-button":""}}),this._removeClass(this.buttons,"ui-corner-all"),this._addClass(this.buttons.first(),"ui-spinner-button ui-spinner-up"),this._addClass(this.buttons.last(),"ui-spinner-button ui-spinner-down"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&this.uiSpinner.height()>0&&this.uiSpinner.height(this.uiSpinner.height())},_keydown:function(t){var i=this.options,n=e.ui.keyCode;switch(t.keyCode){case n.UP:return this._repeat(null,1,t),!0;case n.DOWN:return this._repeat(null,-1,t),!0;case n.PAGE_UP:return this._repeat(null,i.page,t),!0;case n.PAGE_DOWN:return this._repeat(null,-i.page,t),!0}return!1},_start:function(e){return!(!this.spinning&&!1===this._trigger("start",e)||(this.counter||(this.counter=1),this.spinning=!0,0))},_repeat:function(e,t,i){e=e||500,clearTimeout(this.timer),this.timer=this._delay((function(){this._repeat(40,t,i)}),e),this._spin(t*this.options.step,i)},_spin:function(e,t){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+e*this._increment(this.counter)),this.spinning&&!1===this._trigger("spin",t,{value:i})||(this._value(i),this.counter++)},_increment:function(t){var i=this.options.incremental;return i?e.isFunction(i)?i(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var e=this._precisionOf(this.options.step);return null!==this.options.min&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=""+e,i=t.indexOf(".");return-1===i?0:t.length-i-1},_adjustValue:function(e){var t,i,n=this.options;return i=e-(t=null!==n.min?n.min:0),e=t+(i=Math.round(i/n.step)*n.step),e=parseFloat(e.toFixed(this._precision())),null!==n.max&&e>n.max?n.max:null!==n.min&&n.min>e?n.min:e},_stop:function(e){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",e))},_setOption:function(e,t){var i,n,s;return"culture"===e||"numberFormat"===e?(i=this._parse(this.element.val()),this.options[e]=t,void this.element.val(this._format(i))):(("max"===e||"min"===e||"step"===e)&&"string"==typeof t&&(t=this._parse(t)),"icons"===e&&(n=this.buttons.first().find(".ui-icon"),this._removeClass(n,null,this.options.icons.up),this._addClass(n,null,t.up),s=this.buttons.last().find(".ui-icon"),this._removeClass(s,null,this.options.icons.down),this._addClass(s,null,t.down)),void this._super(e,t))},_setOptionDisabled:function(e){this._super(e),this._toggleClass(this.uiSpinner,null,"ui-state-disabled",!!e),this.element.prop("disabled",!!e),this.buttons.button(e?"disable":"enable")},_setOptions:a((function(e){this._super(e)})),_parse:function(e){return"string"==typeof e&&""!==e&&(e=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(e,10,this.options.culture):+e),""===e||isNaN(e)?null:e},_format:function(e){return""===e?"":window.Globalize&&this.options.numberFormat?Globalize.format(e,this.options.numberFormat,this.options.culture):e},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var e=this.value();return null!==e&&e===this._adjustValue(e)},_value:function(e,t){var i;""!==e&&null!==(i=this._parse(e))&&(t||(i=this._adjustValue(i)),e=this._format(i)),this.element.val(e),this._refresh()},_destroy:function(){this.element.prop("disabled",!1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:a((function(e){this._stepUp(e)})),_stepUp:function(e){this._start()&&(this._spin((e||1)*this.options.step),this._stop())},stepDown:a((function(e){this._stepDown(e)})),_stepDown:function(e){this._start()&&(this._spin((e||1)*-this.options.step),this._stop())},pageUp:a((function(e){this._stepUp((e||1)*this.options.page)})),pageDown:a((function(e){this._stepDown((e||1)*this.options.page)})),value:function(e){return arguments.length?void a(this._value).call(this,e):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),!1!==e.uiBackCompat&&e.widget("ui.spinner",e.ui.spinner,{_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())},_uiSpinnerHtml:function(){return"<span>"},_buttonHtml:function(){return"<a></a><a></a>"}}),e.ui.spinner,e.widget("ui.tabs",{version:"1.12.1",delay:300,options:{active:null,classes:{"ui-tabs":"ui-corner-all","ui-tabs-nav":"ui-corner-all","ui-tabs-panel":"ui-corner-bottom","ui-tabs-tab":"ui-corner-top"},collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var e=/#.*$/;return function(t){var i,n;i=t.href.replace(e,""),n=location.href.replace(e,"");try{i=decodeURIComponent(i)}catch(e){}try{n=decodeURIComponent(n)}catch(e){}return t.hash.length>1&&i===n}}(),_create:function(){var t=this,i=this.options;this.running=!1,this._addClass("ui-tabs","ui-widget ui-widget-content"),this._toggleClass("ui-tabs-collapsible",null,i.collapsible),this._processTabs(),i.active=this._initialActive(),e.isArray(i.disabled)&&(i.disabled=e.unique(i.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"),(function(e){return t.tabs.index(e)})))).sort()),this.active=!1!==this.options.active&&this.anchors.length?this._findActive(i.active):e(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var t=this.options.active,i=this.options.collapsible,n=location.hash.substring(1);return null===t&&(n&&this.tabs.each((function(i,s){return e(s).attr("aria-controls")===n?(t=i,!1):void 0})),null===t&&(t=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===t||-1===t)&&(t=!!this.tabs.length&&0)),!1!==t&&-1===(t=this.tabs.index(this.tabs.eq(t)))&&(t=!i&&0),!i&&!1===t&&this.anchors.length&&(t=0),t},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):e()}},_tabKeydown:function(t){var i=e(e.ui.safeActiveElement(this.document[0])).closest("li"),n=this.tabs.index(i),s=!0;if(!this._handlePageNav(t)){switch(t.keyCode){case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:n++;break;case e.ui.keyCode.UP:case e.ui.keyCode.LEFT:s=!1,n--;break;case e.ui.keyCode.END:n=this.anchors.length-1;break;case e.ui.keyCode.HOME:n=0;break;case e.ui.keyCode.SPACE:return t.preventDefault(),clearTimeout(this.activating),void this._activate(n);case e.ui.keyCode.ENTER:return t.preventDefault(),clearTimeout(this.activating),void this._activate(n!==this.options.active&&n);default:return}t.preventDefault(),clearTimeout(this.activating),n=this._focusNextTab(n,s),t.ctrlKey||t.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(n).attr("aria-selected","true"),this.activating=this._delay((function(){this.option("active",n)}),this.delay))}},_panelKeydown:function(t){this._handlePageNav(t)||t.ctrlKey&&t.keyCode===e.ui.keyCode.UP&&(t.preventDefault(),this.active.trigger("focus"))},_handlePageNav:function(t){return t.altKey&&t.keyCode===e.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):t.altKey&&t.keyCode===e.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(t,i){for(var n=this.tabs.length-1;-1!==e.inArray((t>n&&(t=0),0>t&&(t=n),t),this.options.disabled);)t=i?t+1:t-1;return t},_focusNextTab:function(e,t){return e=this._findNextTab(e,t),this.tabs.eq(e).trigger("focus"),e},_setOption:function(e,t){return"active"===e?void this._activate(t):(this._super(e,t),"collapsible"===e&&(this._toggleClass("ui-tabs-collapsible",null,t),t||!1!==this.options.active||this._activate(0)),"event"===e&&this._setupEvents(t),void("heightStyle"===e&&this._setupHeightStyle(t)))},_sanitizeSelector:function(e){return e?e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var t=this.options,i=this.tablist.children(":has(a[href])");t.disabled=e.map(i.filter(".ui-state-disabled"),(function(e){return i.index(e)})),this._processTabs(),!1!==t.active&&this.anchors.length?this.active.length&&!e.contains(this.tablist[0],this.active[0])?this.tabs.length===t.disabled.length?(t.active=!1,this.active=e()):this._activate(this._findNextTab(Math.max(0,t.active-1),!1)):t.active=this.tabs.index(this.active):(t.active=!1,this.active=e()),this._refresh()},_refresh:function(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._addClass(this.active,"ui-tabs-active","ui-state-active"),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var t=this,i=this.tabs,n=this.anchors,s=this.panels;this.tablist=this._getList().attr("role","tablist"),this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header"),this.tablist.on("mousedown"+this.eventNamespace,"> li",(function(t){e(this).is(".ui-state-disabled")&&t.preventDefault()})).on("focus"+this.eventNamespace,".ui-tabs-anchor",(function(){e(this).closest("li").is(".ui-state-disabled")&&this.blur()})),this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1}),this._addClass(this.tabs,"ui-tabs-tab","ui-state-default"),this.anchors=this.tabs.map((function(){return e("a",this)[0]})).attr({role:"presentation",tabIndex:-1}),this._addClass(this.anchors,"ui-tabs-anchor"),this.panels=e(),this.anchors.each((function(i,n){var s,a,r,o=e(n).uniqueId().attr("id"),l=e(n).closest("li"),h=l.attr("aria-controls");t._isLocal(n)?(r=(s=n.hash).substring(1),a=t.element.find(t._sanitizeSelector(s))):(s="#"+(r=l.attr("aria-controls")||e({}).uniqueId()[0].id),(a=t.element.find(s)).length||(a=t._createPanel(r)).insertAfter(t.panels[i-1]||t.tablist),a.attr("aria-live","polite")),a.length&&(t.panels=t.panels.add(a)),h&&l.data("ui-tabs-aria-controls",h),l.attr({"aria-controls":r,"aria-labelledby":o}),a.attr("aria-labelledby",o)})),this.panels.attr("role","tabpanel"),this._addClass(this.panels,"ui-tabs-panel","ui-widget-content"),i&&(this._off(i.not(this.tabs)),this._off(n.not(this.anchors)),this._off(s.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol, ul").eq(0)},_createPanel:function(t){return e("<div>").attr("id",t).data("ui-tabs-destroy",!0)},_setOptionDisabled:function(t){var i,n,s;for(e.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1),s=0;n=this.tabs[s];s++)i=e(n),!0===t||-1!==e.inArray(s,t)?(i.attr("aria-disabled","true"),this._addClass(i,null,"ui-state-disabled")):(i.removeAttr("aria-disabled"),this._removeClass(i,null,"ui-state-disabled"));this.options.disabled=t,this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!0===t)},_setupEvents:function(t){var i={};t&&e.each(t.split(" "),(function(e,t){i[t]="_eventHandler"})),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(e){e.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var i,n=this.element.parent();"fill"===t?(i=n.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each((function(){var t=e(this),n=t.css("position");"absolute"!==n&&"fixed"!==n&&(i-=t.outerHeight(!0))})),this.element.children().not(this.panels).each((function(){i-=e(this).outerHeight(!0)})),this.panels.each((function(){e(this).height(Math.max(0,i-e(this).innerHeight()+e(this).height()))})).css("overflow","auto")):"auto"===t&&(i=0,this.panels.each((function(){i=Math.max(i,e(this).height("").height())})).height(i))},_eventHandler:function(t){var i=this.options,n=this.active,s=e(t.currentTarget).closest("li"),a=s[0]===n[0],r=a&&i.collapsible,o=r?e():this._getPanelForTab(s),l=n.length?this._getPanelForTab(n):e(),h={oldTab:n,oldPanel:l,newTab:r?e():s,newPanel:o};t.preventDefault(),s.hasClass("ui-state-disabled")||s.hasClass("ui-tabs-loading")||this.running||a&&!i.collapsible||!1===this._trigger("beforeActivate",t,h)||(i.active=!r&&this.tabs.index(s),this.active=a?e():s,this.xhr&&this.xhr.abort(),l.length||o.length||e.error("jQuery UI Tabs: Mismatching fragment identifier."),o.length&&this.load(this.tabs.index(s),t),this._toggle(t,h))},_toggle:function(t,i){function n(){a.running=!1,a._trigger("activate",t,i)}function s(){a._addClass(i.newTab.closest("li"),"ui-tabs-active","ui-state-active"),r.length&&a.options.show?a._show(r,a.options.show,n):(r.show(),n())}var a=this,r=i.newPanel,o=i.oldPanel;this.running=!0,o.length&&this.options.hide?this._hide(o,this.options.hide,(function(){a._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),s()})):(this._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),o.hide(),s()),o.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),r.length&&o.length?i.oldTab.attr("tabIndex",-1):r.length&&this.tabs.filter((function(){return 0===e(this).attr("tabIndex")})).attr("tabIndex",-1),r.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(t){var i,n=this._findActive(t);n[0]!==this.active[0]&&(n.length||(n=this.active),i=n.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return!1===t?e():this.tabs.eq(t)},_getIndex:function(t){return"string"==typeof t&&(t=this.anchors.index(this.anchors.filter("[href$='"+e.ui.escapeSelector(t)+"']"))),t},_destroy:function(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr("role").off(this.eventNamespace),this.anchors.removeAttr("role tabIndex").removeUniqueId(),this.tabs.add(this.panels).each((function(){e.data(this,"ui-tabs-destroy")?e(this).remove():e(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")})),this.tabs.each((function(){var t=e(this),i=t.data("ui-tabs-aria-controls");i?t.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):t.removeAttr("aria-controls")})),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(t){var i=this.options.disabled;!1!==i&&(void 0===t?i=!1:(t=this._getIndex(t),i=e.isArray(i)?e.map(i,(function(e){return e!==t?e:null})):e.map(this.tabs,(function(e,i){return i!==t?i:null}))),this._setOptionDisabled(i))},disable:function(t){var i=this.options.disabled;if(!0!==i){if(void 0===t)i=!0;else{if(t=this._getIndex(t),-1!==e.inArray(t,i))return;i=e.isArray(i)?e.merge([t],i).sort():[t]}this._setOptionDisabled(i)}},load:function(t,i){t=this._getIndex(t);var n=this,s=this.tabs.eq(t),a=s.find(".ui-tabs-anchor"),r=this._getPanelForTab(s),o={tab:s,panel:r},l=function(e,t){"abort"===t&&n.panels.stop(!1,!0),n._removeClass(s,"ui-tabs-loading"),r.removeAttr("aria-busy"),e===n.xhr&&delete n.xhr};this._isLocal(a[0])||(this.xhr=e.ajax(this._ajaxSettings(a,i,o)),this.xhr&&"canceled"!==this.xhr.statusText&&(this._addClass(s,"ui-tabs-loading"),r.attr("aria-busy","true"),this.xhr.done((function(e,t,s){setTimeout((function(){r.html(e),n._trigger("load",i,o),l(s,t)}),1)})).fail((function(e,t){setTimeout((function(){l(e,t)}),1)}))))},_ajaxSettings:function(t,i,n){var s=this;return{url:t.attr("href").replace(/#.*$/,""),beforeSend:function(t,a){return s._trigger("beforeLoad",i,e.extend({jqXHR:t,ajaxSettings:a},n))}}},_getPanelForTab:function(t){var i=e(t).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}}),!1!==e.uiBackCompat&&e.widget("ui.tabs",e.ui.tabs,{_processTabs:function(){this._superApply(arguments),this._addClass(this.tabs,"ui-tab")}}),e.ui.tabs,e.widget("ui.tooltip",{version:"1.12.1",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function(){var t=e(this).attr("title")||"";return e("<a>").text(t).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function(t,i){var n=(t.attr("aria-describedby")||"").split(/\s+/);n.push(i),t.data("ui-tooltip-id",i).attr("aria-describedby",e.trim(n.join(" ")))},_removeDescribedBy:function(t){var i=t.data("ui-tooltip-id"),n=(t.attr("aria-describedby")||"").split(/\s+/),s=e.inArray(i,n);-1!==s&&n.splice(s,1),t.removeData("ui-tooltip-id"),(n=e.trim(n.join(" ")))?t.attr("aria-describedby",n):t.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.liveRegion=e("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this.disabledTitles=e([])},_setOption:function(t,i){var n=this;this._super(t,i),"content"===t&&e.each(this.tooltips,(function(e,t){n._updateContent(t.element)}))},_setOptionDisabled:function(e){this[e?"_disable":"_enable"]()},_disable:function(){var t=this;e.each(this.tooltips,(function(i,n){var s=e.Event("blur");s.target=s.currentTarget=n.element[0],t.close(s,!0)})),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter((function(){var t=e(this);return t.is("[title]")?t.data("ui-tooltip-title",t.attr("title")).removeAttr("title"):void 0})))},_enable:function(){this.disabledTitles.each((function(){var t=e(this);t.data("ui-tooltip-title")&&t.attr("title",t.data("ui-tooltip-title"))})),this.disabledTitles=e([])},open:function(t){var i=this,n=e(t?t.target:this.element).closest(this.options.items);n.length&&!n.data("ui-tooltip-id")&&(n.attr("title")&&n.data("ui-tooltip-title",n.attr("title")),n.data("ui-tooltip-open",!0),t&&"mouseover"===t.type&&n.parents().each((function(){var t,n=e(this);n.data("ui-tooltip-open")&&((t=e.Event("blur")).target=t.currentTarget=this,i.close(t,!0)),n.attr("title")&&(n.uniqueId(),i.parents[this.id]={element:this,title:n.attr("title")},n.attr("title",""))})),this._registerCloseHandlers(t,n),this._updateContent(n,t))},_updateContent:function(e,t){var i,n=this.options.content,s=this,a=t?t.type:null;return"string"==typeof n||n.nodeType||n.jquery?this._open(t,e,n):void((i=n.call(e[0],(function(i){s._delay((function(){e.data("ui-tooltip-open")&&(t&&(t.type=a),this._open(t,e,i))}))})))&&this._open(t,e,i))},_open:function(t,i,n){function s(e){h.of=e,r.is(":hidden")||r.position(h)}var a,r,o,l,h=e.extend({},this.options.position);if(n){if(a=this._find(i))return void a.tooltip.find(".ui-tooltip-content").html(n);i.is("[title]")&&(t&&"mouseover"===t.type?i.attr("title",""):i.removeAttr("title")),a=this._tooltip(i),r=a.tooltip,this._addDescribedBy(i,r.attr("id")),r.find(".ui-tooltip-content").html(n),this.liveRegion.children().hide(),(l=e("<div>").html(r.find(".ui-tooltip-content").html())).removeAttr("name").find("[name]").removeAttr("name"),l.removeAttr("id").find("[id]").removeAttr("id"),l.appendTo(this.liveRegion),this.options.track&&t&&/^mouse/.test(t.type)?(this._on(this.document,{mousemove:s}),s(t)):r.position(e.extend({of:i},this.options.position)),r.hide(),this._show(r,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(o=this.delayedShow=setInterval((function(){r.is(":visible")&&(s(h.of),clearInterval(o))}),e.fx.interval)),this._trigger("open",t,{tooltip:r})}},_registerCloseHandlers:function(t,i){var n={keyup:function(t){if(t.keyCode===e.ui.keyCode.ESCAPE){var n=e.Event(t);n.currentTarget=i[0],this.close(n,!0)}}};i[0]!==this.element[0]&&(n.remove=function(){this._removeTooltip(this._find(i).tooltip)}),t&&"mouseover"!==t.type||(n.mouseleave="close"),t&&"focusin"!==t.type||(n.focusout="close"),this._on(!0,i,n)},close:function(t){var i,n=this,s=e(t?t.currentTarget:this.element),a=this._find(s);return a?(i=a.tooltip,void(a.closing||(clearInterval(this.delayedShow),s.data("ui-tooltip-title")&&!s.attr("title")&&s.attr("title",s.data("ui-tooltip-title")),this._removeDescribedBy(s),a.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,(function(){n._removeTooltip(e(this))})),s.removeData("ui-tooltip-open"),this._off(s,"mouseleave focusout keyup"),s[0]!==this.element[0]&&this._off(s,"remove"),this._off(this.document,"mousemove"),t&&"mouseleave"===t.type&&e.each(this.parents,(function(t,i){e(i.element).attr("title",i.title),delete n.parents[t]})),a.closing=!0,this._trigger("close",t,{tooltip:i}),a.hiding||(a.closing=!1)))):void s.removeData("ui-tooltip-open")},_tooltip:function(t){var i=e("<div>").attr("role","tooltip"),n=e("<div>").appendTo(i),s=i.uniqueId().attr("id");return this._addClass(n,"ui-tooltip-content"),this._addClass(i,"ui-tooltip","ui-widget ui-widget-content"),i.appendTo(this._appendTo(t)),this.tooltips[s]={element:t,tooltip:i}},_find:function(e){var t=e.data("ui-tooltip-id");return t?this.tooltips[t]:null},_removeTooltip:function(e){e.remove(),delete this.tooltips[e.attr("id")]},_appendTo:function(e){var t=e.closest(".ui-front, dialog");return t.length||(t=this.document[0].body),t},_destroy:function(){var t=this;e.each(this.tooltips,(function(i,n){var s=e.Event("blur"),a=n.element;s.target=s.currentTarget=a[0],t.close(s,!0),e("#"+i).remove(),a.data("ui-tooltip-title")&&(a.attr("title")||a.attr("title",a.data("ui-tooltip-title")),a.removeData("ui-tooltip-title"))})),this.liveRegion.remove()}}),!1!==e.uiBackCompat&&e.widget("ui.tooltip",e.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var e=this._superApply(arguments);return this.options.tooltipClass&&e.tooltip.addClass(this.options.tooltipClass),e}}),e.ui.tooltip;var d="ui-effects-",f="ui-effects-style",p="ui-effects-animated",m=e;e.effects={effect:{}},function(e,t){function i(e,t,i){var n=u[t.type]||{};return null==e?i||!t.def?null:t.def:(e=n.floor?~~e:parseFloat(e),isNaN(e)?t.def:n.mod?(e+n.mod)%n.mod:0>e?0:e>n.max?n.max:e)}function n(i){var n=l(),s=n._rgba=[];return i=i.toLowerCase(),f(o,(function(e,a){var r,o=a.re.exec(i),l=o&&a.parse(o),u=a.space||"rgba";return l?(r=n[u](l),n[h[u].cache]=r[h[u].cache],s=n._rgba=r._rgba,!1):t})),s.length?("0,0,0,0"===s.join()&&e.extend(s,a.transparent),n):a[i]}function s(e,t,i){return 1>6*(i=(i+1)%1)?e+6*(t-e)*i:1>2*i?t:2>3*i?e+6*(t-e)*(2/3-i):e}var a,r=/^([\-+])=\s*(\d+\.?\d*)/,o=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(e){return[2.55*e[1],2.55*e[2],2.55*e[3],e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],l=e.Color=function(t,i,n,s){return new e.Color.fn.parse(t,i,n,s)},h={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={byte:{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},c=l.support={},d=e("<p>")[0],f=e.each;d.style.cssText="background-color:rgba(1,1,1,.5)",c.rgba=d.style.backgroundColor.indexOf("rgba")>-1,f(h,(function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}})),l.fn=e.extend(l.prototype,{parse:function(s,r,o,u){if(s===t)return this._rgba=[null,null,null,null],this;(s.jquery||s.nodeType)&&(s=e(s).css(r),r=t);var c=this,d=e.type(s),p=this._rgba=[];return r!==t&&(s=[s,r,o,u],d="array"),"string"===d?this.parse(n(s)||a._default):"array"===d?(f(h.rgba.props,(function(e,t){p[t.idx]=i(s[t.idx],t)})),this):"object"===d?(f(h,s instanceof l?function(e,t){s[t.cache]&&(c[t.cache]=s[t.cache].slice())}:function(t,n){var a=n.cache;f(n.props,(function(e,t){if(!c[a]&&n.to){if("alpha"===e||null==s[e])return;c[a]=n.to(c._rgba)}c[a][t.idx]=i(s[e],t,!0)})),c[a]&&0>e.inArray(null,c[a].slice(0,3))&&(c[a][3]=1,n.from&&(c._rgba=n.from(c[a])))}),this):t},is:function(e){var i=l(e),n=!0,s=this;return f(h,(function(e,a){var r,o=i[a.cache];return o&&(r=s[a.cache]||a.to&&a.to(s._rgba)||[],f(a.props,(function(e,i){return null!=o[i.idx]?n=o[i.idx]===r[i.idx]:t}))),n})),n},_space:function(){var e=[],t=this;return f(h,(function(i,n){t[n.cache]&&e.push(i)})),e.pop()},transition:function(e,t){var n=l(e),s=n._space(),a=h[s],r=0===this.alpha()?l("transparent"):this,o=r[a.cache]||a.to(r._rgba),c=o.slice();return n=n[a.cache],f(a.props,(function(e,s){var a=s.idx,r=o[a],l=n[a],h=u[s.type]||{};null!==l&&(null===r?c[a]=l:(h.mod&&(l-r>h.mod/2?r+=h.mod:r-l>h.mod/2&&(r-=h.mod)),c[a]=i((l-r)*t+r,s)))})),this[s](c)},blend:function(t){if(1===this._rgba[3])return this;var i=this._rgba.slice(),n=i.pop(),s=l(t)._rgba;return l(e.map(i,(function(e,t){return(1-n)*s[t]+n*e})))},toRgbaString:function(){var t="rgba(",i=e.map(this._rgba,(function(e,t){return null==e?t>2?1:0:e}));return 1===i[3]&&(i.pop(),t="rgb("),t+i.join()+")"},toHslaString:function(){var t="hsla(",i=e.map(this.hsla(),(function(e,t){return null==e&&(e=t>2?1:0),t&&3>t&&(e=Math.round(100*e)+"%"),e}));return 1===i[3]&&(i.pop(),t="hsl("),t+i.join()+")"},toHexString:function(t){var i=this._rgba.slice(),n=i.pop();return t&&i.push(~~(255*n)),"#"+e.map(i,(function(e){return 1===(e=(e||0).toString(16)).length?"0"+e:e})).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),l.fn.parse.prototype=l.fn,h.hsla.to=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t,i,n=e[0]/255,s=e[1]/255,a=e[2]/255,r=e[3],o=Math.max(n,s,a),l=Math.min(n,s,a),h=o-l,u=o+l,c=.5*u;return t=l===o?0:n===o?60*(s-a)/h+360:s===o?60*(a-n)/h+120:60*(n-s)/h+240,i=0===h?0:.5>=c?h/u:h/(2-u),[Math.round(t)%360,i,c,null==r?1:r]},h.hsla.from=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t=e[0]/360,i=e[1],n=e[2],a=e[3],r=.5>=n?n*(1+i):n+i-n*i,o=2*n-r;return[Math.round(255*s(o,r,t+1/3)),Math.round(255*s(o,r,t)),Math.round(255*s(o,r,t-1/3)),a]},f(h,(function(n,s){var a=s.props,o=s.cache,h=s.to,u=s.from;l.fn[n]=function(n){if(h&&!this[o]&&(this[o]=h(this._rgba)),n===t)return this[o].slice();var s,r=e.type(n),c="array"===r||"object"===r?n:arguments,d=this[o].slice();return f(a,(function(e,t){var n=c["object"===r?e:t.idx];null==n&&(n=d[t.idx]),d[t.idx]=i(n,t)})),u?((s=l(u(d)))[o]=d,s):l(d)},f(a,(function(t,i){l.fn[t]||(l.fn[t]=function(s){var a,o=e.type(s),l="alpha"===t?this._hsla?"hsla":"rgba":n,h=this[l](),u=h[i.idx];return"undefined"===o?u:("function"===o&&(s=s.call(this,u),o=e.type(s)),null==s&&i.empty?this:("string"===o&&(a=r.exec(s))&&(s=u+parseFloat(a[2])*("+"===a[1]?1:-1)),h[i.idx]=s,this[l](h)))})}))})),l.hook=function(t){var i=t.split(" ");f(i,(function(t,i){e.cssHooks[i]={set:function(t,s){var a,r,o="";if("transparent"!==s&&("string"!==e.type(s)||(a=n(s)))){if(s=l(a||s),!c.rgba&&1!==s._rgba[3]){for(r="backgroundColor"===i?t.parentNode:t;(""===o||"transparent"===o)&&r&&r.style;)try{o=e.css(r,"backgroundColor"),r=r.parentNode}catch(e){}s=s.blend(o&&"transparent"!==o?o:"_default")}s=s.toRgbaString()}try{t.style[i]=s}catch(e){}}},e.fx.step[i]=function(t){t.colorInit||(t.start=l(t.elem,i),t.end=l(t.end),t.colorInit=!0),e.cssHooks[i].set(t.elem,t.start.transition(t.end,t.pos))}}))},l.hook("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"),e.cssHooks.borderColor={expand:function(e){var t={};return f(["Top","Right","Bottom","Left"],(function(i,n){t["border"+n+"Color"]=e})),t}},a=e.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(m),function(){function t(t){var i,n,s=t.ownerDocument.defaultView?t.ownerDocument.defaultView.getComputedStyle(t,null):t.currentStyle,a={};if(s&&s.length&&s[0]&&s[s[0]])for(n=s.length;n--;)"string"==typeof s[i=s[n]]&&(a[e.camelCase(i)]=s[i]);else for(i in s)"string"==typeof s[i]&&(a[i]=s[i]);return a}function i(t,i){var n,a,r={};for(n in i)a=i[n],t[n]!==a&&(s[n]||(e.fx.step[n]||!isNaN(parseFloat(a)))&&(r[n]=a));return r}var n=["add","remove","toggle"],s={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};e.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],(function(t,i){e.fx.step[i]=function(e){("none"!==e.end&&!e.setAttr||1===e.pos&&!e.setAttr)&&(m.style(e.elem,i,e.end),e.setAttr=!0)}})),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e.effects.animateClass=function(s,a,r,o){var l=e.speed(a,r,o);return this.queue((function(){var a,r=e(this),o=r.attr("class")||"",h=l.children?r.find("*").addBack():r;h=h.map((function(){return{el:e(this),start:t(this)}})),(a=function(){e.each(n,(function(e,t){s[t]&&r[t+"Class"](s[t])}))})(),h=h.map((function(){return this.end=t(this.el[0]),this.diff=i(this.start,this.end),this})),r.attr("class",o),h=h.map((function(){var t=this,i=e.Deferred(),n=e.extend({},l,{queue:!1,complete:function(){i.resolve(t)}});return this.el.animate(this.diff,n),i.promise()})),e.when.apply(e,h.get()).done((function(){a(),e.each(arguments,(function(){var t=this.el;e.each(this.diff,(function(e){t.css(e,"")}))})),l.complete.call(r[0])}))}))},e.fn.extend({addClass:function(t){return function(i,n,s,a){return n?e.effects.animateClass.call(this,{add:i},n,s,a):t.apply(this,arguments)}}(e.fn.addClass),removeClass:function(t){return function(i,n,s,a){return arguments.length>1?e.effects.animateClass.call(this,{remove:i},n,s,a):t.apply(this,arguments)}}(e.fn.removeClass),toggleClass:function(t){return function(i,n,s,a,r){return"boolean"==typeof n||void 0===n?s?e.effects.animateClass.call(this,n?{add:i}:{remove:i},s,a,r):t.apply(this,arguments):e.effects.animateClass.call(this,{toggle:i},n,s,a)}}(e.fn.toggleClass),switchClass:function(t,i,n,s,a){return e.effects.animateClass.call(this,{add:i,remove:t},n,s,a)}})}(),function(){function t(t,i,n,s){return e.isPlainObject(t)&&(i=t,t=t.effect),t={effect:t},null==i&&(i={}),e.isFunction(i)&&(s=i,n=null,i={}),("number"==typeof i||e.fx.speeds[i])&&(s=n,n=i,i={}),e.isFunction(n)&&(s=n,n=null),i&&e.extend(t,i),n=n||i.duration,t.duration=e.fx.off?0:"number"==typeof n?n:n in e.fx.speeds?e.fx.speeds[n]:e.fx.speeds._default,t.complete=s||i.complete,t}function i(t){return!(t&&"number"!=typeof t&&!e.fx.speeds[t])||"string"==typeof t&&!e.effects.effect[t]||!!e.isFunction(t)||"object"==typeof t&&!t.effect}function n(e,t){var i=t.outerWidth(),n=t.outerHeight(),s=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(e)||["",0,i,n,0];return{top:parseFloat(s[1])||0,right:"auto"===s[2]?i:parseFloat(s[2]),bottom:"auto"===s[3]?n:parseFloat(s[3]),left:parseFloat(s[4])||0}}e.expr&&e.expr.filters&&e.expr.filters.animated&&(e.expr.filters.animated=function(t){return function(i){return!!e(i).data(p)||t(i)}}(e.expr.filters.animated)),!1!==e.uiBackCompat&&e.extend(e.effects,{save:function(e,t){for(var i=0,n=t.length;n>i;i++)null!==t[i]&&e.data(d+t[i],e[0].style[t[i]])},restore:function(e,t){for(var i,n=0,s=t.length;s>n;n++)null!==t[n]&&(i=e.data(d+t[n]),e.css(t[n],i))},setMode:function(e,t){return"toggle"===t&&(t=e.is(":hidden")?"show":"hide"),t},createWrapper:function(t){if(t.parent().is(".ui-effects-wrapper"))return t.parent();var i={width:t.outerWidth(!0),height:t.outerHeight(!0),float:t.css("float")},n=e("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),s={width:t.width(),height:t.height()},a=document.activeElement;try{a.id}catch(e){a=document.body}return t.wrap(n),(t[0]===a||e.contains(t[0],a))&&e(a).trigger("focus"),n=t.parent(),"static"===t.css("position")?(n.css({position:"relative"}),t.css({position:"relative"})):(e.extend(i,{position:t.css("position"),zIndex:t.css("z-index")}),e.each(["top","left","bottom","right"],(function(e,n){i[n]=t.css(n),isNaN(parseInt(i[n],10))&&(i[n]="auto")})),t.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),t.css(s),n.css(i).show()},removeWrapper:function(t){var i=document.activeElement;return t.parent().is(".ui-effects-wrapper")&&(t.parent().replaceWith(t),(t[0]===i||e.contains(t[0],i))&&e(i).trigger("focus")),t}}),e.extend(e.effects,{version:"1.12.1",define:function(t,i,n){return n||(n=i,i="effect"),e.effects.effect[t]=n,e.effects.effect[t].mode=i,n},scaledDimensions:function(e,t,i){if(0===t)return{height:0,width:0,outerHeight:0,outerWidth:0};var n="horizontal"!==i?(t||100)/100:1,s="vertical"!==i?(t||100)/100:1;return{height:e.height()*s,width:e.width()*n,outerHeight:e.outerHeight()*s,outerWidth:e.outerWidth()*n}},clipToBox:function(e){return{width:e.clip.right-e.clip.left,height:e.clip.bottom-e.clip.top,left:e.clip.left,top:e.clip.top}},unshift:function(e,t,i){var n=e.queue();t>1&&n.splice.apply(n,[1,0].concat(n.splice(t,i))),e.dequeue()},saveStyle:function(e){e.data(f,e[0].style.cssText)},restoreStyle:function(e){e[0].style.cssText=e.data(f)||"",e.removeData(f)},mode:function(e,t){var i=e.is(":hidden");return"toggle"===t&&(t=i?"show":"hide"),(i?"hide"===t:"show"===t)&&(t="none"),t},getBaseline:function(e,t){var i,n;switch(e[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=e[0]/t.height}switch(e[1]){case"left":n=0;break;case"center":n=.5;break;case"right":n=1;break;default:n=e[1]/t.width}return{x:n,y:i}},createPlaceholder:function(t){var i,n=t.css("position"),s=t.position();return t.css({marginTop:t.css("marginTop"),marginBottom:t.css("marginBottom"),marginLeft:t.css("marginLeft"),marginRight:t.css("marginRight")}).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()),/^(static|relative)/.test(n)&&(n="absolute",i=e("<"+t[0].nodeName+">").insertAfter(t).css({display:/^(inline|ruby)/.test(t.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:t.css("marginTop"),marginBottom:t.css("marginBottom"),marginLeft:t.css("marginLeft"),marginRight:t.css("marginRight"),float:t.css("float")}).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).addClass("ui-effects-placeholder"),t.data(d+"placeholder",i)),t.css({position:n,left:s.left,top:s.top}),i},removePlaceholder:function(e){var t=d+"placeholder",i=e.data(t);i&&(i.remove(),e.removeData(t))},cleanUp:function(t){e.effects.restoreStyle(t),e.effects.removePlaceholder(t)},setTransition:function(t,i,n,s){return s=s||{},e.each(i,(function(e,i){var a=t.cssUnit(i);a[0]>0&&(s[i]=a[0]*n+a[1])})),s}}),e.fn.extend({effect:function(){function i(t){function i(){e.isFunction(l)&&l.call(r[0]),e.isFunction(t)&&t()}var r=e(this);n.mode=u.shift(),!1===e.uiBackCompat||a?"none"===n.mode?(r[h](),i()):s.call(r[0],n,(function(){r.removeData(p),e.effects.cleanUp(r),"hide"===n.mode&&r.hide(),i()})):(r.is(":hidden")?"hide"===h:"show"===h)?(r[h](),i()):s.call(r[0],n,i)}var n=t.apply(this,arguments),s=e.effects.effect[n.effect],a=s.mode,r=n.queue,o=r||"fx",l=n.complete,h=n.mode,u=[],c=function(t){var i=e(this),n=e.effects.mode(i,h)||a;i.data(p,!0),u.push(n),a&&("show"===n||n===a&&"hide"===n)&&i.show(),a&&"none"===n||e.effects.saveStyle(i),e.isFunction(t)&&t()};return e.fx.off||!s?h?this[h](n.duration,l):this.each((function(){l&&l.call(this)})):!1===r?this.each(c).each(i):this.queue(o,c).queue(o,i)},show:function(e){return function(n){if(i(n))return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="show",this.effect.call(this,s)}}(e.fn.show),hide:function(e){return function(n){if(i(n))return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="hide",this.effect.call(this,s)}}(e.fn.hide),toggle:function(e){return function(n){if(i(n)||"boolean"==typeof n)return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="toggle",this.effect.call(this,s)}}(e.fn.toggle),cssUnit:function(t){var i=this.css(t),n=[];return e.each(["em","px","%","pt"],(function(e,t){i.indexOf(t)>0&&(n=[parseFloat(i),t])})),n},cssClip:function(e){return e?this.css("clip","rect("+e.top+"px "+e.right+"px "+e.bottom+"px "+e.left+"px)"):n(this.css("clip"),this)},transfer:function(t,i){var n=e(this),s=e(t.to),a="fixed"===s.css("position"),r=e("body"),o=a?r.scrollTop():0,l=a?r.scrollLeft():0,h=s.offset(),u={top:h.top-o,left:h.left-l,height:s.innerHeight(),width:s.innerWidth()},c=n.offset(),d=e("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(t.className).css({top:c.top-o,left:c.left-l,height:n.innerHeight(),width:n.innerWidth(),position:a?"fixed":"absolute"}).animate(u,t.duration,t.easing,(function(){d.remove(),e.isFunction(i)&&i()}))}}),e.fx.step.clip=function(t){t.clipInit||(t.start=e(t.elem).cssClip(),"string"==typeof t.end&&(t.end=n(t.end,t.elem)),t.clipInit=!0),e(t.elem).cssClip({top:t.pos*(t.end.top-t.start.top)+t.start.top,right:t.pos*(t.end.right-t.start.right)+t.start.right,bottom:t.pos*(t.end.bottom-t.start.bottom)+t.start.bottom,left:t.pos*(t.end.left-t.start.left)+t.start.left})}}(),function(){var t={};e.each(["Quad","Cubic","Quart","Quint","Expo"],(function(e,i){t[i]=function(t){return Math.pow(t,e+2)}})),e.extend(t,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return 0===e||1===e?e:-Math.pow(2,8*(e-1))*Math.sin((80*(e-1)-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){for(var t,i=4;((t=Math.pow(2,--i))-1)/11>e;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*t-2)/22-e,2)}}),e.each(t,(function(t,i){e.easing["easeIn"+t]=i,e.easing["easeOut"+t]=function(e){return 1-i(1-e)},e.easing["easeInOut"+t]=function(e){return.5>e?i(2*e)/2:1-i(-2*e+2)/2}}))}(),e.effects,e.effects.define("blind","hide",(function(t,i){var n={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},s=e(this),a=t.direction||"up",r=s.cssClip(),o={clip:e.extend({},r)},l=e.effects.createPlaceholder(s);o.clip[n[a][0]]=o.clip[n[a][1]],"show"===t.mode&&(s.cssClip(o.clip),l&&l.css(e.effects.clipToBox(o)),o.clip=r),l&&l.animate(e.effects.clipToBox(o),t.duration,t.easing),s.animate(o,{queue:!1,duration:t.duration,easing:t.easing,complete:i})})),e.effects.define("bounce",(function(t,i){var n,s,a,r=e(this),o=t.mode,l="hide"===o,h="show"===o,u=t.direction||"up",c=t.distance,d=t.times||5,f=2*d+(h||l?1:0),p=t.duration/f,m=t.easing,g="up"===u||"down"===u?"top":"left",v="up"===u||"left"===u,_=0,y=r.queue().length;for(e.effects.createPlaceholder(r),a=r.css(g),c||(c=r["top"===g?"outerHeight":"outerWidth"]()/3),h&&((s={opacity:1})[g]=a,r.css("opacity",0).css(g,v?2*-c:2*c).animate(s,p,m)),l&&(c/=Math.pow(2,d-1)),(s={})[g]=a;d>_;_++)(n={})[g]=(v?"-=":"+=")+c,r.animate(n,p,m).animate(s,p,m),c=l?2*c:c/2;l&&((n={opacity:0})[g]=(v?"-=":"+=")+c,r.animate(n,p,m)),r.queue(i),e.effects.unshift(r,y,f+1)})),e.effects.define("clip","hide",(function(t,i){var n,s={},a=e(this),r=t.direction||"vertical",o="both"===r,l=o||"horizontal"===r,h=o||"vertical"===r;n=a.cssClip(),s.clip={top:h?(n.bottom-n.top)/2:n.top,right:l?(n.right-n.left)/2:n.right,bottom:h?(n.bottom-n.top)/2:n.bottom,left:l?(n.right-n.left)/2:n.left},e.effects.createPlaceholder(a),"show"===t.mode&&(a.cssClip(s.clip),s.clip=n),a.animate(s,{queue:!1,duration:t.duration,easing:t.easing,complete:i})})),e.effects.define("drop","hide",(function(t,i){var n,s=e(this),a="show"===t.mode,r=t.direction||"left",o="up"===r||"down"===r?"top":"left",l="up"===r||"left"===r?"-=":"+=",h="+="===l?"-=":"+=",u={opacity:0};e.effects.createPlaceholder(s),n=t.distance||s["top"===o?"outerHeight":"outerWidth"](!0)/2,u[o]=l+n,a&&(s.css(u),u[o]=h+n,u.opacity=1),s.animate(u,{queue:!1,duration:t.duration,easing:t.easing,complete:i})})),e.effects.define("explode","hide",(function(t,i){function n(){v.push(this),v.length===u*c&&(d.css({visibility:"visible"}),e(v).remove(),i())}var s,a,r,o,l,h,u=t.pieces?Math.round(Math.sqrt(t.pieces)):3,c=u,d=e(this),f="show"===t.mode,p=d.show().css("visibility","hidden").offset(),m=Math.ceil(d.outerWidth()/c),g=Math.ceil(d.outerHeight()/u),v=[];for(s=0;u>s;s++)for(o=p.top+s*g,h=s-(u-1)/2,a=0;c>a;a++)r=p.left+a*m,l=a-(c-1)/2,d.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-a*m,top:-s*g}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:m,height:g,left:r+(f?l*m:0),top:o+(f?h*g:0),opacity:f?0:1}).animate({left:r+(f?0:l*m),top:o+(f?0:h*g),opacity:f?1:0},t.duration||500,t.easing,n)})),e.effects.define("fade","toggle",(function(t,i){var n="show"===t.mode;e(this).css("opacity",n?0:1).animate({opacity:n?1:0},{queue:!1,duration:t.duration,easing:t.easing,complete:i})})),e.effects.define("fold","hide",(function(t,i){var n=e(this),s=t.mode,a="show"===s,r="hide"===s,o=t.size||15,l=/([0-9]+)%/.exec(o),h=t.horizFirst?["right","bottom"]:["bottom","right"],u=t.duration/2,c=e.effects.createPlaceholder(n),d=n.cssClip(),f={clip:e.extend({},d)},p={clip:e.extend({},d)},m=[d[h[0]],d[h[1]]],g=n.queue().length;l&&(o=parseInt(l[1],10)/100*m[r?0:1]),f.clip[h[0]]=o,p.clip[h[0]]=o,p.clip[h[1]]=0,a&&(n.cssClip(p.clip),c&&c.css(e.effects.clipToBox(p)),p.clip=d),n.queue((function(i){c&&c.animate(e.effects.clipToBox(f),u,t.easing).animate(e.effects.clipToBox(p),u,t.easing),i()})).animate(f,u,t.easing).animate(p,u,t.easing).queue(i),e.effects.unshift(n,g,4)})),e.effects.define("highlight","show",(function(t,i){var n=e(this),s={backgroundColor:n.css("backgroundColor")};"hide"===t.mode&&(s.opacity=0),e.effects.saveStyle(n),n.css({backgroundImage:"none",backgroundColor:t.color||"#ffff99"}).animate(s,{queue:!1,duration:t.duration,easing:t.easing,complete:i})})),e.effects.define("size",(function(t,i){var n,s,a,r=e(this),o=["fontSize"],l=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],h=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],u=t.mode,c="effect"!==u,d=t.scale||"both",f=t.origin||["middle","center"],p=r.css("position"),m=r.position(),g=e.effects.scaledDimensions(r),v=t.from||g,_=t.to||e.effects.scaledDimensions(r,0);e.effects.createPlaceholder(r),"show"===u&&(a=v,v=_,_=a),s={from:{y:v.height/g.height,x:v.width/g.width},to:{y:_.height/g.height,x:_.width/g.width}},("box"===d||"both"===d)&&(s.from.y!==s.to.y&&(v=e.effects.setTransition(r,l,s.from.y,v),_=e.effects.setTransition(r,l,s.to.y,_)),s.from.x!==s.to.x&&(v=e.effects.setTransition(r,h,s.from.x,v),_=e.effects.setTransition(r,h,s.to.x,_))),("content"===d||"both"===d)&&s.from.y!==s.to.y&&(v=e.effects.setTransition(r,o,s.from.y,v),_=e.effects.setTransition(r,o,s.to.y,_)),f&&(n=e.effects.getBaseline(f,g),v.top=(g.outerHeight-v.outerHeight)*n.y+m.top,v.left=(g.outerWidth-v.outerWidth)*n.x+m.left,_.top=(g.outerHeight-_.outerHeight)*n.y+m.top,_.left=(g.outerWidth-_.outerWidth)*n.x+m.left),r.css(v),("content"===d||"both"===d)&&(l=l.concat(["marginTop","marginBottom"]).concat(o),h=h.concat(["marginLeft","marginRight"]),r.find("*[width]").each((function(){var i=e(this),n=e.effects.scaledDimensions(i),a={height:n.height*s.from.y,width:n.width*s.from.x,outerHeight:n.outerHeight*s.from.y,outerWidth:n.outerWidth*s.from.x},r={height:n.height*s.to.y,width:n.width*s.to.x,outerHeight:n.height*s.to.y,outerWidth:n.width*s.to.x};s.from.y!==s.to.y&&(a=e.effects.setTransition(i,l,s.from.y,a),r=e.effects.setTransition(i,l,s.to.y,r)),s.from.x!==s.to.x&&(a=e.effects.setTransition(i,h,s.from.x,a),r=e.effects.setTransition(i,h,s.to.x,r)),c&&e.effects.saveStyle(i),i.css(a),i.animate(r,t.duration,t.easing,(function(){c&&e.effects.restoreStyle(i)}))}))),r.animate(_,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){var t=r.offset();0===_.opacity&&r.css("opacity",v.opacity),c||(r.css("position","static"===p?"relative":p).offset(t),e.effects.saveStyle(r)),i()}})})),e.effects.define("scale",(function(t,i){var n=e(this),s=t.mode,a=parseInt(t.percent,10)||(0===parseInt(t.percent,10)?0:"effect"!==s?0:100),r=e.extend(!0,{from:e.effects.scaledDimensions(n),to:e.effects.scaledDimensions(n,a,t.direction||"both"),origin:t.origin||["middle","center"]},t);t.fade&&(r.from.opacity=1,r.to.opacity=0),e.effects.effect.size.call(this,r,i)})),e.effects.define("puff","hide",(function(t,i){var n=e.extend(!0,{},t,{fade:!0,percent:parseInt(t.percent,10)||150});e.effects.effect.scale.call(this,n,i)})),e.effects.define("pulsate","show",(function(t,i){var n=e(this),s=t.mode,a="show"===s,r=a||"hide"===s,o=2*(t.times||5)+(r?1:0),l=t.duration/o,h=0,u=1,c=n.queue().length;for((a||!n.is(":visible"))&&(n.css("opacity",0).show(),h=1);o>u;u++)n.animate({opacity:h},l,t.easing),h=1-h;n.animate({opacity:h},l,t.easing),n.queue(i),e.effects.unshift(n,c,o+1)})),e.effects.define("shake",(function(t,i){var n=1,s=e(this),a=t.direction||"left",r=t.distance||20,o=t.times||3,l=2*o+1,h=Math.round(t.duration/l),u="up"===a||"down"===a?"top":"left",c="up"===a||"left"===a,d={},f={},p={},m=s.queue().length;for(e.effects.createPlaceholder(s),d[u]=(c?"-=":"+=")+r,f[u]=(c?"+=":"-=")+2*r,p[u]=(c?"-=":"+=")+2*r,s.animate(d,h,t.easing);o>n;n++)s.animate(f,h,t.easing).animate(p,h,t.easing);s.animate(f,h,t.easing).animate(d,h/2,t.easing).queue(i),e.effects.unshift(s,m,l+1)})),e.effects.define("slide","show",(function(t,i){var n,s,a=e(this),r={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},o=t.mode,l=t.direction||"left",h="up"===l||"down"===l?"top":"left",u="up"===l||"left"===l,c=t.distance||a["top"===h?"outerHeight":"outerWidth"](!0),d={};e.effects.createPlaceholder(a),n=a.cssClip(),s=a.position()[h],d[h]=(u?-1:1)*c+s,d.clip=a.cssClip(),d.clip[r[l][1]]=d.clip[r[l][0]],"show"===o&&(a.cssClip(d.clip),a.css(h,d[h]),d.clip=n,d[h]=s),a.animate(d,{queue:!1,duration:t.duration,easing:t.easing,complete:i})})),!1!==e.uiBackCompat&&e.effects.define("transfer",(function(t,i){e(this).transfer(t,i)}))})?n.apply(t,s):n)||(e.exports=a)},function(e,t,i){(function(e){e(document).ready((function(){e(".input_with-mask-date").mask("99.99.9999",{placeholder:"ÐÐ.ÐÐ.ÐÐÐÐ"})}))}).call(this,i(0))},function(e,t,i){(function(e){e(document).ready((function(){e("#slider-range").slider({range:!0,min:200,max:15500,step:200,values:[5e3,1e4]}),e(".range").html('<span class="range-value">'+e("#slider-range").slider("values",0).toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1 ")+'<sup>â½</sup></span><span class="range-divider"></span><span class="range-value">'+e("#slider-range").slider("values",1).toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1 ")+"<sup>â½</sup></span>"),e("#slider-range").slider({slide:function(t,i){e(".range").html('<span class="range-value">'+i.values[0].toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1 ")+'<sup>â½</sup></span><span class="range-divider"></span><span class="range-value">'+i.values[1].toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1 ")+"<sup>â½</sup></span>");parseInt(e(this).data("value"));e(this).data({value:parseInt(i.value)})}})}))}).call(this,i(0))},function(e,t,i){(function(e){e(document).ready((function(){e(".checkbox-list__arrow").on("click",(function(){e(this).parent().toggleClass("checkbox-list_open")}))}))}).call(this,i(0))},function(e,t,i){(function(e){function t(e){return function(e){if(Array.isArray(e)){for(var t=0,i=new Array(e.length);t<e.length;t++)i[t]=e[t];return i}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}document.addEventListener("DOMContentLoaded",(function(i){var n=Math.ceil(15),s=e(".pagination"),a=(e(".paginationBody"),t(Array(n>4?5:n).keys()).slice(1));a.splice(3,1,n),function i(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;if(n>4){if(n-r<3&&r!==a[1])if(n-r>=2)r-=1;else{if(r!==a[a.length-2]&&r!==a[a.length-1])return;r=r-1-(2-(n-r))}else if(1!==r){if(r>a[1]&&r<a[a.length-2])return;r===a[1]?r=r-2>=-1&&r-2>=2?r-2:1:r-=1}else r=1;a.splice.apply(a,[1,a.length-2].concat(t(Array(2).fill(r).map((function(e,t){return e+(t+1)})))))}s.html(""),a.map((function(e){s.append("<a href="+e+">"+e+"</a>")})),a[1]>2&&e(s.children("a")[1]).before("<span>...</span>"),a[a.length-2]<n-1&&e(s.children("a")[a.length-1]).before("<span>...</span>"),s.children("a").on("click",(function(t){t.preventDefault(),i(+e(t.target).attr("href"))}))}()}))}).call(this,i(0))},,,,,,,,function(e,t,i){"use strict";i.r(t),function(e){i(5),i(44),i(8),i(31),i(22),i(24),i(25);var t=i(1),n=i.n(t);i(26),i(9),i(32),i(33),i(27),i(34),i(35),i(21);n.a.locale("ru"),e(document).ready((function(){e("#search-room__date-search").dateRangePicker({language:"ru",singleMonth:!0,showShortcuts:!1,showTopbar:!0,startOfWeek:"monday",format:"D MMM",separator:" - ",hoveringTooltip:!1,customArrowPrevSymbol:'<div class="calendar__arrow arrow"><i class="material-icons">arrow_back</i></div>',customArrowNextSymbol:'<div class="calendar__arrow arrow"><i class="material-icons">arrow_forward</i></div>'}).bind("datepicker-opened",(function(){var t=0;e(".month-wrapper .day").on("click",(function(){1==(t+=1)?e(this).parent().addClass("td-first-day-selected-temp"):2==t&&(e(this).parent().parent().parent().find(".td-first-day-selected-temp").removeClass("td-first-day-selected-temp"),t=0)})),e(".calendar__link_clear").click((function(t){t.stopPropagation(),e("#search-room__date-search").data("dateRangePicker").clear(),e(".td-checked").removeClass("td-checked td-first-day-selected-temp")})),e(".calendar__link_apply").click((function(t){t.stopPropagation(),e("#search-room__date-search").data("dateRangePicker").close()}))})),e("#search-room__date-search").data("dateRangePicker").setDateRange("19 Ð°Ð²Ð³.","23 Ð°Ð²Ð³.")}))}.call(this,i(0))},function(e,t,i){var n=i(45);"string"==typeof n&&(n=[[e.i,n,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};i(2)(n,s);n.locals&&(e.exports=n.locals)},function(e,t,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,